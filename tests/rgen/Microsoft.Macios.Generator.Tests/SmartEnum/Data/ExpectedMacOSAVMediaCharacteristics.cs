// <auto-generated />

#nullable enable

using Foundation;
using ObjCBindings;
using ObjCRuntime;
using System;
using System.Runtime.Versioning;

namespace AVFoundation;

[SupportedOSPlatform ("macos")]
[SupportedOSPlatform ("ios11.0")]
[SupportedOSPlatform ("tvos11.0")]
[SupportedOSPlatform ("maccatalyst13.1")]
[BindingImpl (BindingImplOptions.GeneratedCode | BindingImplOptions.Optimizable)]
static partial class AVMediaCharacteristicsExtensions
{

	static IntPtr[] values = new IntPtr [17];

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicVisual", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicVisual
	{
		get
		{
			fixed (IntPtr *storage = &values [0])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicVisual", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicAudible", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicAudible
	{
		get
		{
			fixed (IntPtr *storage = &values [1])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicAudible", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicLegible", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicLegible
	{
		get
		{
			fixed (IntPtr *storage = &values [2])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicLegible", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicFrameBased", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicFrameBased
	{
		get
		{
			fixed (IntPtr *storage = &values [3])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicFrameBased", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicUsesWideGamutColorSpace", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicUsesWideGamutColorSpace
	{
		get
		{
			fixed (IntPtr *storage = &values [4])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicUsesWideGamutColorSpace", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicIsMainProgramContent", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicIsMainProgramContent
	{
		get
		{
			fixed (IntPtr *storage = &values [5])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicIsMainProgramContent", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicIsAuxiliaryContent", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicIsAuxiliaryContent
	{
		get
		{
			fixed (IntPtr *storage = &values [6])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicIsAuxiliaryContent", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicContainsOnlyForcedSubtitles", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicContainsOnlyForcedSubtitles
	{
		get
		{
			fixed (IntPtr *storage = &values [7])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicContainsOnlyForcedSubtitles", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicTranscribesSpokenDialogForAccessibility", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicTranscribesSpokenDialogForAccessibility
	{
		get
		{
			fixed (IntPtr *storage = &values [8])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicTranscribesSpokenDialogForAccessibility", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicDescribesMusicAndSoundForAccessibility", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicDescribesMusicAndSoundForAccessibility
	{
		get
		{
			fixed (IntPtr *storage = &values [9])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicDescribesMusicAndSoundForAccessibility", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicDescribesVideoForAccessibility", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicDescribesVideoForAccessibility
	{
		get
		{
			fixed (IntPtr *storage = &values [10])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicDescribesVideoForAccessibility", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicLanguageTranslation", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicLanguageTranslation
	{
		get
		{
			fixed (IntPtr *storage = &values [11])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicLanguageTranslation", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicDubbedTranslation", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicDubbedTranslation
	{
		get
		{
			fixed (IntPtr *storage = &values [12])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicDubbedTranslation", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios11.0")]
	[SupportedOSPlatform ("tvos11.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicVoiceOverTranslation", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicVoiceOverTranslation
	{
		get
		{
			fixed (IntPtr *storage = &values [13])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicVoiceOverTranslation", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios13.0")]
	[SupportedOSPlatform ("tvos13.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicIsOriginalContent", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicIsOriginalContent
	{
		get
		{
			fixed (IntPtr *storage = &values [14])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicIsOriginalContent", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios14.0")]
	[SupportedOSPlatform ("tvos14.0")]
	[SupportedOSPlatform ("maccatalyst14.0")]
	[Field ("AVMediaCharacteristicContainsHDRVideo", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicContainsHDRVideo
	{
		get
		{
			fixed (IntPtr *storage = &values [15])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicContainsHDRVideo", storage);
		}
	}

	[SupportedOSPlatform ("macos")]
	[SupportedOSPlatform ("ios13.0")]
	[SupportedOSPlatform ("tvos13.0")]
	[SupportedOSPlatform ("maccatalyst13.1")]
	[Field ("AVMediaCharacteristicContainsAlphaChannel", "AVFoundation")]
	internal unsafe static IntPtr AVMediaCharacteristicContainsAlphaChannel
	{
		get
		{
			fixed (IntPtr *storage = &values [16])
				return Dlfcn.CachePointer (Libraries.AVFoundation.Handle, "AVMediaCharacteristicContainsAlphaChannel", storage);
		}
	}

	public static NSString? GetConstant (this AVMediaCharacteristics self)
	{
		IntPtr ptr = IntPtr.Zero;
		switch ((int) self)
		{
			case 0: // AVMediaCharacteristicVisual
				ptr = AVMediaCharacteristicVisual;
				break;
			case 1: // AVMediaCharacteristicAudible
				ptr = AVMediaCharacteristicAudible;
				break;
			case 2: // AVMediaCharacteristicLegible
				ptr = AVMediaCharacteristicLegible;
				break;
			case 3: // AVMediaCharacteristicFrameBased
				ptr = AVMediaCharacteristicFrameBased;
				break;
			case 4: // AVMediaCharacteristicUsesWideGamutColorSpace
				ptr = AVMediaCharacteristicUsesWideGamutColorSpace;
				break;
			case 5: // AVMediaCharacteristicIsMainProgramContent
				ptr = AVMediaCharacteristicIsMainProgramContent;
				break;
			case 6: // AVMediaCharacteristicIsAuxiliaryContent
				ptr = AVMediaCharacteristicIsAuxiliaryContent;
				break;
			case 7: // AVMediaCharacteristicContainsOnlyForcedSubtitles
				ptr = AVMediaCharacteristicContainsOnlyForcedSubtitles;
				break;
			case 8: // AVMediaCharacteristicTranscribesSpokenDialogForAccessibility
				ptr = AVMediaCharacteristicTranscribesSpokenDialogForAccessibility;
				break;
			case 9: // AVMediaCharacteristicDescribesMusicAndSoundForAccessibility
				ptr = AVMediaCharacteristicDescribesMusicAndSoundForAccessibility;
				break;
			case 10: // AVMediaCharacteristicDescribesVideoForAccessibility
				ptr = AVMediaCharacteristicDescribesVideoForAccessibility;
				break;
			case 11: // AVMediaCharacteristicLanguageTranslation
				ptr = AVMediaCharacteristicLanguageTranslation;
				break;
			case 12: // AVMediaCharacteristicDubbedTranslation
				ptr = AVMediaCharacteristicDubbedTranslation;
				break;
			case 13: // AVMediaCharacteristicVoiceOverTranslation
				ptr = AVMediaCharacteristicVoiceOverTranslation;
				break;
			case 14: // AVMediaCharacteristicIsOriginalContent
				ptr = AVMediaCharacteristicIsOriginalContent;
				break;
			case 15: // AVMediaCharacteristicContainsHDRVideo
				ptr = AVMediaCharacteristicContainsHDRVideo;
				break;
			case 16: // AVMediaCharacteristicContainsAlphaChannel
				ptr = AVMediaCharacteristicContainsAlphaChannel;
				break;
		}
		return (NSString?) Runtime.GetNSObject (ptr);
	}

	public static AVMediaCharacteristics GetValue (NSString constant)
	{
		if (constant is null)
			throw new ArgumentNullException (nameof (constant));
		if (constant.IsEqualTo (AVMediaCharacteristicVisual))
			return AVMediaCharacteristics.Visual;
		if (constant.IsEqualTo (AVMediaCharacteristicAudible))
			return AVMediaCharacteristics.Audible;
		if (constant.IsEqualTo (AVMediaCharacteristicLegible))
			return AVMediaCharacteristics.Legible;
		if (constant.IsEqualTo (AVMediaCharacteristicFrameBased))
			return AVMediaCharacteristics.FrameBased;
		if (constant.IsEqualTo (AVMediaCharacteristicUsesWideGamutColorSpace))
			return AVMediaCharacteristics.UsesWideGamutColorSpace;
		if (constant.IsEqualTo (AVMediaCharacteristicIsMainProgramContent))
			return AVMediaCharacteristics.IsMainProgramContent;
		if (constant.IsEqualTo (AVMediaCharacteristicIsAuxiliaryContent))
			return AVMediaCharacteristics.IsAuxiliaryContent;
		if (constant.IsEqualTo (AVMediaCharacteristicContainsOnlyForcedSubtitles))
			return AVMediaCharacteristics.ContainsOnlyForcedSubtitles;
		if (constant.IsEqualTo (AVMediaCharacteristicTranscribesSpokenDialogForAccessibility))
			return AVMediaCharacteristics.TranscribesSpokenDialogForAccessibility;
		if (constant.IsEqualTo (AVMediaCharacteristicDescribesMusicAndSoundForAccessibility))
			return AVMediaCharacteristics.DescribesMusicAndSoundForAccessibility;
		if (constant.IsEqualTo (AVMediaCharacteristicDescribesVideoForAccessibility))
			return AVMediaCharacteristics.DescribesVideoForAccessibility;
		if (constant.IsEqualTo (AVMediaCharacteristicLanguageTranslation))
			return AVMediaCharacteristics.LanguageTranslation;
		if (constant.IsEqualTo (AVMediaCharacteristicDubbedTranslation))
			return AVMediaCharacteristics.DubbedTranslation;
		if (constant.IsEqualTo (AVMediaCharacteristicVoiceOverTranslation))
			return AVMediaCharacteristics.VoiceOverTranslation;
		if (constant.IsEqualTo (AVMediaCharacteristicIsOriginalContent))
			return AVMediaCharacteristics.IsOriginalContent;
		if (constant.IsEqualTo (AVMediaCharacteristicContainsHDRVideo))
			return AVMediaCharacteristics.ContainsHdrVideo;
		if (constant.IsEqualTo (AVMediaCharacteristicContainsAlphaChannel))
			return AVMediaCharacteristics.ContainsAlphaChannel;
		throw new NotSupportedException ($"The constant {constant} has no associated enum value on this platform.");
	}

	internal static NSString?[]? ToConstantArray (this AVMediaCharacteristics[]? values)
	{
		if (values is null)
			return null;
		var rv = new global::System.Collections.Generic.List<NSString?> ();
		for (var i = 0; i < values.Length; i++) {
			var value = values [i];
			rv.Add (value.GetConstant ());
		}
		return rv.ToArray ();
	}

	internal static AVMediaCharacteristics[]? ToEnumArray (this NSString[]? values)
	{
		if (values is null)
			return null;
		var rv = new global::System.Collections.Generic.List<AVMediaCharacteristics> ();
		for (var i = 0; i < values.Length; i++) {
			var value = values [i];
			rv.Add (GetValue (value));
		}
		return rv.ToArray ();
	}
}
