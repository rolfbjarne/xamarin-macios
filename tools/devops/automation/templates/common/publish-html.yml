# Job that will download the other artifact from the tests job and will publish them in the 
# vsdrops

###########################################################
# WARNING WARNING WARNING WARNING WARNING WARNING WARNING #
###########################################################

# This job is executed on WINDOWS! make sure you DO NOT USE
# bash or linux file paths on scripts. Another important
# details is that System.DefaultWorkingDirectory
# on mac os x points on the top dir while on windows 
# is the checked out dir

parameters:

- name: statusContext
  type: string 
  default: 'iOS Device Tests' # default context, since we started dealing with iOS devices. 

- name: vsdropsPrefix
  type: string

- name: testPrefix
  type: string 
  default: 'ios' # default context, since we started dealing with iOS devices. 

- name: provisioningFailed
  type: string 
  default: 'False'

steps:

- template: checkout.yml

- template: download-artifacts.yml 
  parameters:
    testPrefix: ${{ parameters.testPrefix }}

# Use the cmdlet to post a new summary comment. The cmdlet checks if we have the TestSummary.md file or not. It will also add the appropriate links to the comment. 
# this step uses variables that have been set by the tests job dependency via output variables, those variables contain if the xamarin-storage could be used and its path
- pwsh: |
    $env:VSDROPS_INDEX="$Env:VSDROPSPREFIX/$Env:BUILD_BUILDNUMBER/$Env:BUILD_BUILDID/$Env:DEVICE_PREFIX/;/tests/vsdrops_index.html"
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY\xamarin-macios\tools\devops\automation\scripts\MaciosCI.psd1
    $response = New-GitHubSummaryComment -Context "$Env:CONTEXT" -TestSummaryPath "$Env:TESTS_SUMMARY" -DeviceTest
    Write-Host $response
    if($Env:TESTS_JOBSTATUS -ne "Succeeded")
    {
      Set-PipelineResult -Status partiallySucceeded
    }
  env:
    BUILD_REVISION: $(Build.SourceVersion)
    CONTEXT: ${{ parameters.statusContext }}
    DEVICE_PREFIX: ${{ parameters.testPrefix }}
    GITHUB_TOKEN: $(GitHub.Token)
    TESTS_JOBSTATUS: $(TESTS_JOBSTATUS) # set by the runTests step
    TESTS_SUMMARY: $(TEST_SUMMARY_PATH)
    ACCESSTOKEN: $(System.AccessToken)
  displayName: 'Add summaries'
  condition: always()
  timeoutInMinutes: 15
