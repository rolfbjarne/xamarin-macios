parameters:
- name: enableDotnet
  type: boolean
  default: true

- name: dependsOn
  type: string
  default: build_packages

stages:
- stage: prepare_release
  displayName: Prepare Release
  dependsOn: ${{ parameters.dependsOn }}
  condition: and(or(eq(dependencies.${{ parameters.dependsOn }}.result, 'Succeeded'), eq(dependencies.${{ parameters.dependsOn }}.result, 'SucceededWithIssues')), eq(variables.IsPRBuild, 'False'), eq(${{ parameters.enableDotnet }}, true))
  jobs:
  # Check - "xamarin-macios (Prepare Release Sign NuGets)"
  - template: sign-artifacts/jobs/v2.yml@templates
    parameters:
      artifactName: package
      signType: Real
      usePipelineArtifactTasks: true

  # Check - "xamarin-macios (Prepare Release Convert NuGet to MSI)"
  - template: nuget-msi-convert/job/v1.yml@templates
    parameters:
      yamlResourceName: templates
      dependsOn: signing
      artifactName: nuget-signed
      artifactPatterns: |
        Microsoft.NET.Sdk.iOS.Manifest*.nupkg
        Microsoft.NET.Sdk.MacCatalyst.Manifest*.nupkg
        Microsoft.iOS*.nupkg
        Microsoft.MacCatalyst*.nupkg
      propsArtifactName: package
      signType: Real

  # Check - "xamarin-macios (Prepare Release Push NuGets)"
  - job: push_signed_nugets
    displayName: Push NuGets
    dependsOn: signing
    variables:
      skipNugetSecurityAnalysis: true
    pool:
      vmImage: macOS-10.15
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: nuget-signed
        downloadPath: $(Build.SourcesDirectory)/package
        patterns: |
          *.nupkg

    - task: NuGetCommand@2
      displayName: Publish Nugets to xamarin-impl
      inputs:
        command: push
        packagesToPush: $(Build.SourcesDirectory)/package/*.nupkg
        nuGetFeedType: external
        publishFeedCredentials: xamarin-impl public feed

# Check - "xamarin-macios (VS Insertion Wait For Approval)"
# Check - "xamarin-macios (VS Insertion Create VS Drop and Open PR)"
- template: vs-insertion/stage/v1.yml@templates
  parameters:
    dependsOn: prepare_release
    condition: eq(variables.IsPRBuild, 'False')
