parameters:

- name: isPR
  type: boolean

- name: repositoryAlias
  type: string
  default: self

- name: commit
  type: string
  default: HEAD

steps:

- template: ./common/checkout.yml
  parameters:
    isPR: ${{ parameters.isPR }}
    repositoryAlias: ${{ parameters.repositoryAlias }}
    commit: ${{ parameters.commit }}

- task: CredScan@3
  displayName: "Run CredScan"
  inputs:
    suppressionsFile: '$(System.DefaultWorkingDirectory)/maccore/tools/devops/CredScanSuppressions.json'
    outputFormat: 'sarif'
    verboseOutput: true
  
- powershell: |
    Write-Host 'Source dir $(Build.SourcesDirectory)'
    Write-Host 'Working dir $System.DefaultWorkingDirectory)'

    Dir $(Build.SourcesDirectory)
    Dir $(System.DefaultWorkingDirectory)
  displayName: Show directories

- powershell: |
    Write-Host "IsMacOS: ${IsMacOS}"
    Write-Host "IsWindows: ${IsWindows}"
    Write-Host "IsLinux: ${IsLinux}"

    if ($IsMacOS -or $IsLinux) {
        Write-Host "HOSTNAME: $(hostname)"
    } else {
        Write-Host "COMPUTERNAME: ${env:COMPUTERNAME}"
    }

    gci env: | format-table -autosize -wrap
  displayName: 'Show Environment'

- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'

- task: PoliCheck@1
  inputs:
    inputType: 'Basic'
    targetType: 'F'
    targetArgument: '$(Build.SourcesDirectory)'
    result: 'PoliCheck.xml'
    optionsUEPATH: '$(System.DefaultWorkingDirectory)/maccore/tools/devops/PoliCheckExclusions.xml'

- task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@1
  displayName: 'Post Analysis'
  inputs:
    CredScan: true
    PoliCheck: true

- task: WhiteSource Bolt@20
  displayName: "WhiteSource Bolt analysis"
  inputs:
    cwd: $(System.DefaultWorkingDirectory)
