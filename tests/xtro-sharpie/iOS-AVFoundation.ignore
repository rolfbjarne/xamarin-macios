## OSX-only enums - fixed in XAMCORE_3_0
!unknown-native-enum! AVCaptureDeviceTransportControlsPlaybackMode bound
!unknown-native-enum! AVVideoFieldMode bound

## from iOS 4.0 to 5.1
!unknown-field! AVMediaTypeTimedMetadata bound

## no generator support for NSFastEnumeration / https://bugzilla.xamarin.com/show_bug.cgi?id=4391
!missing-protocol-conformance! AVCaptureSynchronizedDataCollection should conform to NSFastEnumeration

## https://github.com/xamarin/xamarin-macios/issues/3213 should be fixed before conformance to 'AVQueuedSampleBufferRendering' is restored.
!missing-protocol-conformance! AVSampleBufferDisplayLayer should conform to AVQueuedSampleBufferRendering (defined in 'AVSampleBufferDisplayLayerQueueManagement' category)

# Deprecated in iOS 6.0 but we have same C# signature as a method that was deprecated in iOS 8.0
!deprecated-attribute-wrong! AVAudioRecorderDelegate::audioRecorderEndInterruption:withFlags: has 8.0 not 6.0 on [Deprecated] attribute
!missing-protocol! AVVideoCompositionInstruction not bound
!incorrect-protocol-member! AVAssetResourceLoaderDelegate::resourceLoader:shouldWaitForLoadingOfRequestedResource: is OPTIONAL and should NOT be abstract
!unknown-native-enum! AVAudioSessionFlags bound
!missing-protocol-conformance! AVVideoCompositionInstruction should conform to AVVideoCompositionInstruction
!missing-protocol-member! AVAudioPlayerDelegate::audioPlayerEndInterruption:withFlags: not found
!missing-protocol-member! AVAudioRecorderDelegate::audioRecorderEndInterruption:withOptions: not found
!missing-field! AVCoreAnimationBeginTimeAtZero not bound
!missing-field! AVVideoTransferFunction_ITU_R_2100_HLG not bound
!missing-field! AVVideoTransferFunction_SMPTE_ST_2084_PQ not bound
!missing-selector! AVVideoComposition::sourceTrackIDForFrameTiming not bound
!incorrect-protocol-member! AVAudio3DMixing::pointSourceInHeadMode is REQUIRED and should be abstract
!incorrect-protocol-member! AVAudio3DMixing::setPointSourceInHeadMode: is REQUIRED and should be abstract
!incorrect-protocol-member! AVAudio3DMixing::setSourceMode: is REQUIRED and should be abstract
!incorrect-protocol-member! AVAudio3DMixing::sourceMode is REQUIRED and should be abstract
!extra-null-allowed! 'Foundation.NSNumber[] AVFoundation.AVVideoCompositionInstruction::get_RequiredSourceTrackIDs()' has a extraneous [NullAllowed] on return type
!missing-field! AVPlayerItemTimeJumpedOriginatingParticipantKey not bound

## https://github.com/xamarin/xamarin-macios/issues/16229 prevents crashing instead of return null
## so these selectors have been bound manually
!missing-selector! AVAudioPlayer::initWithContentsOfURL:error: not bound
!missing-selector! AVAudioPlayer::initWithData:error: not bound


!incorrect-protocol-member! AVAudioMixing::destinationForMixer:bus: is REQUIRED and should be abstract
!missing-selector! AVMutableComposition::tracks not bound
!missing-protocol-conformance! AVAsset should conform to AVAsynchronousKeyValueLoading
!missing-protocol-conformance! AVAssetTrack should conform to AVAsynchronousKeyValueLoading
!missing-protocol-conformance! AVMetadataItem should conform to AVAsynchronousKeyValueLoading
!missing-selector! +AVAudioChannelLayout::layoutWithLayout: not bound
!missing-selector! +AVAudioChannelLayout::layoutWithLayoutTag: not bound
!missing-selector! AVCompositionTrack::segmentForTrackTime: not bound
!missing-selector! NSCoder::decodeCMTimeForKey: not bound
!missing-selector! NSCoder::decodeCMTimeMappingForKey: not bound
!missing-selector! NSCoder::decodeCMTimeRangeForKey: not bound
!missing-selector! NSCoder::encodeCMTime:forKey: not bound
!missing-selector! NSCoder::encodeCMTimeMapping:forKey: not bound
!missing-selector! NSCoder::encodeCMTimeRange:forKey: not bound
!extra-null-allowed! 'AVFoundation.AVAudioTime AVFoundation.AVAudioTime::FromAudioTimeStamp(AudioToolbox.AudioTimeStamp&,System.Double)' has a extraneous [NullAllowed] on parameter #0
!extra-null-allowed! 'System.Void AVFoundation.AVAudioFormat::.ctor(AudioToolbox.AudioStreamBasicDescription&)' has a extraneous [NullAllowed] on parameter #0
!extra-null-allowed! 'System.Void AVFoundation.AVAudioFormat::.ctor(AudioToolbox.AudioStreamBasicDescription&,AVFoundation.AVAudioChannelLayout)' has a extraneous [NullAllowed] on parameter #0
!extra-null-allowed! 'System.Void AVFoundation.AVAudioTime::.ctor(AudioToolbox.AudioTimeStamp&,System.Double)' has a extraneous [NullAllowed] on parameter #0
!extra-null-allowed! 'AVFoundation.AVPlayerItem AVFoundation.AVPlayerItem::FromAsset(AVFoundation.AVAsset)' has a extraneous [NullAllowed] on parameter #0
!extra-null-allowed! 'AVFoundation.AVPlayerItem AVFoundation.AVPlayerItem::FromAsset(AVFoundation.AVAsset,Foundation.NSString[])' has a extraneous [NullAllowed] on parameter #0
!missing-null-allowed! 'System.Boolean AVFoundation.AVPlayerItem::Seek(Foundation.NSDate,AVFoundation.AVCompletion)' is missing an [NullAllowed] on parameter #1
!missing-protocol-conformance! AVURLAsset should conform to NSItemProviderReading (defined in 'AVURLAssetNSItemProvider' category)
!missing-protocol-conformance! AVURLAsset should conform to NSItemProviderWriting (defined in 'AVURLAssetNSItemProvider' category)
!missing-pinvoke! AVSampleBufferAttachContentKey is not bound
!incorrect-protocol-member! AVQueuedSampleBufferRendering::hasSufficientMediaDataForReliablePlaybackStart is REQUIRED and should be abstract
