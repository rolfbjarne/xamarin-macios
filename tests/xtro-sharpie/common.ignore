# ARKit

## This method is manually bound.
!wrong-simd-missing-marshaldirective! System.IntPtr ARKit.ARPointCloud::GetRawPoints(): simd type: vector_float3

# AVFoundation

## We only bind "finished" as we cannot use [Bind] here as it would break compatibility with iOS 6.x
## `isFinished` was only added in iOS 7.0 SDK and cannot be called in earlier versions
!missing-selector! AVAssetResourceLoadingRequest::isFinished not bound

## it's already defined in the base class, it's fine even if it returns mutable tracks in this case 
!missing-selector! AVMutableComposition::tracks not bound

## AVVideoCompositionInstruction is both a class and a protocol - so we have duplicate entries
## and right now only implement the type (protocol can't have the same name anyway)
!missing-selector! AVVideoCompositionInstruction::enablePostProcessing not bound
!missing-selector! AVVideoCompositionInstruction::passthroughTrackID not bound
!missing-selector! AVVideoCompositionInstruction::requiredSourceTrackIDs not bound
!missing-selector! AVVideoCompositionInstruction::timeRange not bound

## AVAudioPlayer INTERRUPTION NOTIFICATIONS ARE DEPRECATED - Use AVAudioSession instead. 

### deprecated in iOS8
!missing-protocol-member! AVAudioPlayerDelegate::audioPlayerEndInterruption:withFlags: not found
### deprecated in iOS6, replaced by above
!missing-protocol-member! AVAudioPlayerDelegate::audioPlayerEndInterruption:withOptions: not found
## deprecated in iOS8
!missing-protocol-member! AVAudioRecorderDelegate::audioRecorderEndInterruption:withOptions: not found

## Used only once in a deprecated API, native use `NSInteger` not a real enum - that's why there's a `[Native]`
!unknown-native-enum! AVAudioSessionFlags bound

## native use `NSUInteger` not a real enum - that's why there's a `[Native]`
!unknown-native-enum! AVAudioSessionInterruptionFlags bound


# CoreFoundation

## we already expose the NSURLFileProtection* constants
!missing-field! kCFURLFileProtectionComplete not bound
!missing-field! kCFURLFileProtectionCompleteUnlessOpen not bound
!missing-field! kCFURLFileProtectionCompleteUntilFirstUserAuthentication not bound
!missing-field! kCFURLFileProtectionKey not bound
!missing-field! kCFURLFileProtectionNone not bound


# CoreGraphics

## deprecated (as the name indicates) and not exposed
!missing-enum! CGGlyphDeprecatedEnum not bound

## there's another P/Invoke that returns the same result according to the documentation (CGColorSpaceCopyName), so no need to bind another one.
!missing-pinvoke! CGColorSpaceGetName is not bound

# CoreSpotlight

## low value (should use OS version for any checks)
!missing-field! CoreSpotlightVersionNumber not bound
!missing-field! CoreSpotlightVersionString not bound


# Foundation

## native long is same size as int (.net long is long long)
!missing-selector! NSNumber::initWithLong: not bound
!missing-selector! NSNumber::initWithUnsignedLong: not bound

## should not have been [Native] it's 32bits only values -> XAMCORE_4_0
!unknown-native-enum! NSBundleExecutableArchitecture bound

## enum was [re]named to NSCalendarOptions - excluding from XAMCORE_4_0
!unknown-native-enum! NSDateComponentsWrappingBehavior bound


# GameKit

## All GKSessionError values were deprecated in iOS7 and we never bound then (no point in adding it now)
!missing-field! GKSessionErrorDomain not bound

## enum size declared after the enum, e.g. `typedef NSInteger GKPhotoSize;`, so we miss the metadata
!unknown-native-enum! GKInviteeResponse bound
!unknown-native-enum! GKPhotoSize bound

## part of category GKScore_Deprecated
!missing-selector! GKScore::playerID not bound

# Intents

## not exposed by our API (better use the OS version)
!missing-field! IntentsVersionNumber not bound
!missing-field! IntentsVersionString not bound

## new (Xcode9) @required members of an older type cannot be made abstract
!incorrect-protocol-member! INSpeakable::alternativeSpeakableMatches is REQUIRED and should be abstract
!incorrect-protocol-member! INSpeakable::vocabularyIdentifier is REQUIRED and should be abstract

## new types that has deprecated members (likely to be removed from headers at some point)
!missing-selector! +INCallDestinationTypeResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INCallDestinationTypeResolutionResult::successWithResolvedValue: not bound
!missing-selector! +INCallRecordTypeOptionsResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INCallRecordTypeOptionsResolutionResult::successWithResolvedValue: not bound
!missing-selector! +INAccountTypeResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INAccountTypeResolutionResult::successWithResolvedValue: not bound
!missing-selector! +INBalanceTypeResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INBalanceTypeResolutionResult::successWithResolvedValue: not bound
!missing-selector! +INDateSearchTypeResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INDateSearchTypeResolutionResult::successWithResolvedValue: not bound
!missing-selector! +INLocationSearchTypeResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INLocationSearchTypeResolutionResult::successWithResolvedValue: not bound
!missing-selector! +INNoteContentTypeResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INNoteContentTypeResolutionResult::successWithResolvedValue: not bound
!missing-selector! +INNotebookItemTypeResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INNotebookItemTypeResolutionResult::successWithResolvedValue: not bound
!missing-selector! +INTaskStatusResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INTaskStatusResolutionResult::successWithResolvedValue: not bound
!missing-selector! +INVisualCodeTypeResolutionResult::confirmationRequiredWithValueToConfirm: not bound
!missing-selector! +INVisualCodeTypeResolutionResult::successWithResolvedValue: not bound


# CloudKit

## default init does not work, there's no init in base types, so it's a defacto designated initializer
!extra-designated-initializer! CKMarkNotificationsReadOperation::initWithNotificationIDsToMarkRead: is incorrectly decorated with an [DesignatedInitializer] attribute
## we offer a better managed API using another selector
!missing-selector! CKRecord::objectForKeyedSubscript: not bound
!missing-selector! CKRecord::setObject:forKeyedSubscript: not bound


# PassKit

## made optional in xcode9 beta 3 since they were replaced with newer API
!incorrect-protocol-member! PKPaymentAuthorizationControllerDelegate::paymentAuthorizationController:didAuthorizePayment:completion: is OPTIONAL and should NOT be abstract
!incorrect-protocol-member! PKPaymentAuthorizationViewControllerDelegate::paymentAuthorizationViewController:didAuthorizePayment:completion: is OPTIONAL and should NOT be abstract


# Metal

## New @required (abstract) methods in existing types (breaking changes)
!incorrect-protocol-member! MTLBlitCommandEncoder::updateFence: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLBlitCommandEncoder::waitForFence: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLComputeCommandEncoder::updateFence: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLComputeCommandEncoder::waitForFence: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDevice::heapBufferSizeAndAlignWithLength:options: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDevice::heapTextureSizeAndAlignWithDescriptor: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDevice::newFence is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDevice::newHeapWithDescriptor: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::updateFence:afterStages: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::waitForFence:beforeStages: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLResource::heap is REQUIRED and should be abstract
!incorrect-protocol-member! MTLResource::isAliasable is REQUIRED and should be abstract
!incorrect-protocol-member! MTLResource::makeAliasable is REQUIRED and should be abstract
!incorrect-protocol-member! MTLCommandBuffer::presentDrawable:afterMinimumDuration: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDrawable::addPresentedHandler: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDrawable::drawableID is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDrawable::presentAfterMinimumDuration: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDrawable::presentedTime is REQUIRED and should be abstract
!incorrect-protocol-member! MTLBuffer::addDebugMarker:range: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLBuffer::removeAllDebugMarkers is REQUIRED and should be abstract
!incorrect-protocol-member! MTLCommandBuffer::GPUEndTime is REQUIRED and should be abstract
!incorrect-protocol-member! MTLCommandBuffer::GPUStartTime is REQUIRED and should be abstract
!incorrect-protocol-member! MTLCommandBuffer::kernelEndTime is REQUIRED and should be abstract
!incorrect-protocol-member! MTLCommandBuffer::kernelStartTime is REQUIRED and should be abstract
!incorrect-protocol-member! MTLComputeCommandEncoder::dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLComputeCommandEncoder::setStageInRegion: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDevice::maxThreadsPerThreadgroup is REQUIRED and should be abstract
!incorrect-protocol-member! MTLDevice::newDefaultLibraryWithBundle:error: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLFunction::functionConstantsDictionary is REQUIRED and should be abstract
!incorrect-protocol-member! MTLFunction::label is REQUIRED and should be abstract
!incorrect-protocol-member! MTLFunction::patchControlPointCount is REQUIRED and should be abstract
!incorrect-protocol-member! MTLFunction::patchType is REQUIRED and should be abstract
!incorrect-protocol-member! MTLFunction::setLabel: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLFunction::stageInputAttributes is REQUIRED and should be abstract
!incorrect-protocol-member! MTLLibrary::newFunctionWithName:constantValues:completionHandler: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLLibrary::newFunctionWithName:constantValues:error: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLParallelRenderCommandEncoder::setColorStoreAction:atIndex: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLParallelRenderCommandEncoder::setDepthStoreAction: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLParallelRenderCommandEncoder::setStencilStoreAction: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::drawPrimitives:indirectBuffer:indirectBufferOffset: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::setColorStoreAction:atIndex: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::setDepthStoreAction: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::setStencilStoreAction: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::setTessellationFactorBuffer:offset:instanceStride: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLRenderCommandEncoder::setTessellationFactorScale: is REQUIRED and should be abstract
!incorrect-protocol-member! MTLResource::storageMode is REQUIRED and should be abstract
!incorrect-protocol-member! MTLTexture::buffer is REQUIRED and should be abstract
!incorrect-protocol-member! MTLTexture::bufferBytesPerRow is REQUIRED and should be abstract
!incorrect-protocol-member! MTLTexture::bufferOffset is REQUIRED and should be abstract
!incorrect-protocol-member! MTLTexture::parentRelativeLevel is REQUIRED and should be abstract
!incorrect-protocol-member! MTLTexture::parentRelativeSlice is REQUIRED and should be abstract
!incorrect-protocol-member! MTLTexture::parentTexture is REQUIRED and should be abstract
!incorrect-protocol-member! MTLTexture::usage is REQUIRED and should be abstract


# ModelIO

## we only export the overload that expose an NSError
!missing-selector! MDLAsset::exportAssetToURL: not bound

## those are just doing the same as the setComponent:forProtocol: and componentConformingToProtocol:
## objectForKeyedSubscript:'s description is: "Allows shorthand [key] syntax for componentConformingToProtocol:"
!missing-selector! MDLAsset::objectForKeyedSubscript: not bound
!missing-selector! MDLAsset::setObject:forKeyedSubscript: not bound
!missing-selector! MDLObject::objectForKeyedSubscript: not bound
!missing-selector! MDLObject::setObject:forKeyedSubscript: not bound

## old @optional methods that became @required (abstract) in existing types (breaking changes)
!incorrect-protocol-member! MDLMeshBuffer::allocator is REQUIRED and should be abstract
!incorrect-protocol-member! MDLMeshBuffer::length is REQUIRED and should be abstract
!incorrect-protocol-member! MDLMeshBuffer::type is REQUIRED and should be abstract
!incorrect-protocol-member! MDLMeshBuffer::zone is REQUIRED and should be abstract
!incorrect-protocol-member! MDLMeshBufferZone::allocator is REQUIRED and should be abstract
!incorrect-protocol-member! MDLMeshBufferZone::capacity is REQUIRED and should be abstract

# Security

## part of mscorlib.dll -> mcs/class/corlib/CommonCrypto/CommonCrypto.cs to implement RNGCryptoServiceProvider
!missing-pinvoke! SecRandomCopyBytes is not bound


# SpriteKit

## both introduced and deprecated in Xcode8
!missing-selector! SKView::preferredFrameRate not bound
!missing-selector! SKView::setPreferredFrameRate: not bound

## it's an internal that is called from a non-generated binding
!incorrect-designated-initializer! SKWarpGeometryGrid::initWithColumns:rows:sourcePositions:destPositions: is not a constructor


# UIKit

## no point in having p/invoke calls that can be implement with a type cast (byte vs nint)
!missing-pinvoke! NSTextAlignmentFromCTTextAlignment is not bound
!missing-pinvoke! NSTextAlignmentToCTTextAlignment is not bound

## this was (pre iOS10) a required member that was deprecated and made optional
!incorrect-protocol-member! UIFocusEnvironment::preferredFocusedView is OPTIONAL and should NOT be abstract

## https://bugzilla.xamarin.com/show_bug.cgi?id=43788
!missing-selector! +UIView::layerClass not bound


# Vision

## we do not expose internal framework versions
!missing-field! VNVisionVersionNumber not bound

## called indirectly (there's a required native layer for them)
!missing-pinvoke! VNImagePointForFaceLandmarkPoint is not bound
!missing-pinvoke! VNNormalizedFaceBoundingBoxPointForLandmarkPoint is not bound


# non-imported headers

## objc runtime
!unknown-pinvoke! class_addProperty bound

## CoreLocation
# We have our own managed ctor
!missing-pinvoke! CLLocationCoordinate2DMake is not bound

## PDFKit
# The following enums are bound as PdfFoo, lowercase Pdf prefix
!missing-enum! PDFActionNamedName not bound
!missing-enum! PDFAreaOfInterest not bound
!missing-enum! PDFBorderStyle not bound
!missing-enum! PDFDisplayBox not bound
!missing-enum! PDFDisplayDirection not bound
!missing-enum! PDFDisplayMode not bound
!missing-enum! PDFDocumentPermissions not bound
!missing-enum! PDFInterpolationQuality not bound
!missing-enum! PDFLineStyle not bound
!missing-enum! PDFMarkupType not bound
!missing-enum! PDFTextAnnotationIconType not bound
!missing-enum! PDFWidgetCellState not bound
!missing-enum! PDFWidgetControlType not bound

# WebKit
## Header file missing from umbrella header, but used by WKWebView, which IS included in the umbrella.
!unknown-type! WKSnapshotConfiguration bound
