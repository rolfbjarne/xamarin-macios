
# Job that will download the other artifact from the tests job and will publish them in the 
# vsdrops

###########################################################
# WARNING WARNING WARNING WARNING WARNING WARNING WARNING #
###########################################################

# This job is executed on WINDOWS! make sure you DO NOT USE
# bash or linux file paths on scripts. Another important
# details is that System.DefaultWorkingDirectory
# on mac os x points on the top dir while on windows 
# is the checked out dir

parameters:

- name: statusContext
  type: string 
  default: 'iOS Device Tests' # default context, since we started dealing with iOS devices. 

- name: vsdropsPrefix
  type: string

- name: devicePrefix
  type: string 
  default: 'ios' # default context, since we started dealing with iOS devices. 

steps:

- checkout: self
  persistCredentials: true

- template: download-artifacts.yml 

- pwsh: |
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY\xamarin-macios\tools\devops\automation\scripts\GitHub.psm1

    $apiDiffRoot = "$Env:STABLE_APIDDIFF_PATH"
    $filePatterns = @{
      "iOS" = "ios-*.md";
      "macOS"="macos-*.md";
      "tvOS"="tvos-*.md";
      "watchOS"="watchos-*.md"
    }

    [System.Collections.Generic.List[string]]$gistsObj = @()
    [System.Collections.Generic.List[string]]$gists = @{}

    foreach ($key in $filePatterns.Keys) {
      $filter = $filePatterns[$key]
      $fileName = Get-ChildItem $apiDiffRoot -Filter $filter -Name
      if ($fileName) {
        $obj = New-GistObjectDefinition -Name $fileName -Path "$apiDiffRoot\$fileName" -Type "markdown"
        $gistsObj.Add($obj)
        # create a gist just for this file 
        $url = New-GistWithFiles -Description "$key API diff from stable" -Files @($obj)
        Write-Host "New gist created at $url"
        $gists.Add($key, $url)
      }
    }

    # create a gist with all diffs
    $url = New-GistWithFiles -Description "API diff from stable (all platforms)" -Files $gistsObj 
    $gists.Add("all", $url)

    # set env variables to be used in later jobs
    foreach ($key in $gists.Keys) {
      $envVarName = "$($key.ToUpper())_STABLE_URL" # results in ALL_STABLE_URL/IOS_STABLE_URL etc
      $url = $gists[$key]
      Write-Host "##vso[task.setvariable variable=$envVarName]$url"
    }
  displayName: 'Create API from stable diff gists'
  enabled: false
  timeoutInMinutes: 1
  env:
    GITHUB_TOKEN: $(GitHub.Token)

- powershell: |
    $env:VSDROPS_INDEX="$Env:VSDROPSPREFIX/$Env:BUILD_BUILDNUMBER/$Env:BUILD_BUILDID/$Env:DEVICE_PREFIX/;/tests/vsdrops_index.html"
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY\xamarin-macios\tools\devops\automation\scripts\GitHub.psm1 
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY\xamarin-macios\tools\devops\automation\scripts\VSTS.psm1 

    $buildReason = "$(Build.Reason)"
    $buildSourceBranchName = "$(Build.SourceBranchName)"

    if ($buildReason -ne "PullRequest" -or $Env:BUILD_PACKAGE -eq "True") {
      Write-Host "Json path is $Env:ARTIFACTS_JSON_PATH"
      $response = New-GitHubSummaryComment -Context "$Env:CONTEXT" -TestSummaryPath "$Env:TESTS_SUMMARY" -Artifacts "$Env:ARTIFACTS_JSON_PATH"
      Write-Host $response
    } else {
      Write-Host "Json path is $Env:ARTIFACTS_JSON_PATH"
      $response = New-GitHubSummaryComment -Context "$Env:CONTEXT" -TestSummaryPath "$Env:TESTS_SUMMARY"
      Write-Host $response
    }
    if($Env:TESTS_JOBSTATUS -ne "Succeeded")
    {
      Set-PipelineResult -Status partiallySucceeded
    }
  env:
    BUILD_REVISION: $(Build.SourceVersion)
    CONTEXT: ${{ parameters.statusContext }}
    DEVICE_PREFIX: ${{ parameters.devicePrefix }}
    GITHUB_TOKEN: $(GitHub.Token)
    TESTS_JOBSTATUS: $(TESTS_JOBSTATUS) # set by the runTests step
    TESTS_SUMMARY: $(TEST_SUMMARY_PATH)
    ACCESSTOKEN: $(System.AccessToken)
  displayName: 'Add summaries'
  condition: always()
  timeoutInMinutes: 1
