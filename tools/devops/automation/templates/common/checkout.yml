# Template that performs the checkout and fixes a number of small issues we have found between the vsts <-> github integration
steps:
- checkout: self          # https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema#checkout
  clean: true             # Executes: git clean -ffdx && git reset --hard HEAD
  submodules: recursive
  path: s/xamarin-macios


- ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
  - pwsh: |
      git config remote.origin.fetch '+refs/pull/*:refs/remotes/origin/pull/*'
      git fetch origin
      $branch="$(Build.SourceBranch)".Replace("merge", "head")
      $branch=$branch.Replace("refs", "origin")
      Write-Host "Checking out branch $branch"
      git checkout $branch
      $hash = git rev-parse HEAD
      Write-Host "##vso[task.setvariable variable=GIT_HASH;isOutput=true]$hash"
    name: fix_commit
    displayName: "Undo Github merge"
    workingDirectory: $(System.DefaultWorkingDirectory)/xamarin-macios
- ${{ else }}:
  - pwsh: |
      $hash = git rev-parse HEAD
      Write-Host "##vso[task.setvariable variable=GIT_HASH;isOutput=true]$hash"
    name: fix_commit
    displayName: "Undo Github merge"
    workingDirectory: $(System.DefaultWorkingDirectory)/xamarin-macios

- checkout: maccore
  clean: true
  persistCredentials: true  # hugely important, else there are some scripts that check a single file from maccore that will fail

- checkout: templates
  clean: true

- checkout: release-scripts
  clean: true

- pwsh: |
    # maccore is special, we use fetch there in some bash scripts, but VSTS uses https.. and some pools don't like the above.. :/
    cd $(System.DefaultWorkingDirectory)/maccore
    git remote remove origin
    git remote add origin https://$(GitHub.Token)@github.com/xamarin/maccore.git
    git remote # don't add -v else we see the pat
  displayName: 'Clean git mess from VSTS'

