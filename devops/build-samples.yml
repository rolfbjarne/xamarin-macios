# Xamarin
# Build samples

trigger:
  - sample-tester

jobs:
- job: macOS
  displayName: Build samples
  timeoutInMinutes: 360
  # strategy:
  #   matrix:
  #     Debug|iPhone:
  #       TEST_PLATFORM_FILTER_EXPRESSION: '^iPhone$'
  #       TEST_CONFIG_FILTER_EXPRESSION: '^.*Debug.*$'
  #     Debug|iPhoneSimulator:
  #       TEST_PLATFORM_FILTER_EXPRESSION: '^iPhoneSimulator$'
  #       TEST_CONFIG_FILTER_EXPRESSION: '^.*Debug.*$'
  #     Release|iPhone:
  #       TEST_PLATFORM_FILTER_EXPRESSION: '^iPhone$'
  #       TEST_CONFIG_FILTER_EXPRESSION: '^.*Release.*$'
  #     Release|iPhoneSimulator:
  #       TEST_PLATFORM_FILTER_EXPRESSION: '^iPhoneSimulator$'
  #       TEST_CONFIG_FILTER_EXPRESSION: '^.*Release.*$'
  #     Debug|Mac:
  #       TEST_PLATFORM_FILTER_EXPRESSION: '^$'
  #       TEST_CONFIG_FILTER_EXPRESSION: '^.*Debug.*$'
  #     Release|Mac:
  #       TEST_PLATFORM_FILTER_EXPRESSION: '^$'
  #       TEST_CONFIG_FILTER_EXPRESSION: '^.*Release.*$'

  pool:
    vmImage: 'macOS-10.13'

  steps:
  - checkout: self
    persistCredentials: true

  - bash: |
      set -x
      set -e
      uname -a
      ls -la /Library/Frameworks/Xamarin.iOS.framework/Versions || true
      ls -la /Library/Frameworks/Xamarin.Mac.framework/Versions || true
      ls -lad /Applications/Xcode*
      xcode-select -p
      mono --version || true
      env | sort
      git config -l | sort
      git config --global url."https://github.com/".insteadOf git@github.com:
      AUTH=$(git config -l | grep AUTHORIZATION | sed 's/.*AUTHORIZATION: //')
      git config --global http.https://github.com/xamarin/maccore.extraheader "AUTHORIZATION: $AUTH"
      git config --global http.https://github.com/rolfbjarne/maccore.extraheader "AUTHORIZATION: $AUTH"
      git config -l | sort
    displayName: System Info

  # FIXME: this should figure out the exact Xcode version from PROVISION_FROM_COMMIT.
  - bash: |
      set -x
      set -e
      ln -Fhs /Applications/Xcode_10.1.app /Applications/Xcode101.app
      sudo xcode-select -s /Applications/Xcode101.app
    displayName: Provision some dependencies

  - bash: |
      set -x
      set -e
      ./configure --enable-xamarin

      # git init maccore
      # cd maccore
      # git remote add origin https://github.com/xamarin/maccore
      # git config gc.auto 0
      # git config --get-all http.https://github.com/xamarin/maccore.extraheader
      # AUTH=$(git config -l | grep AUTHORIZATION | head -1 | sed 's/.*AUTHORIZATION: //')
      # git -c http.extraheader="AUTHORIZATION: $AUTH" fetch --tags --prune --progress --no-recurse-submodules origin
      git clone https://github.com/xamarin/maccore
      ./maccore/tools/install-qa-provisioning-profiles.sh" -v
      #make reset-maccore -C "$(System.DefaultWorkingDirectory)" V=1
      #"$(System.DefaultWorkingDirectory)/../maccore/tools/install-qa-provisioning-profiles.sh" -v
    displayName: Provision provisioning profiles

  - task: xamops.azdevex.provisionator-task.provisionator@1
    displayName: Provision more dependencies
    inputs:
      provisioning_script: $(System.DefaultWorkingDirectory)/devops/build-samples.csx

  - bash: |
      set -x
      set -e
      make -C tests test-system.config
      make -C tests/sampletester TESTS_USE_SYSTEM=1
    displayName: Run tests

  - task: PublishTestResults@2
    displayName: Publish test results
    condition: always()
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: '**/TestResult*.xml'
      testRunTitle: Sample tests (build)
      publishRunAttachments: true
      mergeTestResults: true
