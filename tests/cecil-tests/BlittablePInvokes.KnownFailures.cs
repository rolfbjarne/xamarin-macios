using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using NUnit.Framework;
using Mono.Cecil;
using Mono.Cecil.Cil;

using ObjCRuntime;

using Xamarin.Tests;
using Xamarin.Utils;

#nullable enable

namespace Cecil.Tests {
	public partial class BlittablePInvokes {
		static HashSet<string> knownFailuresPInvokes = new HashSet<string> {
			"AudioUnit.AudioComponentDescription ObjCRuntime.Messaging::AudioComponentDescription_objc_msgSend_stret(System.IntPtr,System.IntPtr)",
			"AudioUnit.AudioComponentDescription ObjCRuntime.Messaging::AudioComponentDescription_objc_msgSend(System.IntPtr,System.IntPtr)",
			"AudioUnit.AudioComponentDescription ObjCRuntime.Messaging::AudioComponentDescription_objc_msgSendSuper_stret(System.IntPtr,System.IntPtr)",
			"AudioUnit.AudioComponentDescription ObjCRuntime.Messaging::AudioComponentDescription_objc_msgSendSuper(System.IntPtr,System.IntPtr)",
			"AudioUnit.AudioComponentStatus AudioUnit.AudioUnit::AudioOutputUnitPublish(AudioUnit.AudioComponentDescription,System.IntPtr,System.UInt32,System.IntPtr)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioComponentInstanceNew(System.IntPtr,System.IntPtr&)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitGetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,AudioToolbox.AudioStreamBasicDescription&,System.UInt32&)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitGetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,AudioUnit.AudioUnitParameterInfoNative&,System.UInt32&)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitGetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.Double&,System.UInt32&)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitGetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.IntPtr&,System.Int32&)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitGetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.UInt32*,System.UInt32&)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitGetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.UInt32&,System.Int32&)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitGetPropertyInfo(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.UInt32&,System.Boolean&)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitRender(System.IntPtr,AudioUnit.AudioUnitRenderActionFlags&,AudioToolbox.AudioTimeStamp&,System.UInt32,System.UInt32,System.IntPtr)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,AudioToolbox.AudioTimeStamp&,System.Int32)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,AudioUnit.AudioUnitConnection&,System.Int32)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,AudioUnit.AURenderCallbackStruct&,System.Int32)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,AudioUnit.AUSamplerInstrumentData&,System.Int32)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,AudioUnit.AUScheduledAudioFileRegion/ScheduledAudioFileRegion&,System.Int32)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,ObjCRuntime.NativeHandle&,System.Int32)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.Double&,System.UInt32)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.IntPtr&,System.Int32)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.UInt32&,System.UInt32)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphAddNode(System.IntPtr,AudioUnit.AudioComponentDescription&,System.Int32&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphCountNodeInteractions(System.IntPtr,System.Int32,System.UInt32&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphGetCPULoad(System.IntPtr,System.Single&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphGetIndNode(System.IntPtr,System.UInt32,System.Int32&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphGetMaxCPULoad(System.IntPtr,System.Single&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphGetNodeCount(System.IntPtr,System.Int32&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphGetNumberOfInteractions(System.IntPtr,System.UInt32&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphIsInitialized(System.IntPtr,System.Boolean&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphIsOpen(System.IntPtr,System.Boolean&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphIsRunning(System.IntPtr,System.Boolean&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphNodeInfo(System.IntPtr,System.Int32,AudioUnit.AudioComponentDescription&,System.IntPtr&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphNodeInfo(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphSetNodeInputCallback(System.IntPtr,System.Int32,System.UInt32,AudioUnit.AURenderCallbackStruct&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphUpdate(System.IntPtr,System.Boolean&)",
			"AVFoundation.AVSampleCursorAudioDependencyInfo ObjCRuntime.Messaging::AVSampleCursorAudioDependencyInfo_objc_msgSend(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorAudioDependencyInfo ObjCRuntime.Messaging::AVSampleCursorAudioDependencyInfo_objc_msgSendSuper(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorChunkInfo ObjCRuntime.Messaging::AVSampleCursorChunkInfo_objc_msgSend_stret(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorChunkInfo ObjCRuntime.Messaging::AVSampleCursorChunkInfo_objc_msgSend(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorChunkInfo ObjCRuntime.Messaging::AVSampleCursorChunkInfo_objc_msgSendSuper_stret(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorChunkInfo ObjCRuntime.Messaging::AVSampleCursorChunkInfo_objc_msgSendSuper(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorSyncInfo ObjCRuntime.Messaging::AVSampleCursorSyncInfo_objc_msgSend_stret(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorSyncInfo ObjCRuntime.Messaging::AVSampleCursorSyncInfo_objc_msgSend(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorSyncInfo ObjCRuntime.Messaging::AVSampleCursorSyncInfo_objc_msgSendSuper_stret(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorSyncInfo ObjCRuntime.Messaging::AVSampleCursorSyncInfo_objc_msgSendSuper(System.IntPtr,System.IntPtr)",
			"CoreGraphics.CGRect CoreMedia.CMFormatDescription::CMVideoFormatDescriptionGetCleanAperture(System.IntPtr,System.Boolean)",
			"CoreGraphics.CGSize CoreMedia.CMFormatDescription::CMVideoFormatDescriptionGetPresentationDimensions(System.IntPtr,System.Boolean,System.Boolean)",
			"CoreGraphics.CGSize CoreText.CTFramesetter::CTFramesetterSuggestFrameSizeWithConstraints(System.IntPtr,Foundation.NSRange,System.IntPtr,CoreGraphics.CGSize,Foundation.NSRange&)",
			"CoreMedia.CMClockError CoreMedia.CMClock::CMAudioClockCreate(System.IntPtr,System.IntPtr&)",
			"CoreMedia.CMClockError CoreMedia.CMClock::CMClockGetAnchorTime(System.IntPtr,CoreMedia.CMTime&,CoreMedia.CMTime&)",
			"CoreMedia.CMFormatDescriptionError CoreMedia.CMFormatDescription::CMFormatDescriptionCreate(System.IntPtr,CoreMedia.CMMediaType,System.UInt32,System.IntPtr,System.IntPtr&)",
			"CoreMedia.CMFormatDescriptionError CoreMedia.CMVideoFormatDescription::CMVideoFormatDescriptionCreate(System.IntPtr,CoreMedia.CMVideoCodecType,System.Int32,System.Int32,System.IntPtr,System.IntPtr&)",
			"CoreMedia.CMFormatDescriptionError CoreMedia.CMVideoFormatDescription::CMVideoFormatDescriptionCreateForImageBuffer(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreMedia.CMFormatDescriptionError CoreMedia.CMVideoFormatDescription::CMVideoFormatDescriptionCreateFromH264ParameterSets(System.IntPtr,System.UIntPtr,System.IntPtr[],System.UIntPtr[],System.Int32,System.IntPtr&)",
			"CoreMedia.CMFormatDescriptionError CoreMedia.CMVideoFormatDescription::CMVideoFormatDescriptionCreateFromHEVCParameterSets(System.IntPtr,System.UIntPtr,System.IntPtr[],System.UIntPtr[],System.Int32,System.IntPtr,System.IntPtr&)",
			"CoreMedia.CMFormatDescriptionError CoreMedia.CMVideoFormatDescription::CMVideoFormatDescriptionGetH264ParameterSetAtIndex(System.IntPtr,System.UIntPtr,System.IntPtr&,System.UIntPtr&,System.UIntPtr&,System.Int32&)",
			"CoreMedia.CMFormatDescriptionError CoreMedia.CMVideoFormatDescription::CMVideoFormatDescriptionGetHEVCParameterSetAtIndex(System.IntPtr,System.UIntPtr,System.IntPtr&,System.UIntPtr&,System.UIntPtr&,System.Int32&)",
			"CoreMedia.CMSampleBufferError CoreMedia.CMSampleBuffer::CMAudioSampleBufferCreateReadyWithPacketDescriptions(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,CoreMedia.CMTime,AudioToolbox.AudioStreamPacketDescription[],System.IntPtr&)",
			"CoreMedia.CMSampleBufferError CoreMedia.CMSampleBuffer::CMAudioSampleBufferCreateWithPacketDescriptions(System.IntPtr,System.IntPtr,System.Boolean,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,CoreMedia.CMTime,AudioToolbox.AudioStreamPacketDescription[],System.IntPtr&)",
			"CoreMedia.CMSampleBufferError CoreMedia.CMSampleBuffer::CMSampleBufferCreateForImageBuffer(System.IntPtr,System.IntPtr,System.Boolean,System.IntPtr,System.IntPtr,System.IntPtr,CoreMedia.CMSampleTimingInfo&,System.IntPtr&)",
			"CoreMedia.CMSampleBufferError CoreMedia.CMSampleBuffer::CMSampleBufferCreateReady(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,CoreMedia.CMSampleTimingInfo[],System.IntPtr,System.UIntPtr[],System.IntPtr&)",
			"CoreMedia.CMSampleBufferError CoreMedia.CMSampleBuffer::CMSampleBufferCreateReadyWithImageBuffer(System.IntPtr,System.IntPtr,System.IntPtr,CoreMedia.CMSampleTimingInfo&,System.IntPtr&)",
			"CoreMedia.CMSyncError CoreMedia.CMClockOrTimebase::CMSyncGetRelativeRateAndAnchorTime(System.IntPtr,System.IntPtr,System.Double&,CoreMedia.CMTime&,CoreMedia.CMTime&)",
			"CoreMedia.CMTimebaseError CoreMedia.CMTimebase::CMTimebaseCreateWithMasterClock(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreMedia.CMTimebaseError CoreMedia.CMTimebase::CMTimebaseCreateWithMasterTimebase(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreMedia.CMTimebaseError CoreMedia.CMTimebase::CMTimebaseCreateWithSourceClock(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreMedia.CMTimebaseError CoreMedia.CMTimebase::CMTimebaseCreateWithSourceTimebase(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreMedia.CMTimebaseError CoreMedia.CMTimebase::CMTimebaseGetTimeAndRate(System.IntPtr,CoreMedia.CMTime&,System.Double&)",
			"CoreServices.LSResult CoreServices.LaunchServices::LSCanURLAcceptURL(System.IntPtr,System.IntPtr,CoreServices.LSRoles,CoreServices.LSAcceptanceFlags,System.Byte&)",
			"CoreVideo.CVReturn CoreVideo.CVDisplayLink::CVDisplayLinkCreateWithActiveCGDisplays(System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVDisplayLink::CVDisplayLinkCreateWithCGDisplay(System.UInt32,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVDisplayLink::CVDisplayLinkCreateWithCGDisplays(System.UInt32[],System.IntPtr,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVDisplayLink::CVDisplayLinkCreateWithOpenGLDisplayMask(System.UInt32,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVDisplayLink::CVDisplayLinkGetCurrentTime(System.IntPtr,CoreVideo.CVTimeStamp&)",
			"CoreVideo.CVReturn CoreVideo.CVMetalTextureCache::CVMetalTextureCacheCreateTextureFromImage(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.UIntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVPixelBuffer::CVPixelBufferCreate(System.IntPtr,System.IntPtr,System.IntPtr,CoreVideo.CVPixelFormatType,System.IntPtr,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVPixelBuffer::CVPixelBufferCreateResolvedAttributesDictionary(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVPixelBuffer::CVPixelBufferCreateWithBytes(System.IntPtr,System.IntPtr,System.IntPtr,CoreVideo.CVPixelFormatType,System.IntPtr,System.IntPtr,method System.Void *(System.IntPtr,System.IntPtr),System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVPixelBuffer::CVPixelBufferCreateWithIOSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVPixelBuffer::CVPixelBufferCreateWithPlanarBytes(System.IntPtr,System.IntPtr,System.IntPtr,CoreVideo.CVPixelFormatType,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr[],System.IntPtr[],System.IntPtr[],System.IntPtr[],method System.Void *(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr),System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVPixelBufferPool::CVPixelBufferPoolCreate(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVPixelBufferPool::CVPixelBufferPoolCreatePixelBuffer(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"CoreVideo.CVReturn CoreVideo.CVPixelBufferPool::CVPixelBufferPoolCreatePixelBufferWithAuxAttributes(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"GLKit.GLKVertexAttributeParameters GLKit.GLKVertexAttributeParameters::FromVertexFormat_(System.UIntPtr)",
			"MediaToolbox.MTAudioProcessingTapError MediaToolbox.MTAudioProcessingTap::MTAudioProcessingTapCreate(System.IntPtr,MediaToolbox.MTAudioProcessingTap/Callbacks&,MediaToolbox.MTAudioProcessingTapCreationFlags,System.IntPtr&)",
			"MediaToolbox.MTAudioProcessingTapError MediaToolbox.MTAudioProcessingTap::MTAudioProcessingTapGetSourceAudio(System.IntPtr,System.IntPtr,System.IntPtr,MediaToolbox.MTAudioProcessingTapFlags&,CoreMedia.CMTimeRange&,System.IntPtr&)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSend_AudioComponentDescription_ref_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,ObjCRuntime.NativeHandle*)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSend_AudioComponentDescription_UInt32_ref_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,System.UInt32,ObjCRuntime.NativeHandle*)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSend_AudioComponentDescription(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSendSuper_AudioComponentDescription_ref_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,ObjCRuntime.NativeHandle*)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSendSuper_AudioComponentDescription_UInt32_ref_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,System.UInt32,ObjCRuntime.NativeHandle*)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSendSuper_AudioComponentDescription(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription)",
			"OpenGL.CGLErrorCode OpenGL.CGLPixelFormat::CGLChoosePixelFormat(OpenGL.CGLPixelFormatAttribute[],System.IntPtr&,System.Int32&)",
			"PrintCore.PMStatusCode PrintCore.PMPageFormat::PMCreatePageFormat(System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPageFormat::PMCreatePageFormatWithPMPaper(System.IntPtr&,System.IntPtr)",
			"PrintCore.PMStatusCode PrintCore.PMPageFormat::PMGetAdjustedPageRect(System.IntPtr,PrintCore.PMRect&)",
			"PrintCore.PMStatusCode PrintCore.PMPageFormat::PMGetAdjustedPaperRect(System.IntPtr,PrintCore.PMRect&)",
			"PrintCore.PMStatusCode PrintCore.PMPageFormat::PMGetOrientation(System.IntPtr,PrintCore.PMOrientation&)",
			"PrintCore.PMStatusCode PrintCore.PMPaper::PMPaperCreateLocalizedName(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPaper::PMPaperGetHeight(System.IntPtr,System.Double&)",
			"PrintCore.PMStatusCode PrintCore.PMPaper::PMPaperGetID(System.IntPtr,System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPaper::PMPaperGetMargins(System.IntPtr,PrintCore.PMPaperMargins&)",
			"PrintCore.PMStatusCode PrintCore.PMPaper::PMPaperGetWidth(System.IntPtr,System.Double&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMCreateGenericPrinter(System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterCopyDeviceURI(System.IntPtr,System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterCopyHostName(System.IntPtr,System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterGetMakeAndModelName(System.IntPtr,System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterGetMimeTypes(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterGetOutputResolution(System.IntPtr,System.IntPtr,PrintCore.PMResolution&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterGetPaperList(System.IntPtr,System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterGetState(System.IntPtr,PrintCore.PMPrinterState&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterIsPostScriptPrinter(System.IntPtr,System.Byte&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterIsRemote(System.IntPtr,System.Byte&)",
			"PrintCore.PMStatusCode PrintCore.PMPrinter::PMPrinterSetOutputResolution(System.IntPtr,System.IntPtr,PrintCore.PMResolution&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSession::PMCreateSession(System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSession::PMSessionCreatePrinterList(System.IntPtr,System.IntPtr&,System.Int32&,System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSession::PMSessionValidatePrintSettings(System.IntPtr,System.IntPtr,System.Byte&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSettings::PMCreatePrintSettings(System.IntPtr&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSettings::PMGetCollate(System.IntPtr,System.Byte&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSettings::PMGetCopies(System.IntPtr,System.UInt32&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSettings::PMGetDuplex(System.IntPtr,PrintCore.PMDuplexMode&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSettings::PMGetFirstPage(System.IntPtr,System.UInt32&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSettings::PMGetLastPage(System.IntPtr,System.UInt32&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSettings::PMGetPageRange(System.IntPtr,System.UInt32&,System.UInt32&)",
			"PrintCore.PMStatusCode PrintCore.PMPrintSettings::PMGetScale(System.IntPtr,System.Double&)",
			"PrintCore.PMStatusCode PrintCore.PMServer::PMServerCreatePrinterList(System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecIdentity::SecIdentityCopyCertificate(System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecIdentity::SecIdentityCopyPrivateKey(System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecImportExport::SecPKCS12Import(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecItem::SecItemCopyMatching(System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecKey::SecKeyDecrypt(System.IntPtr,Security.SecPadding,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecKey::SecKeyEncrypt(System.IntPtr,Security.SecPadding,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecKey::SecKeyGeneratePair(System.IntPtr,System.IntPtr&,System.IntPtr&)",
			"Security.SecStatusCode Security.SecKey::SecKeyRawSign(System.IntPtr,Security.SecPadding,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecKeyChain::SecKeychainFindGenericPassword(System.IntPtr,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int32&,System.IntPtr&,System.IntPtr)",
			"Security.SecStatusCode Security.SecKeyChain::SecKeychainFindInternetPassword(System.IntPtr,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int16,System.IntPtr,System.IntPtr,System.Int32&,System.IntPtr&,System.IntPtr)",
			"Security.SecStatusCode Security.SecTrust::SecTrustCopyCustomAnchorCertificates(System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecTrust::SecTrustCopyPolicies(System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecTrust::SecTrustCreateWithCertificates(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"Security.SecStatusCode Security.SecTrust::SecTrustEvaluate(System.IntPtr,Security.SecTrustResult&)",
			"Security.SecStatusCode Security.SecTrust::SecTrustGetNetworkFetchAllowed(System.IntPtr,System.Boolean&)",
			"Security.SecStatusCode Security.SecTrust::SecTrustGetTrustResult(System.IntPtr,Security.SecTrustResult&)",
			"Security.SecStatusCode Security.SecTrust::SecTrustSetAnchorCertificatesOnly(System.IntPtr,System.Boolean)",
			"Security.SecStatusCode Security.SecTrust::SecTrustSetNetworkFetchAllowed(System.IntPtr,System.Boolean)",
			"Security.SslStatus Security.SslContext::SSLCopyPeerTrust(System.IntPtr,System.IntPtr&)",
			"Security.SslStatus Security.SslContext::SSLCopyRequestedPeerName(System.IntPtr,System.Byte[],System.UIntPtr&)",
			"Security.SslStatus Security.SslContext::SSLCopyRequestedPeerNameLength(System.IntPtr,System.UIntPtr&)",
			"Security.SslStatus Security.SslContext::SSLGetBufferedReadSize(System.IntPtr,System.IntPtr&)",
			"Security.SslStatus Security.SslContext::SSLGetClientCertificateState(System.IntPtr,Security.SslClientCertificateState&)",
			"Security.SslStatus Security.SslContext::SSLGetConnection(System.IntPtr,System.IntPtr&)",
			"Security.SslStatus Security.SslContext::SSLGetDatagramWriteSize(System.IntPtr,System.IntPtr&)",
			"Security.SslStatus Security.SslContext::SSLGetMaxDatagramRecordSize(System.IntPtr,System.IntPtr&)",
			"Security.SslStatus Security.SslContext::SSLGetNegotiatedProtocolVersion(System.IntPtr,Security.SslProtocol&)",
			"Security.SslStatus Security.SslContext::SSLGetPeerDomainName(System.IntPtr,System.Byte[],System.IntPtr&)",
			"Security.SslStatus Security.SslContext::SSLGetPeerDomainNameLength(System.IntPtr,System.IntPtr&)",
			"Security.SslStatus Security.SslContext::SSLGetPeerID(System.IntPtr,System.IntPtr&,System.IntPtr&)",
			"Security.SslStatus Security.SslContext::SSLGetProtocolVersionMax(System.IntPtr,Security.SslProtocol&)",
			"Security.SslStatus Security.SslContext::SSLGetProtocolVersionMin(System.IntPtr,Security.SslProtocol&)",
			"Security.SslStatus Security.SslContext::SSLGetSessionOption(System.IntPtr,Security.SslSessionOption,System.Boolean&)",
			"Security.SslStatus Security.SslContext::SSLGetSessionState(System.IntPtr,Security.SslSessionState&)",
			"Security.SslStatus Security.SslContext::SSLRead(System.IntPtr,System.Byte*,System.IntPtr,System.IntPtr&)",
			"Security.SslStatus Security.SslContext::SSLSetSessionOption(System.IntPtr,Security.SslSessionOption,System.Boolean)",
			"Security.SslStatus Security.SslContext::SSLWrite(System.IntPtr,System.Byte*,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreMedia.CMClock::CMClockMightDrift(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreMedia.CMClockOrTimebase::CMSyncMightDrift(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreMedia.CMFormatDescription::CMVideoFormatDescriptionMatchesImageBuffer(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreMedia.CMSampleBuffer::CMSampleBufferDataIsReady(System.IntPtr)",
			"System.Boolean CoreMedia.CMSampleBuffer::CMSampleBufferIsValid(System.IntPtr)",
			"System.Boolean CoreServices.FSEvent::FSEventsPurgeEventsForDeviceUpToEventId(System.UInt64,System.UInt64)",
			"System.Boolean CoreServices.FSEventStream::FSEventStreamStart(System.IntPtr)",
			"System.Boolean CoreText.CTFont::CTFontGetGlyphsForCharacters(System.IntPtr,System.Char[],System.UInt16[],System.IntPtr)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerIsSupportedFont(System.IntPtr)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerRegisterFontsForURL(System.IntPtr,CoreText.CTFontManagerScope,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerRegisterFontsForURLs(System.IntPtr,CoreText.CTFontManagerScope,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerRegisterGraphicsFont(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerUnregisterFontsForURL(System.IntPtr,CoreText.CTFontManagerScope,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerUnregisterFontsForURLs(System.IntPtr,CoreText.CTFontManagerScope,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerUnregisterGraphicsFont(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreText.CTParagraphStyle::CTParagraphStyleGetValueForSpecifier(System.IntPtr,CoreText.CTParagraphStyleSpecifier,System.UIntPtr,System.Void*)",
			"System.Boolean CoreVideo.CVBuffer::CVBufferHasAttachment(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreVideo.CVDisplayLink::CVDisplayLinkIsRunning(System.IntPtr)",
			"System.Boolean CoreVideo.CVImageBuffer::CVImageBufferIsFlipped(System.IntPtr)",
			"System.Boolean CoreVideo.CVMetalTexture::CVMetalTextureIsFlipped(System.IntPtr)",
			"System.Boolean CoreVideo.CVPixelBuffer::CVPixelBufferIsPlanar(System.IntPtr)",
			"System.Boolean CoreVideo.CVPixelFormatTypeExtensions::CVIsCompressedPixelFormatAvailable(System.UInt32)",
			"System.Boolean Foundation.NSObject::xamarin_set_gchandle_with_flags_safe(System.IntPtr,System.IntPtr,Foundation.NSObject/XamarinGCHandleFlags)",
			"System.Boolean GameController.GCExtendedGamepadSnapshot::GCExtendedGamepadSnapshotDataFromNSData(GameController.GCExtendedGamepadSnapshotData&,System.IntPtr)",
			"System.Boolean GameController.GCExtendedGamepadSnapshot::GCExtendedGamepadSnapShotDataV100FromNSData(GameController.GCExtendedGamepadSnapShotDataV100&,System.IntPtr)",
			"System.Boolean GameController.GCGamepadSnapshot::GCGamepadSnapShotDataV100FromNSData(GameController.GCGamepadSnapShotDataV100&,System.IntPtr)",
			"System.Boolean GameController.GCMicroGamepadSnapshot::GCMicroGamepadSnapshotDataFromNSData(GameController.GCMicroGamepadSnapshotData&,System.IntPtr)",
			"System.Boolean GameController.GCMicroGamepadSnapshot::GCMicroGamepadSnapShotDataV100FromNSData(GameController.GCMicroGamepadSnapShotDataV100&,System.IntPtr)",
			"System.Boolean Network.NWAdvertiseDescriptor::nw_advertise_descriptor_get_no_auto_rename(System.IntPtr)",
			"System.Boolean Network.NWBrowserDescriptor::nw_browse_descriptor_get_include_txt_record(System.IntPtr)",
			"System.Boolean Network.NWConnectionGroup::nw_connection_group_reinsert_extracted_connection(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWContentContext::nw_content_context_get_is_final(System.IntPtr)",
			"System.Boolean Network.NWEstablishmentReport::nw_establishment_report_get_proxy_configured(System.IntPtr)",
			"System.Boolean Network.NWEstablishmentReport::nw_establishment_report_get_used_proxy(System.IntPtr)",
			"System.Boolean Network.NWFramer::nw_framer_deliver_input_no_copy(System.IntPtr,System.UIntPtr,System.IntPtr,System.Boolean)",
			"System.Boolean Network.NWFramer::nw_framer_parse_input(System.IntPtr,System.UIntPtr,System.UIntPtr,System.Byte*,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWFramer::nw_framer_parse_output(System.IntPtr,System.UIntPtr,System.UIntPtr,System.Byte*,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWFramer::nw_framer_prepend_application_protocol(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWFramer::nw_framer_write_output_no_copy(System.IntPtr,System.UIntPtr)",
			"System.Boolean Network.NWFramerMessage::nw_framer_message_access_value(System.IntPtr,System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWMulticastGroup::nw_group_descriptor_add_endpoint(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWMulticastGroup::nw_multicast_group_descriptor_get_disable_unicast_traffic(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_fast_open_enabled(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_include_peer_to_peer(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_local_only(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_prefer_no_proxy(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_prohibit_constrained(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_prohibit_expensive(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_reuse_local_address(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_requires_dnssec_validation(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_has_dns(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_has_ipv4(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_has_ipv6(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_is_constrained(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_is_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_is_expensive(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_uses_interface_type(System.IntPtr,Network.NWInterfaceType)",
			"System.Boolean Network.NWProtocolDefinition::nw_protocol_definition_is_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_framer_message(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_ip(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_quic(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_tcp(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_tls(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_udp(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_ws(System.IntPtr)",
			"System.Boolean Network.NWProtocolOptions::nw_protocol_options_is_quic(System.IntPtr)",
			"System.Boolean Network.NWProtocolQuicOptions::nw_quic_get_stream_is_datagram(System.IntPtr)",
			"System.Boolean Network.NWProtocolQuicOptions::nw_quic_get_stream_is_unidirectional(System.IntPtr)",
			"System.Boolean Network.NWTxtRecord::nw_txt_record_access_bytes(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWTxtRecord::nw_txt_record_access_key(System.IntPtr,System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWTxtRecord::nw_txt_record_apply(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWTxtRecord::nw_txt_record_is_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWWebSocketRequest::nw_ws_request_enumerate_additional_headers(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWWebSocketRequest::nw_ws_request_enumerate_subprotocols(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWWebSocketResponse::nw_ws_response_enumerate_additional_headers(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean ObjCRuntime.Class::class_addIvar(System.IntPtr,System.IntPtr,System.IntPtr,System.Byte,System.IntPtr)",
			"System.Boolean ObjCRuntime.Class::class_addMethod(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean ObjCRuntime.Class::class_addProperty(System.IntPtr,System.IntPtr,System.IntPtr*,System.Int32)",
			"System.Boolean ObjCRuntime.Class::class_addProtocol(System.IntPtr,System.IntPtr)",
			"System.Boolean ObjCRuntime.Selector::sel_isMapped(System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexAddDocument(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean)",
			"System.Boolean SearchKit.SKIndex::SKIndexAddDocumentWithText(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean)",
			"System.Boolean SearchKit.SKIndex::SKIndexCompact(System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexFlush(System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexMoveDocument(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexRemoveDocument(System.IntPtr,System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexRenameDocument(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean SearchKit.SKSearch::SKSearchFindMatches(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr&)",
			"System.Boolean Security.SecIdentity2::sec_identity_access_certificates(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecKey::SecKeyIsAlgorithmSupported(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean Security.SecKey::SecKeyVerifySignature(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_access_distinguished_names(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_access_ocsp_response(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_access_peer_certificate_chain(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_access_pre_shared_keys(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_challenge_parameters_are_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_peers_are_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Security.SecProtocolOptions::sec_protocol_options_are_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Security.SecTrust::SecTrustEvaluateWithError(System.IntPtr,System.IntPtr&)",
			"System.Boolean Security.SecTrust::SecTrustSetExceptions(System.IntPtr,System.IntPtr)",
			"System.Boolean SystemConfiguration.CaptiveNetwork::CNMarkPortalOffline(System.IntPtr)",
			"System.Boolean SystemConfiguration.CaptiveNetwork::CNMarkPortalOnline(System.IntPtr)",
			"System.Boolean SystemConfiguration.CaptiveNetwork::CNSetSupportedSSIDs(System.IntPtr)",
			"System.Boolean SystemConfiguration.NetworkReachability::SCNetworkReachabilityScheduleWithRunLoop(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean SystemConfiguration.NetworkReachability::SCNetworkReachabilitySetCallback(System.IntPtr,method System.Void *(System.IntPtr,SystemConfiguration.NetworkReachabilityFlags,System.IntPtr),System.IntPtr)",
			"System.Boolean SystemConfiguration.NetworkReachability::SCNetworkReachabilitySetCallback(System.IntPtr,method System.Void *(System.IntPtr,SystemConfiguration.NetworkReachabilityFlags,System.IntPtr),SystemConfiguration.NetworkReachability/SCNetworkReachabilityContext&)",
			"System.Boolean SystemConfiguration.NetworkReachability::SCNetworkReachabilitySetDispatchQueue(System.IntPtr,System.IntPtr)",
			"System.Byte Security.SecProtocolMetadata::sec_protocol_metadata_access_supported_signature_algorithms(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Byte* Network.NWEndpoint::nw_endpoint_get_signature(System.IntPtr,System.UIntPtr&)",
			"System.Int32 AudioUnit.AudioUnit::AudioObjectGetPropertyData(System.UInt32,AudioUnit.AudioObjectPropertyAddress&,System.UInt32&,System.IntPtr&,System.UInt32&,System.UInt32&)",
			"System.Int32 AudioUnit.AudioUnit::AudioUnitGetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.UInt32&,System.UInt32&)",
			"System.Int32 AudioUnit.AudioUnit::AudioUnitSetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,AudioToolbox.AudioStreamBasicDescription&,System.UInt32)",
			"System.Int32 AudioUnit.AUGraph::NewAUGraph(System.IntPtr&)",
			"System.Int32 CoreMedia.CMBufferQueue::CMBufferQueueCreate(System.IntPtr,System.IntPtr,CoreMedia.CMBufferQueue/CMBufferCallbacks,System.IntPtr&)",
			"System.Int32 CoreMedia.CMBufferQueue::CMBufferQueueCreate(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Int32 CoreVideo.CVDisplayLink::CVDisplayLinkTranslateTime(System.IntPtr,CoreVideo.CVTimeStamp,CoreVideo.CVTimeStamp&)",
			"System.Int32 CoreVideo.CVMetalTextureCache::CVMetalTextureCacheCreate(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Int32 CoreWlan.CWKeychain::CWKeychainCopyWiFiEAPIdentity(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Int32 CoreWlan.CWKeychain::CWKeychainFindWiFiEAPUsernameAndPassword(System.IntPtr,System.IntPtr,System.IntPtr&,System.IntPtr&)",
			"System.Int32 CoreWlan.CWKeychain::CWKeychainFindWiFiPassword(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Int32 Darwin.KernelQueue::kevent(System.Int32,Darwin.KernelEvent*,System.Int32,Darwin.KernelEvent*,System.Int32,Darwin.TimeSpec&)",
			"System.Int32 ObjCRuntime.Runtime::_NSGetExecutablePath(System.Byte[],System.Int32&)",
			"System.Int32 Security.Authorization::AuthorizationCreate(Security.AuthorizationItemSet*,Security.AuthorizationItemSet*,Security.AuthorizationFlags,System.IntPtr&)",
			"System.Int32 Security.SecCertificate::SecCertificateCopyCommonName(System.IntPtr,System.IntPtr&)",
			"System.Int32 Security.SecCertificate::SecCertificateCopyEmailAddresses(System.IntPtr,System.IntPtr&)",
			"System.Int32 Security.SslContext::SSLCopyALPNProtocols(System.IntPtr,System.IntPtr&)",
			"System.Int32 Security.SslContext::SSLSetSessionTicketsEnabled(System.IntPtr,System.Boolean)",
			"System.Int32 SystemConfiguration.NetworkReachability::SCNetworkReachabilityGetFlags(System.IntPtr,SystemConfiguration.NetworkReachabilityFlags&)",
			"System.IntPtr CoreMedia.CMAttachmentBearer::CMGetAttachment(System.IntPtr,System.IntPtr,CoreMedia.CMAttachmentMode&)",
			"System.IntPtr CoreMedia.CMFormatDescription::CMAudioFormatDescriptionGetChannelLayout(System.IntPtr,System.IntPtr&)",
			"System.IntPtr CoreMedia.CMFormatDescription::CMAudioFormatDescriptionGetFormatList(System.IntPtr,System.IntPtr&)",
			"System.IntPtr CoreMedia.CMFormatDescription::CMAudioFormatDescriptionGetMagicCookie(System.IntPtr,System.IntPtr&)",
			"System.IntPtr CoreMedia.CMSampleBuffer::CMSampleBufferCreateCopyWithNewTiming(System.IntPtr,System.IntPtr,System.IntPtr,CoreMedia.CMSampleTimingInfo*,System.IntPtr&)",
			"System.IntPtr CoreMedia.CMSampleBuffer::CMSampleBufferGetSampleAttachmentsArray(System.IntPtr,System.Boolean)",
			"System.IntPtr CoreMedia.CMSampleBuffer::CMSampleBufferGetSampleTimingInfoArray(System.IntPtr,System.IntPtr,CoreMedia.CMSampleTimingInfo*,System.IntPtr&)",
			"System.IntPtr CoreServices.FSEventStream::FSEventStreamCreate(System.IntPtr,method System.Void *(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr),CoreServices.FSEventStreamContext&,System.IntPtr,System.UInt64,System.Double,CoreServices.FSEventStreamCreateFlags)",
			"System.IntPtr CoreServices.FSEventStream::FSEventStreamCreateRelativeToDevice(System.IntPtr,method System.Void *(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr),CoreServices.FSEventStreamContext&,System.UInt64,System.IntPtr,System.UInt64,System.Double,CoreServices.FSEventStreamCreateFlags)",
			"System.IntPtr CoreText.CTFont::CTFontCopyLocalizedName(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.IntPtr CoreText.CTFont::CTFontCreateCopyWithAttributes(System.IntPtr,System.Runtime.InteropServices.NFloat,CoreGraphics.CGAffineTransform&,System.IntPtr)",
			"System.IntPtr CoreText.CTFont::CTFontCreateCopyWithFamily(System.IntPtr,System.Runtime.InteropServices.NFloat,CoreGraphics.CGAffineTransform&,System.IntPtr)",
			"System.IntPtr CoreText.CTFont::CTFontCreateCopyWithSymbolicTraits(System.IntPtr,System.Runtime.InteropServices.NFloat,CoreGraphics.CGAffineTransform&,CoreText.CTFontSymbolicTraits,CoreText.CTFontSymbolicTraits)",
			"System.IntPtr CoreText.CTFont::CTFontCreatePathForGlyph(System.IntPtr,System.UInt16,CoreGraphics.CGAffineTransform&)",
			"System.IntPtr CoreText.CTFont::CTFontCreateWithFontDescriptor(System.IntPtr,System.Runtime.InteropServices.NFloat,CoreGraphics.CGAffineTransform&)",
			"System.IntPtr CoreText.CTFont::CTFontCreateWithFontDescriptorAndOptions(System.IntPtr,System.Runtime.InteropServices.NFloat,CoreGraphics.CGAffineTransform&,System.UIntPtr)",
			"System.IntPtr CoreText.CTFont::CTFontCreateWithGraphicsFont(System.IntPtr,System.Runtime.InteropServices.NFloat,CoreGraphics.CGAffineTransform&,System.IntPtr)",
			"System.IntPtr CoreText.CTFont::CTFontCreateWithName(System.IntPtr,System.Runtime.InteropServices.NFloat,CoreGraphics.CGAffineTransform&)",
			"System.IntPtr CoreText.CTFont::CTFontCreateWithNameAndOptions(System.IntPtr,System.Runtime.InteropServices.NFloat,CoreGraphics.CGAffineTransform&,System.UIntPtr)",
			"System.IntPtr CoreText.CTFontDescriptor::CTFontDescriptorCopyLocalizedAttribute(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.IntPtr CoreText.CTFontManager::CTFontManagerCopyRegisteredFontDescriptors(CoreText.CTFontManagerScope,System.Boolean)",
			"System.IntPtr CoreText.CTRunDelegate::CTRunDelegateCreate(CoreText.CTRunDelegateCallbacks&,System.IntPtr)",
			"System.IntPtr CoreVideo.CVBuffer::CVBufferCopyAttachment(System.IntPtr,System.IntPtr,CoreVideo.CVAttachmentMode&)",
			"System.IntPtr CoreVideo.CVBuffer::CVBufferGetAttachment(System.IntPtr,System.IntPtr,CoreVideo.CVAttachmentMode&)",
			"System.IntPtr Foundation.NSSearchPath::NSSearchPathForDirectoriesInDomains(System.UIntPtr,System.UIntPtr,System.Boolean)",
			"System.IntPtr Foundation.NSThread::xamarin_init_nsthread(System.IntPtr,System.Boolean,System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.IntPtr GameController.GCExtendedGamepadSnapshotData::NSDataFromGCExtendedGamepadSnapshotData(GameController.GCExtendedGamepadSnapshotData&)",
			"System.IntPtr GameController.GCExtendedGamepadSnapShotDataV100::NSDataFromGCExtendedGamepadSnapShotDataV100(GameController.GCExtendedGamepadSnapShotDataV100&)",
			"System.IntPtr GameController.GCGamepadSnapShotDataV100::NSDataFromGCGamepadSnapShotDataV100(GameController.GCGamepadSnapShotDataV100&)",
			"System.IntPtr GameController.GCMicroGamepadSnapshotData::NSDataFromGCMicroGamepadSnapshotData(GameController.GCMicroGamepadSnapshotData&)",
			"System.IntPtr GameController.GCMicroGamepadSnapShotDataV100::NSDataFromGCMicroGamepadSnapShotDataV100(GameController.GCMicroGamepadSnapShotDataV100&)",
			"System.IntPtr ObjCRuntime.Selector::GetHandle(System.String)",
			"System.IntPtr SearchKit.SKIndex::SKIndexOpenWithURL(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.IntPtr Security.SecAccessControl::SecAccessControlCreateWithFlags(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.IntPtr Security.SecCertificate::SecCertificateCopySerialNumberData(System.IntPtr,System.IntPtr&)",
			"System.IntPtr Security.SecKey::SecKeyCopyExternalRepresentation(System.IntPtr,System.IntPtr&)",
			"System.IntPtr Security.SecKey::SecKeyCopyKeyExchangeResult(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.IntPtr Security.SecKey::SecKeyCreateDecryptedData(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.IntPtr Security.SecKey::SecKeyCreateEncryptedData(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.IntPtr Security.SecKey::SecKeyCreateRandomKey(System.IntPtr,System.IntPtr&)",
			"System.IntPtr Security.SecKey::SecKeyCreateSignature(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.IntPtr Security.SecKey::SecKeyCreateWithData(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.IntPtr Security.SecPolicy::SecPolicyCreateSSL(System.Boolean,System.IntPtr)",
			"System.IntPtr SystemConfiguration.NetworkReachability::SCNetworkReachabilityCreateWithAddress(System.IntPtr,SystemConfiguration.NetworkReachability/sockaddr_in&)",
			"System.IntPtr SystemConfiguration.NetworkReachability::SCNetworkReachabilityCreateWithAddressPair(System.IntPtr,System.IntPtr,SystemConfiguration.NetworkReachability/sockaddr_in&)",
			"System.IntPtr SystemConfiguration.NetworkReachability::SCNetworkReachabilityCreateWithAddressPair(System.IntPtr,SystemConfiguration.NetworkReachability/sockaddr_in&,System.IntPtr)",
			"System.IntPtr SystemConfiguration.NetworkReachability::SCNetworkReachabilityCreateWithAddressPair(System.IntPtr,SystemConfiguration.NetworkReachability/sockaddr_in&,SystemConfiguration.NetworkReachability/sockaddr_in&)",
			"System.Void CoreText.CTFontManager::CTFontManagerRegisterFontDescriptors(System.IntPtr,CoreText.CTFontManagerScope,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void CoreText.CTFontManager::CTFontManagerRegisterFontsWithAssetNames(System.IntPtr,System.IntPtr,CoreText.CTFontManagerScope,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void CoreText.CTFontManager::CTFontManagerRegisterFontURLs(System.IntPtr,CoreText.CTFontManagerScope,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void CoreVideo.CVPixelBuffer::CVPixelBufferGetExtendedPixels(System.IntPtr,System.UIntPtr&,System.UIntPtr&,System.UIntPtr&,System.UIntPtr&)",
			"System.Void Foundation.NSObject::xamarin_release_managed_ref(System.IntPtr,System.Boolean)",
			"System.Void Network.NWAdvertiseDescriptor::nw_advertise_descriptor_set_no_auto_rename(System.IntPtr,System.Boolean)",
			"System.Void Network.NWBrowserDescriptor::nw_browse_descriptor_set_include_txt_record(System.IntPtr,System.Boolean)",
			"System.Void Network.NWConnection::nw_connection_send(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void Network.NWConnectionGroup::nw_connection_group_set_receive_handler(System.IntPtr,System.UInt32,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void Network.NWContentContext::nw_content_context_set_is_final(System.IntPtr,System.Boolean)",
			"System.Void Network.NWFramer::nw_framer_deliver_input(System.IntPtr,System.Byte*,System.UIntPtr,System.IntPtr,System.Boolean)",
			"System.Void Network.NWMulticastGroup::nw_multicast_group_descriptor_set_disable_unicast_traffic(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_fast_open_enabled(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_include_peer_to_peer(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_local_only(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_prefer_no_proxy(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_prohibit_constrained(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_prohibit_expensive(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_requires_dnssec_validation(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_reuse_local_address(System.IntPtr,System.Boolean)",
			"System.Void Network.NWPrivacyContext::nw_privacy_context_require_encrypted_name_resolution(System.IntPtr,System.Boolean,System.IntPtr)",
			"System.Void Network.NWProtocolIPOptions::nw_ip_options_set_disable_multicast_loopback(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_ip_options_set_calculate_receive_time(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_ip_options_set_disable_fragmentation(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_ip_options_set_use_minimum_mtu(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_disable_ack_stretching(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_disable_ecn(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_enable_fast_open(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_enable_keepalive(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_no_delay(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_no_options(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_no_push(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_retransmit_fin_drop(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_udp_options_set_prefer_no_checksum(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolQuicOptions::nw_quic_set_stream_is_datagram(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolQuicOptions::nw_quic_set_stream_is_unidirectional(System.IntPtr,System.Boolean)",
			"System.Void Network.NWWebSocketOptions::nw_ws_options_set_auto_reply_ping(System.IntPtr,System.Boolean)",
			"System.Void Network.NWWebSocketOptions::nw_ws_options_set_skip_handshake(System.IntPtr,System.Boolean)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSend_AudioComponentDescription_UInt32_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,System.UInt32,ObjCRuntime.NativeHandle)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSend_GCDualSenseAdaptiveTriggerPositionalAmplitudes_float(System.IntPtr,System.IntPtr,GameController.GCDualSenseAdaptiveTriggerPositionalAmplitudes,System.Single)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSend_GCDualSenseAdaptiveTriggerPositionalResistiveStrengths(System.IntPtr,System.IntPtr,GameController.GCDualSenseAdaptiveTriggerPositionalResistiveStrengths)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSend_NativeHandle_AudioComponentDescription_NativeHandle_UInt32(System.IntPtr,System.IntPtr,ObjCRuntime.NativeHandle,AudioUnit.AudioComponentDescription,ObjCRuntime.NativeHandle,System.UInt32)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSendSuper_AudioComponentDescription_UInt32_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,System.UInt32,ObjCRuntime.NativeHandle)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSendSuper_GCDualSenseAdaptiveTriggerPositionalAmplitudes_float(System.IntPtr,System.IntPtr,GameController.GCDualSenseAdaptiveTriggerPositionalAmplitudes,System.Single)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSendSuper_GCDualSenseAdaptiveTriggerPositionalResistiveStrengths(System.IntPtr,System.IntPtr,GameController.GCDualSenseAdaptiveTriggerPositionalResistiveStrengths)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSendSuper_NativeHandle_AudioComponentDescription_NativeHandle_UInt32(System.IntPtr,System.IntPtr,ObjCRuntime.NativeHandle,AudioUnit.AudioComponentDescription,ObjCRuntime.NativeHandle,System.UInt32)",
			"System.Void ObjCRuntime.Protocol::protocol_addMethodDescription(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean,System.Boolean)",
			"System.Void ObjCRuntime.Protocol::protocol_addProperty(System.IntPtr,System.IntPtr,System.IntPtr*,System.Int32,System.Boolean,System.Boolean)",
			"System.Void ObjCRuntime.Runtime::xamarin_switch_gchandle(System.IntPtr,System.Boolean)",
			"System.Void OpenGLES.EAGLContext::EAGLGetVersion(System.UIntPtr&,System.UIntPtr&)",
		};
	}
}
