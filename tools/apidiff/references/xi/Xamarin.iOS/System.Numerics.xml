<?xml version="1.0" encoding="utf-8"?>
<assemblies>
  <assembly name="System.Numerics" version="2.0.5.0">
    <attributes>
      <attribute name="System.CLSCompliantAttribute">
        <properties>
          <property name="IsCompliant" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Diagnostics.DebuggableAttribute">
        <properties>
          <property name="IsJITTrackingEnabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="IsJITOptimizerDisabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="DebuggingFlags" value="IgnoreSymbolStoreSequencePoints" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCompanyAttribute">
        <properties>
          <property name="Company" value="Mono development team" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCopyrightAttribute">
        <properties>
          <property name="Copyright" value="(c) Various Mono authors" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDefaultAliasAttribute">
        <properties>
          <property name="DefaultAlias" value="System.Numerics.dll" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDelaySignAttribute">
        <properties>
          <property name="DelaySign" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDescriptionAttribute">
        <properties>
          <property name="Description" value="System.Numerics.dll" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyFileVersionAttribute">
        <properties>
          <property name="Version" value="4.0.50524.0" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyInformationalVersionAttribute">
        <properties>
          <property name="InformationalVersion" value="4.0.50524.0" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyKeyFileAttribute">
        <properties>
          <property name="KeyFile" value="../ecma.pub" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyProductAttribute">
        <properties>
          <property name="Product" value="Mono Common Language Infrastructure" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyTitleAttribute">
        <properties>
          <property name="Title" value="System.Numerics.dll" />
        </properties>
      </attribute>
      <attribute name="System.Resources.NeutralResourcesLanguageAttribute">
        <properties>
          <property name="CultureName" value="en-US" />
        </properties>
      </attribute>
      <attribute name="System.Resources.SatelliteContractVersionAttribute">
        <properties>
          <property name="Version" value="2.0.5.0" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
        <properties>
          <property name="CompilationRelaxations" value="8" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute">
        <properties>
          <property name="Value" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Security.SecurityCriticalAttribute" />
    </attributes>
    <namespaces>
      <namespace name="System.Numerics">
        <classes>
          <class name="BigInteger" type="struct" base="System.ValueType" sealed="true" serializable="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IComparable`1[System.Numerics.BigInteger]" />
              <interface name="System.IEquatable`1[System.Numerics.BigInteger]" />
              <interface name="System.IFormattable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Decimal)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Double)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Single)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt64)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsEven" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEven()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsOne" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsOne()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsPowerOfTwo" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsPowerOfTwo()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsZero" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsZero()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinusOne" attrib="0" ptype="System.Numerics.BigInteger">
                <methods>
                  <method name="get_MinusOne()" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="One" attrib="0" ptype="System.Numerics.BigInteger">
                <methods>
                  <method name="get_One()" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Sign" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Sign()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Zero" attrib="0" ptype="System.Numerics.BigInteger">
                <methods>
                  <method name="get_Zero()" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Abs(System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Add(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Compare(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="CompareTo(System.Int64)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="CompareTo(System.Numerics.BigInteger)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CompareTo(System.UInt64)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="DivRem(System.Numerics.BigInteger, System.Numerics.BigInteger, out System.Numerics.BigInteger&amp;)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="dividend" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="divisor" position="1" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="remainder" position="2" attrib="2" type="System.Numerics.BigInteger" direction="out" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="dividend" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="divisor" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Equals(System.Int64)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.BigInteger)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.UInt64)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GreatestCommonDivisor(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Log(System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Log(System.Numerics.BigInteger, System.Double)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="baseValue" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Log10(System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Max(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Min(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="ModPow(System.Numerics.BigInteger, System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="exponent" position="1" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="modulus" position="2" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Negate(System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Pow(System.Numerics.BigInteger, System.Int32)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="exponent" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Remainder(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="dividend" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="divisor" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="Subtract(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="150" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="ToByteArray()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.Numerics.BigInteger&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Numerics.BigInteger" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Numerics.BigInteger&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.Numerics.BigInteger" direction="out" />
                </parameters>
              </method>
              <method name="op_Addition(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_BitwiseAnd(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_BitwiseOr(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Decrement(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="dividend" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="divisor" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Equality(System.Int64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Int64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.BigInteger, System.Int64)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.BigInteger, System.UInt64)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_Equality(System.UInt64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_ExclusiveOr(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Double)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Single)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.Int64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Int64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.Numerics.BigInteger, System.Int64)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.Numerics.BigInteger, System.UInt64)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.UInt64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.Int64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Int64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.Numerics.BigInteger, System.Int64)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.Numerics.BigInteger, System.UInt64)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.UInt64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Byte)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int16)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int32)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int64)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_Implicit(System.SByte)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt16)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt32)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt64)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_Increment(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Int64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Int64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.BigInteger, System.Int64)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.BigInteger, System.UInt64)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_Inequality(System.UInt64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_LeftShift(System.Numerics.BigInteger, System.Int32)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="shift" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_LessThan(System.Int64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Int64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_LessThan(System.Numerics.BigInteger, System.Int64)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_LessThan(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_LessThan(System.Numerics.BigInteger, System.UInt64)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_LessThan(System.UInt64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.Int64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Int64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.Numerics.BigInteger, System.Int64)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.Numerics.BigInteger, System.UInt64)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.UInt64, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Modulus(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="dividend" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="divisor" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_OnesComplement(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_RightShift(System.Numerics.BigInteger, System.Int32)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="shift" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Numerics.BigInteger, System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.BigInteger" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_UnaryPlus(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Complex" type="struct" base="System.ValueType" sealed="true" serializable="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[System.Numerics.Complex]" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="ImaginaryOne" attrib="54" fieldtype="System.Numerics.Complex" />
              <field name="One" attrib="54" fieldtype="System.Numerics.Complex" />
              <field name="Zero" attrib="54" fieldtype="System.Numerics.Complex" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Double, System.Double)" attrib="6278">
                <parameters>
                  <parameter name="real" position="0" attrib="0" type="System.Double" />
                  <parameter name="imaginary" position="1" attrib="0" type="System.Double" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Imaginary" attrib="0" ptype="System.Double">
                <methods>
                  <method name="get_Imaginary()" attrib="2182" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Magnitude" attrib="0" ptype="System.Double">
                <methods>
                  <method name="get_Magnitude()" attrib="2182" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Phase" attrib="0" ptype="System.Double">
                <methods>
                  <method name="get_Phase()" attrib="2182" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Real" attrib="0" ptype="System.Double">
                <methods>
                  <method name="get_Real()" attrib="2182" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Abs(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Acos(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Add(System.Numerics.Complex, System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Asin(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Atan(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Conjugate(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Cos(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Cosh(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.Complex, System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="dividend" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="divisor" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Complex)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Exp(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="FromPolarCoordinates(System.Double, System.Double)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="magnitude" position="0" attrib="0" type="System.Double" />
                  <parameter name="phase" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Log(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Log(System.Numerics.Complex, System.Double)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="baseValue" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Log10(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Complex, System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Negate(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Pow(System.Numerics.Complex, System.Double)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="power" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Pow(System.Numerics.Complex, System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="power" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Reciprocal(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Sin(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Sinh(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Sqrt(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Subtract(System.Numerics.Complex, System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Tan(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="Tanh(System.Numerics.Complex)" attrib="150" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="op_Addition(System.Numerics.Complex, System.Numerics.Complex)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.Complex, System.Numerics.Complex)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.Complex, System.Numerics.Complex)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.BigInteger)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.BigInteger" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Byte)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Double)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int16)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int32)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int64)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_Implicit(System.SByte)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Single)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt16)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt32)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt64)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.Complex, System.Numerics.Complex)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Complex, System.Numerics.Complex)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Numerics.Complex, System.Numerics.Complex)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Complex" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Numerics.Complex)" attrib="2198" static="true" returntype="System.Numerics.Complex">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Complex" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Matrix3x2" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[System.Numerics.Matrix3x2]" />
            </interfaces>
            <fields>
              <field name="M11" attrib="6" fieldtype="System.Single" />
              <field name="M12" attrib="6" fieldtype="System.Single" />
              <field name="M21" attrib="6" fieldtype="System.Single" />
              <field name="M22" attrib="6" fieldtype="System.Single" />
              <field name="M31" attrib="6" fieldtype="System.Single" />
              <field name="M32" attrib="6" fieldtype="System.Single" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" attrib="6278">
                <parameters>
                  <parameter name="m11" position="0" attrib="0" type="System.Single" />
                  <parameter name="m12" position="1" attrib="0" type="System.Single" />
                  <parameter name="m21" position="2" attrib="0" type="System.Single" />
                  <parameter name="m22" position="3" attrib="0" type="System.Single" />
                  <parameter name="m31" position="4" attrib="0" type="System.Single" />
                  <parameter name="m32" position="5" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Identity" attrib="0" ptype="System.Numerics.Matrix3x2">
                <methods>
                  <method name="get_Identity()" attrib="2198" static="true" returntype="System.Numerics.Matrix3x2">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsIdentity" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsIdentity()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Translation" attrib="0" ptype="System.Numerics.Vector2">
                <methods>
                  <method name="get_Translation()" attrib="2182" returntype="System.Numerics.Vector2">
                    <parameters />
                  </method>
                  <method name="set_Translation(System.Numerics.Vector2)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="CreateRotation(System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="radians" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateRotation(System.Single, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="radians" position="0" attrib="0" type="System.Single" />
                  <parameter name="centerPoint" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="CreateScale(System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="scales" position="0" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="CreateScale(System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="scale" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateScale(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="scales" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="centerPoint" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="CreateScale(System.Single, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="scale" position="0" attrib="0" type="System.Single" />
                  <parameter name="centerPoint" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="CreateScale(System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="xScale" position="0" attrib="0" type="System.Single" />
                  <parameter name="yScale" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateScale(System.Single, System.Single, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="xScale" position="0" attrib="0" type="System.Single" />
                  <parameter name="yScale" position="1" attrib="0" type="System.Single" />
                  <parameter name="centerPoint" position="2" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="CreateSkew(System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="radiansX" position="0" attrib="0" type="System.Single" />
                  <parameter name="radiansY" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateSkew(System.Single, System.Single, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="radiansX" position="0" attrib="0" type="System.Single" />
                  <parameter name="radiansY" position="1" attrib="0" type="System.Single" />
                  <parameter name="centerPoint" position="2" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="CreateTranslation(System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="CreateTranslation(System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="xPosition" position="0" attrib="0" type="System.Single" />
                  <parameter name="yPosition" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Matrix3x2)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetDeterminant()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Invert(System.Numerics.Matrix3x2, out System.Numerics.Matrix3x2&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="matrix" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="result" position="1" attrib="2" type="System.Numerics.Matrix3x2" direction="out" />
                </parameters>
              </method>
              <method name="Lerp(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="matrix1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="matrix2" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="amount" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Matrix3x2, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Negate(System.Numerics.Matrix3x2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="Subtract(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)" attrib="150" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="op_Addition(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)" attrib="2198" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)" attrib="2198" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Matrix3x2, System.Single)" attrib="2198" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)" attrib="2198" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Numerics.Matrix3x2)" attrib="2198" static="true" returntype="System.Numerics.Matrix3x2">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Matrix4x4" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[System.Numerics.Matrix4x4]" />
            </interfaces>
            <fields>
              <field name="M11" attrib="6" fieldtype="System.Single" />
              <field name="M12" attrib="6" fieldtype="System.Single" />
              <field name="M13" attrib="6" fieldtype="System.Single" />
              <field name="M14" attrib="6" fieldtype="System.Single" />
              <field name="M21" attrib="6" fieldtype="System.Single" />
              <field name="M22" attrib="6" fieldtype="System.Single" />
              <field name="M23" attrib="6" fieldtype="System.Single" />
              <field name="M24" attrib="6" fieldtype="System.Single" />
              <field name="M31" attrib="6" fieldtype="System.Single" />
              <field name="M32" attrib="6" fieldtype="System.Single" />
              <field name="M33" attrib="6" fieldtype="System.Single" />
              <field name="M34" attrib="6" fieldtype="System.Single" />
              <field name="M41" attrib="6" fieldtype="System.Single" />
              <field name="M42" attrib="6" fieldtype="System.Single" />
              <field name="M43" attrib="6" fieldtype="System.Single" />
              <field name="M44" attrib="6" fieldtype="System.Single" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Numerics.Matrix3x2)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" attrib="6278">
                <parameters>
                  <parameter name="m11" position="0" attrib="0" type="System.Single" />
                  <parameter name="m12" position="1" attrib="0" type="System.Single" />
                  <parameter name="m13" position="2" attrib="0" type="System.Single" />
                  <parameter name="m14" position="3" attrib="0" type="System.Single" />
                  <parameter name="m21" position="4" attrib="0" type="System.Single" />
                  <parameter name="m22" position="5" attrib="0" type="System.Single" />
                  <parameter name="m23" position="6" attrib="0" type="System.Single" />
                  <parameter name="m24" position="7" attrib="0" type="System.Single" />
                  <parameter name="m31" position="8" attrib="0" type="System.Single" />
                  <parameter name="m32" position="9" attrib="0" type="System.Single" />
                  <parameter name="m33" position="10" attrib="0" type="System.Single" />
                  <parameter name="m34" position="11" attrib="0" type="System.Single" />
                  <parameter name="m41" position="12" attrib="0" type="System.Single" />
                  <parameter name="m42" position="13" attrib="0" type="System.Single" />
                  <parameter name="m43" position="14" attrib="0" type="System.Single" />
                  <parameter name="m44" position="15" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Identity" attrib="0" ptype="System.Numerics.Matrix4x4">
                <methods>
                  <method name="get_Identity()" attrib="2198" static="true" returntype="System.Numerics.Matrix4x4">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsIdentity" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsIdentity()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Translation" attrib="0" ptype="System.Numerics.Vector3">
                <methods>
                  <method name="get_Translation()" attrib="2182" returntype="System.Numerics.Vector3">
                    <parameters />
                  </method>
                  <method name="set_Translation(System.Numerics.Vector3)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector3" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Numerics.Matrix4x4, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="CreateBillboard(System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="objectPosition" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="cameraPosition" position="1" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="cameraUpVector" position="2" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="cameraForwardVector" position="3" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateConstrainedBillboard(System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="objectPosition" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="cameraPosition" position="1" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="rotateAxis" position="2" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="cameraForwardVector" position="3" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="objectForwardVector" position="4" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateFromAxisAngle(System.Numerics.Vector3, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="axis" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="angle" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateFromQuaternion(System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="quaternion" position="0" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="CreateFromYawPitchRoll(System.Single, System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="yaw" position="0" attrib="0" type="System.Single" />
                  <parameter name="pitch" position="1" attrib="0" type="System.Single" />
                  <parameter name="roll" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateLookAt(System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="cameraPosition" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="cameraTarget" position="1" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="cameraUpVector" position="2" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateOrthographic(System.Single, System.Single, System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="width" position="0" attrib="0" type="System.Single" />
                  <parameter name="height" position="1" attrib="0" type="System.Single" />
                  <parameter name="zNearPlane" position="2" attrib="0" type="System.Single" />
                  <parameter name="zFarPlane" position="3" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateOrthographicOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Single" />
                  <parameter name="right" position="1" attrib="0" type="System.Single" />
                  <parameter name="bottom" position="2" attrib="0" type="System.Single" />
                  <parameter name="top" position="3" attrib="0" type="System.Single" />
                  <parameter name="zNearPlane" position="4" attrib="0" type="System.Single" />
                  <parameter name="zFarPlane" position="5" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreatePerspective(System.Single, System.Single, System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="width" position="0" attrib="0" type="System.Single" />
                  <parameter name="height" position="1" attrib="0" type="System.Single" />
                  <parameter name="nearPlaneDistance" position="2" attrib="0" type="System.Single" />
                  <parameter name="farPlaneDistance" position="3" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreatePerspectiveFieldOfView(System.Single, System.Single, System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="fieldOfView" position="0" attrib="0" type="System.Single" />
                  <parameter name="aspectRatio" position="1" attrib="0" type="System.Single" />
                  <parameter name="nearPlaneDistance" position="2" attrib="0" type="System.Single" />
                  <parameter name="farPlaneDistance" position="3" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreatePerspectiveOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Single" />
                  <parameter name="right" position="1" attrib="0" type="System.Single" />
                  <parameter name="bottom" position="2" attrib="0" type="System.Single" />
                  <parameter name="top" position="3" attrib="0" type="System.Single" />
                  <parameter name="nearPlaneDistance" position="4" attrib="0" type="System.Single" />
                  <parameter name="farPlaneDistance" position="5" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateReflection(System.Numerics.Plane)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Plane" />
                </parameters>
              </method>
              <method name="CreateRotationX(System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="radians" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateRotationX(System.Single, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="radians" position="0" attrib="0" type="System.Single" />
                  <parameter name="centerPoint" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateRotationY(System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="radians" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateRotationY(System.Single, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="radians" position="0" attrib="0" type="System.Single" />
                  <parameter name="centerPoint" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateRotationZ(System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="radians" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateRotationZ(System.Single, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="radians" position="0" attrib="0" type="System.Single" />
                  <parameter name="centerPoint" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateScale(System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="scales" position="0" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateScale(System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="scale" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateScale(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="scales" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="centerPoint" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateScale(System.Single, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="scale" position="0" attrib="0" type="System.Single" />
                  <parameter name="centerPoint" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateScale(System.Single, System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="xScale" position="0" attrib="0" type="System.Single" />
                  <parameter name="yScale" position="1" attrib="0" type="System.Single" />
                  <parameter name="zScale" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateScale(System.Single, System.Single, System.Single, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="xScale" position="0" attrib="0" type="System.Single" />
                  <parameter name="yScale" position="1" attrib="0" type="System.Single" />
                  <parameter name="zScale" position="2" attrib="0" type="System.Single" />
                  <parameter name="centerPoint" position="3" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateShadow(System.Numerics.Vector3, System.Numerics.Plane)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="lightDirection" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="plane" position="1" attrib="0" type="System.Numerics.Plane" />
                </parameters>
              </method>
              <method name="CreateTranslation(System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CreateTranslation(System.Single, System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="xPosition" position="0" attrib="0" type="System.Single" />
                  <parameter name="yPosition" position="1" attrib="0" type="System.Single" />
                  <parameter name="zPosition" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateWorld(System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="forward" position="1" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="up" position="2" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Decompose(System.Numerics.Matrix4x4, out System.Numerics.Vector3&amp;, out System.Numerics.Quaternion&amp;, out System.Numerics.Vector3&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="matrix" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="scale" position="1" attrib="2" type="System.Numerics.Vector3" direction="out" />
                  <parameter name="rotation" position="2" attrib="2" type="System.Numerics.Quaternion" direction="out" />
                  <parameter name="translation" position="3" attrib="2" type="System.Numerics.Vector3" direction="out" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Matrix4x4)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetDeterminant()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Invert(System.Numerics.Matrix4x4, out System.Numerics.Matrix4x4&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="matrix" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="result" position="1" attrib="2" type="System.Numerics.Matrix4x4" direction="out" />
                </parameters>
              </method>
              <method name="Lerp(System.Numerics.Matrix4x4, System.Numerics.Matrix4x4, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="matrix1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="matrix2" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="amount" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Matrix4x4, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Matrix4x4, System.Single)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Negate(System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="Subtract(System.Numerics.Matrix4x4, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="Transform(System.Numerics.Matrix4x4, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="rotation" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Transpose(System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="matrix" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="op_Addition(System.Numerics.Matrix4x4, System.Numerics.Matrix4x4)" attrib="2198" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.Matrix4x4, System.Numerics.Matrix4x4)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.Matrix4x4, System.Numerics.Matrix4x4)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Matrix4x4, System.Numerics.Matrix4x4)" attrib="2198" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Matrix4x4, System.Single)" attrib="2198" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Numerics.Matrix4x4, System.Numerics.Matrix4x4)" attrib="2198" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Numerics.Matrix4x4)" attrib="2198" static="true" returntype="System.Numerics.Matrix4x4">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Plane" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[System.Numerics.Plane]" />
            </interfaces>
            <fields>
              <field name="D" attrib="6" fieldtype="System.Single" />
              <field name="Normal" attrib="6" fieldtype="System.Numerics.Vector3" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Numerics.Vector4)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Numerics.Vector3, System.Single)" attrib="6278">
                <parameters>
                  <parameter name="normal" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="d" position="1" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Single, System.Single, System.Single, System.Single)" attrib="6278">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Single" />
                  <parameter name="y" position="1" attrib="0" type="System.Single" />
                  <parameter name="z" position="2" attrib="0" type="System.Single" />
                  <parameter name="d" position="3" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="CreateFromVertices(System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Plane">
                <parameters>
                  <parameter name="point1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="point2" position="1" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="point3" position="2" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Dot(System.Numerics.Plane, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="plane" position="0" attrib="0" type="System.Numerics.Plane" />
                  <parameter name="value" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="DotCoordinate(System.Numerics.Plane, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="plane" position="0" attrib="0" type="System.Numerics.Plane" />
                  <parameter name="value" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="DotNormal(System.Numerics.Plane, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="plane" position="0" attrib="0" type="System.Numerics.Plane" />
                  <parameter name="value" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Plane)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.Plane" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Normalize(System.Numerics.Plane)" attrib="150" static="true" returntype="System.Numerics.Plane">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Plane" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="Transform(System.Numerics.Plane, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Plane">
                <parameters>
                  <parameter name="plane" position="0" attrib="0" type="System.Numerics.Plane" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Plane, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Plane">
                <parameters>
                  <parameter name="plane" position="0" attrib="0" type="System.Numerics.Plane" />
                  <parameter name="rotation" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.Plane, System.Numerics.Plane)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Plane" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Plane" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.Plane, System.Numerics.Plane)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Plane" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Plane" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Quaternion" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[System.Numerics.Quaternion]" />
            </interfaces>
            <fields>
              <field name="W" attrib="6" fieldtype="System.Single" />
              <field name="X" attrib="6" fieldtype="System.Single" />
              <field name="Y" attrib="6" fieldtype="System.Single" />
              <field name="Z" attrib="6" fieldtype="System.Single" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Numerics.Vector3, System.Single)" attrib="6278">
                <parameters>
                  <parameter name="vectorPart" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="scalarPart" position="1" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Single, System.Single, System.Single, System.Single)" attrib="6278">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Single" />
                  <parameter name="y" position="1" attrib="0" type="System.Single" />
                  <parameter name="z" position="2" attrib="0" type="System.Single" />
                  <parameter name="w" position="3" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Identity" attrib="0" ptype="System.Numerics.Quaternion">
                <methods>
                  <method name="get_Identity()" attrib="2198" static="true" returntype="System.Numerics.Quaternion">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsIdentity" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsIdentity()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Concatenate(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Conjugate(System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="CreateFromAxisAngle(System.Numerics.Vector3, System.Single)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="axis" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="angle" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CreateFromRotationMatrix(System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="matrix" position="0" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="CreateFromYawPitchRoll(System.Single, System.Single, System.Single)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="yaw" position="0" attrib="0" type="System.Single" />
                  <parameter name="pitch" position="1" attrib="0" type="System.Single" />
                  <parameter name="roll" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Dot(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="quaternion1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="quaternion2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Quaternion)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Inverse(System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Length()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="LengthSquared()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="Lerp(System.Numerics.Quaternion, System.Numerics.Quaternion, System.Single)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="quaternion1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="quaternion2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="amount" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Quaternion, System.Single)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Negate(System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Normalize(System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Slerp(System.Numerics.Quaternion, System.Numerics.Quaternion, System.Single)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="quaternion1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="quaternion2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="amount" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Subtract(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="op_Addition(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="2198" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="2198" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="2198" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Quaternion, System.Single)" attrib="2198" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Numerics.Quaternion, System.Numerics.Quaternion)" attrib="2198" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Quaternion" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Numerics.Quaternion)" attrib="2198" static="true" returntype="System.Numerics.Quaternion">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Vector2" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[System.Numerics.Vector2]" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="X" attrib="6" fieldtype="System.Single" />
              <field name="Y" attrib="6" fieldtype="System.Single" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Single)" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Single, System.Single)" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Single" />
                  <parameter name="y" position="1" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="One" attrib="0" ptype="System.Numerics.Vector2">
                <methods>
                  <method name="get_One()" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnitX" attrib="0" ptype="System.Numerics.Vector2">
                <methods>
                  <method name="get_UnitX()" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnitY" attrib="0" ptype="System.Numerics.Vector2">
                <methods>
                  <method name="get_UnitY()" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Zero" attrib="0" ptype="System.Numerics.Vector2">
                <methods>
                  <method name="get_Zero()" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Abs(System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Add(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Clamp(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="min" position="1" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="max" position="2" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="CopyTo(System.Single[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Single[]" />
                </parameters>
              </method>
              <method name="CopyTo(System.Single[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Single[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Distance(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="DistanceSquared(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.Vector2, System.Single)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="divisor" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Dot(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Single">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Vector2)" attrib="486" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Length()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="LengthSquared()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="Lerp(System.Numerics.Vector2, System.Numerics.Vector2, System.Single)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="amount" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Max(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Min(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Vector2, System.Single)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Multiply(System.Single, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Single" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Negate(System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Normalize(System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Reflect(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="vector" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="normal" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="SquareRoot(System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="Subtract(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector2, System.Numerics.Matrix3x2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector2, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector2, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="rotation" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="TransformNormal(System.Numerics.Vector2, System.Numerics.Matrix3x2)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="normal" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix3x2" />
                </parameters>
              </method>
              <method name="TransformNormal(System.Numerics.Vector2, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="normal" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="op_Addition(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.Vector2, System.Single)" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="value2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Vector2, System.Single)" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Single, System.Numerics.Vector2)" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Single" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Numerics.Vector2, System.Numerics.Vector2)" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Numerics.Vector2)" attrib="2198" static="true" returntype="System.Numerics.Vector2">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Vector3" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[System.Numerics.Vector3]" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="X" attrib="6" fieldtype="System.Single" />
              <field name="Y" attrib="6" fieldtype="System.Single" />
              <field name="Z" attrib="6" fieldtype="System.Single" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Single)" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Numerics.Vector2, System.Single)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="z" position="1" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Single, System.Single, System.Single)" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Single" />
                  <parameter name="y" position="1" attrib="0" type="System.Single" />
                  <parameter name="z" position="2" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="One" attrib="0" ptype="System.Numerics.Vector3">
                <methods>
                  <method name="get_One()" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnitX" attrib="0" ptype="System.Numerics.Vector3">
                <methods>
                  <method name="get_UnitX()" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnitY" attrib="0" ptype="System.Numerics.Vector3">
                <methods>
                  <method name="get_UnitY()" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnitZ" attrib="0" ptype="System.Numerics.Vector3">
                <methods>
                  <method name="get_UnitZ()" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Zero" attrib="0" ptype="System.Numerics.Vector3">
                <methods>
                  <method name="get_Zero()" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Abs(System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Add(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Clamp(System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="min" position="1" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="max" position="2" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="CopyTo(System.Single[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Single[]" />
                </parameters>
              </method>
              <method name="CopyTo(System.Single[], System.Int32)" attrib="134" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Single[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Cross(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="vector1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="vector2" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Distance(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="DistanceSquared(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.Vector3, System.Single)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="divisor" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Dot(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Single">
                <attributes />
                <parameters>
                  <parameter name="vector1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="vector2" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Vector3)" attrib="486" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Length()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="LengthSquared()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="Lerp(System.Numerics.Vector3, System.Numerics.Vector3, System.Single)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="amount" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Max(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Min(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Vector3, System.Single)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Multiply(System.Single, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Single" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Negate(System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Normalize(System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Reflect(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="vector" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="normal" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="SquareRoot(System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="Subtract(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector3, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector3, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="rotation" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="TransformNormal(System.Numerics.Vector3, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="normal" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="op_Addition(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.Vector3, System.Single)" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="value2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Vector3, System.Single)" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Single, System.Numerics.Vector3)" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Single" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Numerics.Vector3, System.Numerics.Vector3)" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Numerics.Vector3)" attrib="2198" static="true" returntype="System.Numerics.Vector3">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector3" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Vector4" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[System.Numerics.Vector4]" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="W" attrib="6" fieldtype="System.Single" />
              <field name="X" attrib="6" fieldtype="System.Single" />
              <field name="Y" attrib="6" fieldtype="System.Single" />
              <field name="Z" attrib="6" fieldtype="System.Single" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Single)" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Numerics.Vector3, System.Single)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="w" position="1" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Numerics.Vector2, System.Single, System.Single)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="z" position="1" attrib="0" type="System.Single" />
                  <parameter name="w" position="2" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Single, System.Single, System.Single, System.Single)" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Single" />
                  <parameter name="y" position="1" attrib="0" type="System.Single" />
                  <parameter name="z" position="2" attrib="0" type="System.Single" />
                  <parameter name="w" position="3" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="One" attrib="0" ptype="System.Numerics.Vector4">
                <methods>
                  <method name="get_One()" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnitW" attrib="0" ptype="System.Numerics.Vector4">
                <methods>
                  <method name="get_UnitW()" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnitX" attrib="0" ptype="System.Numerics.Vector4">
                <methods>
                  <method name="get_UnitX()" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnitY" attrib="0" ptype="System.Numerics.Vector4">
                <methods>
                  <method name="get_UnitY()" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnitZ" attrib="0" ptype="System.Numerics.Vector4">
                <methods>
                  <method name="get_UnitZ()" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Zero" attrib="0" ptype="System.Numerics.Vector4">
                <methods>
                  <method name="get_Zero()" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Abs(System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Add(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Clamp(System.Numerics.Vector4, System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="min" position="1" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="max" position="2" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="CopyTo(System.Single[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Single[]" />
                </parameters>
              </method>
              <method name="CopyTo(System.Single[], System.Int32)" attrib="134" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Single[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Distance(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="DistanceSquared(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.Vector4, System.Single)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="divisor" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Dot(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Single">
                <attributes />
                <parameters>
                  <parameter name="vector1" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="vector2" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Vector4)" attrib="486" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Length()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="LengthSquared()" attrib="134" returntype="System.Single">
                <parameters />
              </method>
              <method name="Lerp(System.Numerics.Vector4, System.Numerics.Vector4, System.Single)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="amount" position="2" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Max(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Min(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Multiply(System.Numerics.Vector4, System.Single)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Multiply(System.Single, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Single" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Negate(System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Normalize(System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="vector" position="0" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="SquareRoot(System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="Subtract(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector2, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector2, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector2" />
                  <parameter name="rotation" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector3, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector3, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector3" />
                  <parameter name="rotation" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector4, System.Numerics.Matrix4x4)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="vector" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Numerics.Matrix4x4" />
                </parameters>
              </method>
              <method name="Transform(System.Numerics.Vector4, System.Numerics.Quaternion)" attrib="150" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="rotation" position="1" attrib="0" type="System.Numerics.Quaternion" />
                </parameters>
              </method>
              <method name="op_Addition(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.Vector4, System.Single)" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="value2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Vector4, System.Single)" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Single, System.Numerics.Vector4)" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Single" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Numerics.Vector4, System.Numerics.Vector4)" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector4" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Numerics.Vector4)" attrib="2198" static="true" returntype="System.Numerics.Vector4">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector4" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>