<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Sdk="Microsoft.NET.Sdk" Project="Sdk.props" />

  <PropertyGroup>
    <UsingXamarinSdk>true</UsingXamarinSdk>
    <!-- This is the .net 5 location of the Xamarin.Sdk (/usr/local/share/dotnet/sdk/<version>/Sdks/Xamarin.[iOS/tvOS/watchOS/macOS].Sdk) -->
    <XamarinSdkRootDirectory>$([MSBuild]::NormalizePath('$(MSBuildThisFileDirectory)', '..'))\</XamarinSdkRootDirectory>
    <!-- This is the old location of the legacy Xamarin Sdk -->
    <XamariniOSDotNetRootDirectory>/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/</XamariniOSDotNetRootDirectory>
    <XamarinMacDotNetRootDirectory>/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/</XamarinMacDotNetRootDirectory>

    <!-- We should always override the framework path so that we resolves to our own mscorlib.dll -->
    <TargetFrameworkRootPath>$(XamarinSdkRootDirectory)Framework</TargetFrameworkRootPath>
    <FrameworkPathOverride>$(XamarinSdkRootDirectory)Framework\Xamarin.$(_PlatformName)\v1.0</FrameworkPathOverride>

    <!-- Enable nuget package conflict resolution -->
    <ResolveAssemblyConflicts>true</ResolveAssemblyConflicts>
  </PropertyGroup>

  <!-- Defaults -->

  <!-- Defaults shared between all platforms (iOS/macOS/watchOS/tvOS) -->
  <PropertyGroup>
    <RootNamespace>$(MSBuildProjectName)</RootNamespace>
    <AssemblyName>$(MSBuildProjectName)</AssemblyName>
    <OutputType>Exe</OutputType>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugType>none</DebugType>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <!-- Defaults specific to iOS/watchOS/tvOS -->
  <PropertyGroup Condition=" '$(_PlatformName)' != 'macOS' ">
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">iPhoneSimulator</Platform>
    <IPhoneResourcePrefix>Resources</IPhoneResourcePrefix>

    <!-- We cannot use $(Platform) in conditions on props, because VS interprets them as valid platforms
       for the current project and makes them available for solution configurations, which fails miserably
       for iOS class library projects. By using another property name, we "opt out" of this "smart" behavior -->
    <_Platform>$(Platform)</_Platform>

    <!-- Set the TargeDeviceArchitecture value. -->
    <!-- Fall back to old behavior, where the target device architecture was specified using the Platform property -->
    <TargetDeviceArchitecture Condition="'$(TargetDeviceArchitecture)' == '' And '$(_Platform)' == 'iPhoneSimulator'">Simulator</TargetDeviceArchitecture>
    <TargetDeviceArchitecture Condition="'$(TargetDeviceArchitecture)' == '' And '$(_Platform)' == 'iPhone'">Device</TargetDeviceArchitecture>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(_PlatformName)' != 'macOS' And '$(Configuration)' == 'Debug' ">
    <MtouchDebug>true</MtouchDebug>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(_PlatformName)' != 'macOS' And '$(Configuration)' == 'Release' ">
  </PropertyGroup>

  <!-- Defaults specific to macOS -->
  <PropertyGroup Condition=" '$(_PlatformName)' == 'macOS' ">
    <EnableCodeSigning>false</EnableCodeSigning>
    <EnablePackageSigning>false</EnablePackageSigning>
    <IncludeMonoRuntime>true</IncludeMonoRuntime>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(_PlatformName)' == 'macOS' And '$(Configuration)' == 'Debug' ">
    <CreatePackage>false</CreatePackage>
    <LinkMode>None</LinkMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(_PlatformName)' == 'macOS' And '$(Configuration)' == 'Release' ">
    <CreatePackage>true</CreatePackage>
    <LinkMode>SdkOnly</LinkMode>
  </PropertyGroup>


  <!-- Default item includes (globs and implicit references) -->
  <Import Project="Xamarin.$(_PlatformName).Sdk.DefaultItems.props" />
</Project>
