<?xml version="1.0" encoding="utf-8"?>
<assemblies>
  <assembly name="System.Xml" version="2.0.5.0">
    <attributes>
      <attribute name="System.CLSCompliantAttribute">
        <properties>
          <property name="IsCompliant" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Diagnostics.DebuggableAttribute">
        <properties>
          <property name="IsJITTrackingEnabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="IsJITOptimizerDisabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="DebuggingFlags" value="IgnoreSymbolStoreSequencePoints" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCompanyAttribute">
        <properties>
          <property name="Company" value="Mono development team" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCopyrightAttribute">
        <properties>
          <property name="Copyright" value="(c) Various Mono authors" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDefaultAliasAttribute">
        <properties>
          <property name="DefaultAlias" value="System.Xml.dll" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDelaySignAttribute">
        <properties>
          <property name="DelaySign" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDescriptionAttribute">
        <properties>
          <property name="Description" value="System.Xml.dll" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyFileVersionAttribute">
        <properties>
          <property name="Version" value="4.0.50524.0" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyInformationalVersionAttribute">
        <properties>
          <property name="InformationalVersion" value="4.0.50524.0" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyKeyFileAttribute">
        <properties>
          <property name="KeyFile" value="../silverlight.pub" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyProductAttribute">
        <properties>
          <property name="Product" value="Mono Common Language Infrastructure" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyTitleAttribute">
        <properties>
          <property name="Title" value="System.Xml.dll" />
        </properties>
      </attribute>
      <attribute name="System.Resources.NeutralResourcesLanguageAttribute">
        <properties>
          <property name="CultureName" value="en-US" />
        </properties>
      </attribute>
      <attribute name="System.Resources.SatelliteContractVersionAttribute">
        <properties>
          <property name="Version" value="2.0.5.0" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
        <properties>
          <property name="CompilationRelaxations" value="NoStringInterning" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="System.Data.SqlXml, PublicKey=00000000000000000400000000000000" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="System.Xml.Linq, PublicKey=00000000000000000400000000000000" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="System.ServiceModel.Friend, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="System.ServiceModel.Web, PublicKey=00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
          <property name="AssemblyName" value="System.Xml.Linq, PublicKey=0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute">
        <properties>
          <property name="Value" value="False" />
        </properties>
      </attribute>
    </attributes>
    <namespaces>
      <namespace name="System.Xml">
        <classes>
          <class name="ConformanceLevel" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Auto" attrib="32854" fieldtype="System.Xml.ConformanceLevel" value="0" />
              <field name="Document" attrib="32854" fieldtype="System.Xml.ConformanceLevel" value="2" />
              <field name="Fragment" attrib="32854" fieldtype="System.Xml.ConformanceLevel" value="1" />
            </fields>
          </class>
          <class name="DtdProcessing" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Ignore" attrib="32854" fieldtype="System.Xml.DtdProcessing" value="1" />
              <field name="Parse" attrib="32854" fieldtype="System.Xml.DtdProcessing" value="2" />
              <field name="Prohibit" attrib="32854" fieldtype="System.Xml.DtdProcessing" value="0" />
            </fields>
          </class>
          <class name="EntityHandling" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="ExpandCharEntities" attrib="32854" fieldtype="System.Xml.EntityHandling" value="2" />
              <field name="ExpandEntities" attrib="32854" fieldtype="System.Xml.EntityHandling" value="1" />
            </fields>
          </class>
          <class name="Formatting" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Indented" attrib="32854" fieldtype="System.Xml.Formatting" value="1" />
              <field name="None" attrib="32854" fieldtype="System.Xml.Formatting" value="0" />
            </fields>
          </class>
          <class name="IApplicationResourceStreamResolver" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                <properties>
                  <property name="State" value="Never" />
                </properties>
              </attribute>
              <attribute name="System.ObsoleteAttribute">
                <properties>
                  <property name="Message" value="This API supports the .NET Framework infrastructure and is not intended to be used directly from your code." />
                  <property name="IsError" value="True" />
                </properties>
              </attribute>
            </attributes>
            <methods>
              <method name="GetApplicationResourceStream(System.Uri)" attrib="1478" abstract="true" virtual="true" returntype="System.IO.Stream">
                <attributes>
                  <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                    <properties>
                      <property name="State" value="Never" />
                    </properties>
                  </attribute>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This API supports the .NET Framework infrastructure and is not intended to be used directly from your code." />
                      <property name="IsError" value="True" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="relativeUri" position="0" attrib="0" type="System.Uri" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IHasXmlNode" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="GetNode()" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.XmlNode">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IXmlLineInfo" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumber()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePosition()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="HasLineInfo()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IXmlNamespaceResolver" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="GetNamespacesInScope(System.Xml.XmlNamespaceScope)" attrib="1478" abstract="true" virtual="true" returntype="System.Collections.Generic.IDictionary`2[System.String,System.String]">
                <parameters>
                  <parameter name="scope" position="0" attrib="0" type="System.Xml.XmlNamespaceScope" />
                </parameters>
              </method>
              <method name="LookupNamespace(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LookupPrefix(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="namespaceName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="NameTable" type="class" base="System.Xml.XmlNameTable" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Add(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Add(System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="start" position="1" attrib="0" type="System.Int32" />
                  <parameter name="len" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Get(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Get(System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="start" position="1" attrib="0" type="System.Int32" />
                  <parameter name="len" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="NamespaceHandling" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Default" attrib="32854" fieldtype="System.Xml.NamespaceHandling" value="0" />
              <field name="OmitDuplicates" attrib="32854" fieldtype="System.Xml.NamespaceHandling" value="1" />
            </fields>
          </class>
          <class name="NewLineHandling" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Entitize" attrib="32854" fieldtype="System.Xml.NewLineHandling" value="1" />
              <field name="None" attrib="32854" fieldtype="System.Xml.NewLineHandling" value="2" />
              <field name="Replace" attrib="32854" fieldtype="System.Xml.NewLineHandling" value="0" />
            </fields>
          </class>
          <class name="ReadState" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Closed" attrib="32854" fieldtype="System.Xml.ReadState" value="4" />
              <field name="EndOfFile" attrib="32854" fieldtype="System.Xml.ReadState" value="3" />
              <field name="Error" attrib="32854" fieldtype="System.Xml.ReadState" value="2" />
              <field name="Initial" attrib="32854" fieldtype="System.Xml.ReadState" value="0" />
              <field name="Interactive" attrib="32854" fieldtype="System.Xml.ReadState" value="1" />
            </fields>
          </class>
          <class name="ValidationType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Auto" attrib="32854" fieldtype="System.Xml.ValidationType" value="1">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Validation type should be specified as DTD or Schema." />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="DTD" attrib="32854" fieldtype="System.Xml.ValidationType" value="2" />
              <field name="None" attrib="32854" fieldtype="System.Xml.ValidationType" value="0" />
              <field name="Schema" attrib="32854" fieldtype="System.Xml.ValidationType" value="4" />
              <field name="XDR" attrib="32854" fieldtype="System.Xml.ValidationType" value="3">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="XDR Validation through XmlValidatingReader is obsoleted" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
          </class>
          <class name="WhitespaceHandling" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="All" attrib="32854" fieldtype="System.Xml.WhitespaceHandling" value="0" />
              <field name="None" attrib="32854" fieldtype="System.Xml.WhitespaceHandling" value="2" />
              <field name="Significant" attrib="32854" fieldtype="System.Xml.WhitespaceHandling" value="1" />
            </fields>
          </class>
          <class name="WriteState" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Attribute" attrib="32854" fieldtype="System.Xml.WriteState" value="3" />
              <field name="Closed" attrib="32854" fieldtype="System.Xml.WriteState" value="5" />
              <field name="Content" attrib="32854" fieldtype="System.Xml.WriteState" value="4" />
              <field name="Element" attrib="32854" fieldtype="System.Xml.WriteState" value="2" />
              <field name="Error" attrib="32854" fieldtype="System.Xml.WriteState" value="6" />
              <field name="Prolog" attrib="32854" fieldtype="System.Xml.WriteState" value="1" />
              <field name="Start" attrib="32854" fieldtype="System.Xml.WriteState" value="0" />
            </fields>
          </class>
          <class name="XmlAttribute" type="class" base="System.Xml.XmlNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.String, System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                  <parameter name="doc" position="3" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InnerText" attrib="0" ptype="System.String">
                <methods>
                  <method name="set_InnerText(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InnerXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="set_InnerXml(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NamespaceURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NamespaceURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerDocument" attrib="0" ptype="System.Xml.XmlDocument">
                <methods>
                  <method name="get_OwnerDocument()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlDocument">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerElement" attrib="0" ptype="System.Xml.XmlElement">
                <methods>
                  <method name="get_OwnerElement()" attrib="2502" virtual="true" returntype="System.Xml.XmlElement">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParentNode" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_ParentNode()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Prefix" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Prefix()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Prefix(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaInfo" attrib="0" ptype="System.Xml.Schema.IXmlSchemaInfo">
                <methods>
                  <method name="get_SchemaInfo()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.IXmlSchemaInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Specified" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Specified()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AppendChild(System.Xml.XmlNode)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="refChild" position="1" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="refChild" position="1" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="PrependChild(System.Xml.XmlNode)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="RemoveChild(System.Xml.XmlNode)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="oldChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="oldChild" position="1" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlAttributeCollection" type="class" base="System.Xml.XmlNamedNodeMap" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="ItemOf" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="ItemOf" attrib="0" ptype="System.Xml.XmlAttribute" params="System.Int32">
                <methods>
                  <method name="get_ItemOf(System.Int32)" attrib="2182" returntype="System.Xml.XmlAttribute">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ItemOf" attrib="0" ptype="System.Xml.XmlAttribute" params="System.String">
                <methods>
                  <method name="get_ItemOf(System.String)" attrib="2182" returntype="System.Xml.XmlAttribute">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ItemOf" attrib="0" ptype="System.Xml.XmlAttribute" params="System.String, System.String">
                <methods>
                  <method name="get_ItemOf(System.String, System.String)" attrib="2182" returntype="System.Xml.XmlAttribute">
                    <parameters>
                      <parameter name="localName" position="0" attrib="0" type="System.String" />
                      <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Append(System.Xml.XmlAttribute)" attrib="134" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlAttribute" />
                </parameters>
              </method>
              <method name="CopyTo(System.Xml.XmlAttribute[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Xml.XmlAttribute[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="InsertAfter(System.Xml.XmlAttribute, System.Xml.XmlAttribute)" attrib="134" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="newNode" position="0" attrib="0" type="System.Xml.XmlAttribute" />
                  <parameter name="refNode" position="1" attrib="0" type="System.Xml.XmlAttribute" />
                </parameters>
              </method>
              <method name="InsertBefore(System.Xml.XmlAttribute, System.Xml.XmlAttribute)" attrib="134" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="newNode" position="0" attrib="0" type="System.Xml.XmlAttribute" />
                  <parameter name="refNode" position="1" attrib="0" type="System.Xml.XmlAttribute" />
                </parameters>
              </method>
              <method name="Prepend(System.Xml.XmlAttribute)" attrib="134" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlAttribute" />
                </parameters>
              </method>
              <method name="Remove(System.Xml.XmlAttribute)" attrib="134" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlAttribute" />
                </parameters>
              </method>
              <method name="RemoveAll()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="RemoveAt(System.Int32)" attrib="134" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="i" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetNamedItem(System.Xml.XmlNode)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlCDataSection" type="class" base="System.Xml.XmlCharacterData" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.String" />
                  <parameter name="doc" position="1" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParentNode" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_ParentNode()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PreviousText" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_PreviousText()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlCharacterData" type="class" base="System.Xml.XmlLinkedNode" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.String" />
                  <parameter name="doc" position="1" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Data" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Data()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Data(System.String)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InnerText" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerText()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerText(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Length()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AppendData(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="strData" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="DeleteData(System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="InsertData(System.Int32, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                  <parameter name="strData" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReplaceData(System.Int32, System.Int32, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                  <parameter name="strData" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Substring(System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlComment" type="class" base="System.Xml.XmlCharacterData" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="comment" position="0" attrib="0" type="System.String" />
                  <parameter name="doc" position="1" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlConvert" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="DecodeName(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="EncodeLocalName(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="EncodeName(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="EncodeNmToken(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsNCNameChar(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsPublicIdChar(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsStartNCNameChar(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsWhitespaceChar(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsXmlChar(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsXmlSurrogatePair(System.Char, System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lowChar" position="0" attrib="0" type="System.Char" />
                  <parameter name="highChar" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToBoolean(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToByte(System.String)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToChar(System.String)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDateTime(System.String)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use XmlConvert.ToDateTime() that takes in XmlDateTimeSerializationMode" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDateTime(System.String, System.String)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDateTime(System.String, System.String[])" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="formats" position="1" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="ToDateTime(System.String, System.Xml.XmlDateTimeSerializationMode)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="dateTimeOption" position="1" attrib="0" type="System.Xml.XmlDateTimeSerializationMode" />
                </parameters>
              </method>
              <method name="ToDateTimeOffset(System.String)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDateTimeOffset(System.String, System.String)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDateTimeOffset(System.String, System.String[])" attrib="150" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="formats" position="1" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="ToDecimal(System.String)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDouble(System.String)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToGuid(System.String)" attrib="150" static="true" returntype="System.Guid">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToInt16(System.String)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToInt32(System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToInt64(System.String)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToSByte(System.String)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToSingle(System.String)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(System.Boolean)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToString(System.Byte)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToString(System.Char)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToString(System.DateTime)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use XmlConvert.ToString() that takes in XmlDateTimeSerializationMode" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="ToString(System.DateTimeOffset)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="ToString(System.Decimal)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToString(System.Double)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToString(System.Guid)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Guid" />
                </parameters>
              </method>
              <method name="ToString(System.Int16)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToString(System.Int32)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString(System.Int64)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToString(System.SByte)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToString(System.Single)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToString(System.TimeSpan)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="ToString(System.UInt16)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToString(System.UInt32)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToString(System.UInt64)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToString(System.DateTime, System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(System.DateTime, System.Xml.XmlDateTimeSerializationMode)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="dateTimeOption" position="1" attrib="0" type="System.Xml.XmlDateTimeSerializationMode" />
                </parameters>
              </method>
              <method name="ToString(System.DateTimeOffset, System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToTimeSpan(System.String)" attrib="150" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToUInt16(System.String)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToUInt32(System.String)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToUInt64(System.String)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="VerifyNCName(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="VerifyNMTOKEN(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="VerifyName(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="VerifyPublicId(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="publicId" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="VerifyTOKEN(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="token" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="VerifyWhitespace(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="content" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="VerifyXmlChars(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="content" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlDateTimeSerializationMode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Local" attrib="32854" fieldtype="System.Xml.XmlDateTimeSerializationMode" value="0" />
              <field name="RoundtripKind" attrib="32854" fieldtype="System.Xml.XmlDateTimeSerializationMode" value="3" />
              <field name="Unspecified" attrib="32854" fieldtype="System.Xml.XmlDateTimeSerializationMode" value="2" />
              <field name="Utc" attrib="32854" fieldtype="System.Xml.XmlDateTimeSerializationMode" value="1" />
            </fields>
          </class>
          <class name="XmlDeclaration" type="class" base="System.Xml.XmlLinkedNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.String, System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="version" position="0" attrib="0" type="System.String" />
                  <parameter name="encoding" position="1" attrib="0" type="System.String" />
                  <parameter name="standalone" position="2" attrib="0" type="System.String" />
                  <parameter name="doc" position="3" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Encoding" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Encoding()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Encoding(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InnerText" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerText()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerText(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Standalone" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Standalone()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Standalone(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlDocument" type="class" base="System.Xml.XmlNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Xml.XmlImplementation)" attrib="6277">
                <parameters>
                  <parameter name="imp" position="0" attrib="0" type="System.Xml.XmlImplementation" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="nt" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DocumentElement" attrib="0" ptype="System.Xml.XmlElement">
                <methods>
                  <method name="get_DocumentElement()" attrib="2182" returntype="System.Xml.XmlElement">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DocumentType" attrib="0" ptype="System.Xml.XmlDocumentType">
                <methods>
                  <method name="get_DocumentType()" attrib="2502" virtual="true" returntype="System.Xml.XmlDocumentType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Implementation" attrib="0" ptype="System.Xml.XmlImplementation">
                <methods>
                  <method name="get_Implementation()" attrib="2182" returntype="System.Xml.XmlImplementation">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InnerText" attrib="0" ptype="System.String">
                <methods>
                  <method name="set_InnerText(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InnerXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerXml()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerXml(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="2182" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerDocument" attrib="0" ptype="System.Xml.XmlDocument">
                <methods>
                  <method name="get_OwnerDocument()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlDocument">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParentNode" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_ParentNode()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PreserveWhitespace" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_PreserveWhitespace()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_PreserveWhitespace(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaInfo" attrib="0" ptype="System.Xml.Schema.IXmlSchemaInfo">
                <methods>
                  <method name="get_SchemaInfo()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.IXmlSchemaInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Schemas" attrib="0" ptype="System.Xml.Schema.XmlSchemaSet">
                <methods>
                  <method name="get_Schemas()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSet">
                    <parameters />
                  </method>
                  <method name="set_Schemas(System.Xml.Schema.XmlSchemaSet)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSet" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlResolver" attrib="0" ptype="System.Xml.XmlResolver">
                <methods>
                  <method name="set_XmlResolver(System.Xml.XmlResolver)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlResolver" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="NodeChanged" attrib="0" eventtype="System.Xml.XmlNodeChangedEventHandler" />
              <event name="NodeChanging" attrib="0" eventtype="System.Xml.XmlNodeChangedEventHandler" />
              <event name="NodeInserted" attrib="0" eventtype="System.Xml.XmlNodeChangedEventHandler" />
              <event name="NodeInserting" attrib="0" eventtype="System.Xml.XmlNodeChangedEventHandler" />
              <event name="NodeRemoved" attrib="0" eventtype="System.Xml.XmlNodeChangedEventHandler" />
              <event name="NodeRemoving" attrib="0" eventtype="System.Xml.XmlNodeChangedEventHandler" />
            </events>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="CreateAttribute(System.String)" attrib="134" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateAttribute(System.String, System.String)" attrib="134" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="qualifiedName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateAttribute(System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateCDataSection(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlCDataSection">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateComment(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlComment">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateDefaultAttribute(System.String, System.String, System.String)" attrib="453" virtual="true" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateDocumentFragment()" attrib="454" virtual="true" returntype="System.Xml.XmlDocumentFragment">
                <parameters />
              </method>
              <method name="CreateDocumentType(System.String, System.String, System.String, System.String)" attrib="16838" virtual="true" returntype="System.Xml.XmlDocumentType">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="publicId" position="1" attrib="0" type="System.String" />
                  <parameter name="systemId" position="2" attrib="0" type="System.String" />
                  <parameter name="internalSubset" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateElement(System.String)" attrib="134" returntype="System.Xml.XmlElement">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateElement(System.String, System.String)" attrib="134" returntype="System.Xml.XmlElement">
                <parameters>
                  <parameter name="qualifiedName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateElement(System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlElement">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateEntityReference(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlEntityReference">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateNavigator()" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters />
              </method>
              <method name="CreateNavigator(System.Xml.XmlNode)" attrib="453" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="CreateNode(System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="nodeTypeString" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateNode(System.Xml.XmlNodeType, System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XmlNodeType" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateNode(System.Xml.XmlNodeType, System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XmlNodeType" />
                  <parameter name="prefix" position="1" attrib="0" type="System.String" />
                  <parameter name="name" position="2" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateProcessingInstruction(System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlProcessingInstruction">
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.String" />
                  <parameter name="data" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateSignificantWhitespace(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlSignificantWhitespace">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateTextNode(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlText">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateWhitespace(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlWhitespace">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateXmlDeclaration(System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlDeclaration">
                <parameters>
                  <parameter name="version" position="0" attrib="0" type="System.String" />
                  <parameter name="encoding" position="1" attrib="0" type="System.String" />
                  <parameter name="standalone" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetElementById(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlElement">
                <parameters>
                  <parameter name="elementId" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetElementsByTagName(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNodeList">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetElementsByTagName(System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNodeList">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ImportNode(System.Xml.XmlNode, System.Boolean)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="deep" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Load(System.IO.Stream)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="inStream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Load(System.IO.TextReader)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="txtReader" position="0" attrib="0" type="System.IO.TextReader" />
                </parameters>
              </method>
              <method name="Load(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XmlReader)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="LoadXml(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="xml" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadNode(System.Xml.XmlReader)" attrib="16838" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="Save(System.IO.Stream)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="outStream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Save(System.IO.TextWriter)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="writer" position="0" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="Save(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Save(System.Xml.XmlWriter)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Validate(System.Xml.Schema.ValidationEventHandler)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="validationEventHandler" position="0" attrib="0" type="System.Xml.Schema.ValidationEventHandler" />
                </parameters>
              </method>
              <method name="Validate(System.Xml.Schema.ValidationEventHandler, System.Xml.XmlNode)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="validationEventHandler" position="0" attrib="0" type="System.Xml.Schema.ValidationEventHandler" />
                  <parameter name="nodeToValidate" position="1" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="xw" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlDocumentFragment" type="class" base="System.Xml.XmlNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="ownerDocument" position="0" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="InnerXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerXml()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerXml(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerDocument" attrib="0" ptype="System.Xml.XmlDocument">
                <methods>
                  <method name="get_OwnerDocument()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlDocument">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParentNode" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_ParentNode()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlDocumentType" type="class" base="System.Xml.XmlLinkedNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.String, System.String, System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="publicId" position="1" attrib="0" type="System.String" />
                  <parameter name="systemId" position="2" attrib="0" type="System.String" />
                  <parameter name="internalSubset" position="3" attrib="0" type="System.String" />
                  <parameter name="doc" position="4" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Entities" attrib="0" ptype="System.Xml.XmlNamedNodeMap">
                <methods>
                  <method name="get_Entities()" attrib="2182" returntype="System.Xml.XmlNamedNodeMap">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InternalSubset" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InternalSubset()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Notations" attrib="0" ptype="System.Xml.XmlNamedNodeMap">
                <methods>
                  <method name="get_Notations()" attrib="2182" returntype="System.Xml.XmlNamedNodeMap">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PublicId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_PublicId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SystemId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SystemId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlElement" type="class" base="System.Xml.XmlLinkedNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.String, System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                  <parameter name="doc" position="3" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Xml.XmlAttributeCollection">
                <methods>
                  <method name="get_Attributes()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlAttributeCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasAttributes" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasAttributes()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InnerText" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerText()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerText(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InnerXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerXml()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerXml(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsEmpty" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEmpty()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsEmpty(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NamespaceURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NamespaceURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NextSibling" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_NextSibling()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerDocument" attrib="0" ptype="System.Xml.XmlDocument">
                <methods>
                  <method name="get_OwnerDocument()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlDocument">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParentNode" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_ParentNode()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Prefix" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Prefix()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Prefix(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaInfo" attrib="0" ptype="System.Xml.Schema.IXmlSchemaInfo">
                <methods>
                  <method name="get_SchemaInfo()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.IXmlSchemaInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String, System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetAttributeNode(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetAttributeNode(System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetElementsByTagName(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNodeList">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetElementsByTagName(System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNodeList">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="HasAttribute(System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="HasAttribute(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveAll()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="RemoveAllAttributes()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="RemoveAttribute(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveAttribute(System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveAttributeAt(System.Int32)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="i" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="RemoveAttributeNode(System.Xml.XmlAttribute)" attrib="454" virtual="true" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="oldAttr" position="0" attrib="0" type="System.Xml.XmlAttribute" />
                </parameters>
              </method>
              <method name="RemoveAttributeNode(System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SetAttribute(System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SetAttribute(System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SetAttributeNode(System.Xml.XmlAttribute)" attrib="454" virtual="true" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="newAttr" position="0" attrib="0" type="System.Xml.XmlAttribute" />
                </parameters>
              </method>
              <method name="SetAttributeNode(System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlAttribute">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlEntity" type="class" base="System.Xml.XmlNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <properties>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InnerText" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerText()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerText(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InnerXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerXml()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerXml(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NotationName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NotationName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OuterXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_OuterXml()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PublicId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_PublicId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SystemId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SystemId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlEntityReference" type="class" base="System.Xml.XmlLinkedNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="doc" position="1" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlException" type="class" base="System.SystemException" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                  <parameter name="lineNumber" position="2" attrib="0" type="System.Int32" />
                  <parameter name="linePosition" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumber()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePosition()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Message" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SourceUri" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SourceUri()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="16582" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlImplementation" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="nt" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="CreateDocument()" attrib="454" virtual="true" returntype="System.Xml.XmlDocument">
                <parameters />
              </method>
              <method name="HasFeature(System.String, System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="strFeature" position="0" attrib="0" type="System.String" />
                  <parameter name="strVersion" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlLinkedNode" type="class" base="System.Xml.XmlNode" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <properties>
              <property name="NextSibling" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_NextSibling()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PreviousSibling" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_PreviousSibling()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlNameTable" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Add(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Add(System.Char[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Get(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Get(System.Char[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlNamedNodeMap" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetEnumerator()" attrib="454" virtual="true" returntype="System.Collections.IEnumerator">
                <parameters />
              </method>
              <method name="GetNamedItem(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetNamedItem(System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Item(System.Int32)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="RemoveNamedItem(System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveNamedItem(System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SetNamedItem(System.Xml.XmlNode)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlNamespaceManager" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Xml.IXmlNamespaceResolver" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="nameTable" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DefaultNamespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DefaultNamespace()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="2502" virtual="true" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddNamespace(System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="uri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="454" virtual="true" returntype="System.Collections.IEnumerator">
                <parameters />
              </method>
              <method name="GetNamespacesInScope(System.Xml.XmlNamespaceScope)" attrib="454" virtual="true" returntype="System.Collections.Generic.IDictionary`2[System.String,System.String]">
                <parameters>
                  <parameter name="scope" position="0" attrib="0" type="System.Xml.XmlNamespaceScope" />
                </parameters>
              </method>
              <method name="HasNamespace(System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LookupNamespace(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LookupPrefix(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="PopScope()" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="PushScope()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="RemoveNamespace(System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="uri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlNamespaceScope" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="All" attrib="32854" fieldtype="System.Xml.XmlNamespaceScope" value="0" />
              <field name="ExcludeXml" attrib="32854" fieldtype="System.Xml.XmlNamespaceScope" value="1" />
              <field name="Local" attrib="32854" fieldtype="System.Xml.XmlNamespaceScope" value="2" />
            </fields>
          </class>
          <class name="XmlNode" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute">
                <properties>
                  <property name="Value" value="{debuggerDisplayProxy}" />
                </properties>
              </attribute>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Xml.XmlAttributeCollection">
                <methods>
                  <method name="get_Attributes()" attrib="2502" virtual="true" returntype="System.Xml.XmlAttributeCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ChildNodes" attrib="0" ptype="System.Xml.XmlNodeList">
                <methods>
                  <method name="get_ChildNodes()" attrib="2502" virtual="true" returntype="System.Xml.XmlNodeList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FirstChild" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_FirstChild()" attrib="2502" virtual="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasChildNodes" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasChildNodes()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InnerText" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerText()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerText(System.String)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InnerXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerXml()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerXml(System.String)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Xml.XmlElement" params="System.String">
                <methods>
                  <method name="get_Item(System.String)" attrib="2502" virtual="true" returntype="System.Xml.XmlElement">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Xml.XmlElement" params="System.String, System.String">
                <methods>
                  <method name="get_Item(System.String, System.String)" attrib="2502" virtual="true" returntype="System.Xml.XmlElement">
                    <parameters>
                      <parameter name="localname" position="0" attrib="0" type="System.String" />
                      <parameter name="ns" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LastChild" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_LastChild()" attrib="2502" virtual="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NamespaceURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NamespaceURI()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NextSibling" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_NextSibling()" attrib="2502" virtual="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OuterXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_OuterXml()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerDocument" attrib="0" ptype="System.Xml.XmlDocument">
                <methods>
                  <method name="get_OwnerDocument()" attrib="2502" virtual="true" returntype="System.Xml.XmlDocument">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParentNode" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_ParentNode()" attrib="2502" virtual="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Prefix" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Prefix()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Prefix(System.String)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PreviousSibling" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_PreviousSibling()" attrib="2502" virtual="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PreviousText" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_PreviousText()" attrib="2502" virtual="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaInfo" attrib="0" ptype="System.Xml.Schema.IXmlSchemaInfo">
                <methods>
                  <method name="get_SchemaInfo()" attrib="2502" virtual="true" returntype="System.Xml.Schema.IXmlSchemaInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AppendChild(System.Xml.XmlNode)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="Clone()" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters />
              </method>
              <method name="CloneNode(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="CreateNavigator()" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters />
              </method>
              <method name="GetEnumerator()" attrib="134" returntype="System.Collections.IEnumerator">
                <parameters />
              </method>
              <method name="GetNamespaceOfPrefix(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetPrefixOfNamespace(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="namespaceURI" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="refChild" position="1" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="refChild" position="1" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="Normalize()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="PrependChild(System.Xml.XmlNode)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="RemoveAll()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="RemoveChild(System.Xml.XmlNode)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="oldChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)" attrib="454" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="oldChild" position="1" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="SelectNodes(System.String)" attrib="134" returntype="System.Xml.XmlNodeList">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SelectNodes(System.String, System.Xml.XmlNamespaceManager)" attrib="134" returntype="System.Xml.XmlNodeList">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                  <parameter name="nsmgr" position="1" attrib="0" type="System.Xml.XmlNamespaceManager" />
                </parameters>
              </method>
              <method name="SelectSingleNode(System.String)" attrib="134" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SelectSingleNode(System.String, System.Xml.XmlNamespaceManager)" attrib="134" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                  <parameter name="nsmgr" position="1" attrib="0" type="System.Xml.XmlNamespaceManager" />
                </parameters>
              </method>
              <method name="Supports(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="feature" position="0" attrib="0" type="System.String" />
                  <parameter name="version" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlNodeChangedAction" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Change" attrib="32854" fieldtype="System.Xml.XmlNodeChangedAction" value="2" />
              <field name="Insert" attrib="32854" fieldtype="System.Xml.XmlNodeChangedAction" value="0" />
              <field name="Remove" attrib="32854" fieldtype="System.Xml.XmlNodeChangedAction" value="1" />
            </fields>
          </class>
          <class name="XmlNodeChangedEventArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Xml.XmlNode, System.Xml.XmlNode, System.Xml.XmlNode, System.String, System.String, System.Xml.XmlNodeChangedAction)" attrib="6278">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="oldParent" position="1" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="newParent" position="2" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="oldValue" position="3" attrib="0" type="System.String" />
                  <parameter name="newValue" position="4" attrib="0" type="System.String" />
                  <parameter name="action" position="5" attrib="0" type="System.Xml.XmlNodeChangedAction" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Action" attrib="0" ptype="System.Xml.XmlNodeChangedAction">
                <methods>
                  <method name="get_Action()" attrib="2182" returntype="System.Xml.XmlNodeChangedAction">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NewParent" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_NewParent()" attrib="2182" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NewValue" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NewValue()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Node" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_Node()" attrib="2182" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OldParent" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_OldParent()" attrib="2182" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OldValue" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_OldValue()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlNodeChangedEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.Xml.XmlNodeChangedEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.XmlNodeChangedEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Xml.XmlNodeChangedEventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.XmlNodeChangedEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlNodeList" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="ItemOf" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ItemOf" attrib="0" ptype="System.Xml.XmlNode" params="System.Int32">
                <methods>
                  <method name="get_ItemOf(System.Int32)" attrib="2502" virtual="true" returntype="System.Xml.XmlNode">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetEnumerator()" attrib="1478" abstract="true" virtual="true" returntype="System.Collections.IEnumerator">
                <parameters />
              </method>
              <method name="Item(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="PrivateDisposeNodeList()" attrib="452" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlNodeOrder" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="After" attrib="32854" fieldtype="System.Xml.XmlNodeOrder" value="1" />
              <field name="Before" attrib="32854" fieldtype="System.Xml.XmlNodeOrder" value="0" />
              <field name="Same" attrib="32854" fieldtype="System.Xml.XmlNodeOrder" value="2" />
              <field name="Unknown" attrib="32854" fieldtype="System.Xml.XmlNodeOrder" value="3" />
            </fields>
          </class>
          <class name="XmlNodeReader" type="class" base="System.Xml.XmlReader" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Xml.IXmlNamespaceResolver" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Xml.XmlNode)" attrib="6278">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AttributeCount" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_AttributeCount()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanReadBinaryContent" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanReadBinaryContent()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanResolveEntity" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanResolveEntity()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Depth" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Depth()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EOF" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_EOF()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasAttributes" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasAttributes()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasValue" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasValue()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsDefault" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsDefault()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsEmptyElement" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEmptyElement()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NamespaceURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NamespaceURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Prefix" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Prefix()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReadState" attrib="0" ptype="System.Xml.ReadState">
                <methods>
                  <method name="get_ReadState()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.ReadState">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaInfo" attrib="0" ptype="System.Xml.Schema.IXmlSchemaInfo">
                <methods>
                  <method name="get_SchemaInfo()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.IXmlSchemaInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlLang" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XmlLang()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlSpace" attrib="0" ptype="System.Xml.XmlSpace">
                <methods>
                  <method name="get_XmlSpace()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlSpace">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetAttribute(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="attributeIndex" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LookupNamespace(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="attributeIndex" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToElement()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToFirstAttribute()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToNextAttribute()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Read()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadAttributeValue()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadContentAsBase64(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadContentAsBinHex(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBase64(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBinHex(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ResolveEntity()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Skip()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlNodeType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Attribute" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="2" />
              <field name="CDATA" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="4" />
              <field name="Comment" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="8" />
              <field name="Document" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="9" />
              <field name="DocumentFragment" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="11" />
              <field name="DocumentType" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="10" />
              <field name="Element" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="1" />
              <field name="EndElement" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="15" />
              <field name="EndEntity" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="16" />
              <field name="Entity" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="6" />
              <field name="EntityReference" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="5" />
              <field name="None" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="0" />
              <field name="Notation" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="12" />
              <field name="ProcessingInstruction" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="7" />
              <field name="SignificantWhitespace" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="14" />
              <field name="Text" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="3" />
              <field name="Whitespace" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="13" />
              <field name="XmlDeclaration" attrib="32854" fieldtype="System.Xml.XmlNodeType" value="17" />
            </fields>
          </class>
          <class name="XmlNotation" type="class" base="System.Xml.XmlNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <properties>
              <property name="InnerXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerXml()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerXml(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OuterXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_OuterXml()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PublicId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_PublicId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SystemId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SystemId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlOutputMethod" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="AutoDetect" attrib="32854" fieldtype="System.Xml.XmlOutputMethod" value="3" />
              <field name="Html" attrib="32854" fieldtype="System.Xml.XmlOutputMethod" value="1" />
              <field name="Text" attrib="32854" fieldtype="System.Xml.XmlOutputMethod" value="2" />
              <field name="Xml" attrib="32854" fieldtype="System.Xml.XmlOutputMethod" value="0" />
            </fields>
          </class>
          <class name="XmlParserContext" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.Xml.XmlSpace)" attrib="6278">
                <parameters>
                  <parameter name="nt" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                  <parameter name="nsMgr" position="1" attrib="0" type="System.Xml.XmlNamespaceManager" />
                  <parameter name="xmlLang" position="2" attrib="0" type="System.String" />
                  <parameter name="xmlSpace" position="3" attrib="0" type="System.Xml.XmlSpace" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.Xml.XmlSpace, System.Text.Encoding)" attrib="6278">
                <parameters>
                  <parameter name="nt" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                  <parameter name="nsMgr" position="1" attrib="0" type="System.Xml.XmlNamespaceManager" />
                  <parameter name="xmlLang" position="2" attrib="0" type="System.String" />
                  <parameter name="xmlSpace" position="3" attrib="0" type="System.Xml.XmlSpace" />
                  <parameter name="enc" position="4" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.String, System.String, System.String, System.String, System.String, System.Xml.XmlSpace)" attrib="6278">
                <parameters>
                  <parameter name="nt" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                  <parameter name="nsMgr" position="1" attrib="0" type="System.Xml.XmlNamespaceManager" />
                  <parameter name="docTypeName" position="2" attrib="0" type="System.String" />
                  <parameter name="pubId" position="3" attrib="0" type="System.String" />
                  <parameter name="sysId" position="4" attrib="0" type="System.String" />
                  <parameter name="internalSubset" position="5" attrib="0" type="System.String" />
                  <parameter name="baseURI" position="6" attrib="0" type="System.String" />
                  <parameter name="xmlLang" position="7" attrib="0" type="System.String" />
                  <parameter name="xmlSpace" position="8" attrib="0" type="System.Xml.XmlSpace" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.String, System.String, System.String, System.String, System.String, System.Xml.XmlSpace, System.Text.Encoding)" attrib="6278">
                <parameters>
                  <parameter name="nt" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                  <parameter name="nsMgr" position="1" attrib="0" type="System.Xml.XmlNamespaceManager" />
                  <parameter name="docTypeName" position="2" attrib="0" type="System.String" />
                  <parameter name="pubId" position="3" attrib="0" type="System.String" />
                  <parameter name="sysId" position="4" attrib="0" type="System.String" />
                  <parameter name="internalSubset" position="5" attrib="0" type="System.String" />
                  <parameter name="baseURI" position="6" attrib="0" type="System.String" />
                  <parameter name="xmlLang" position="7" attrib="0" type="System.String" />
                  <parameter name="xmlSpace" position="8" attrib="0" type="System.Xml.XmlSpace" />
                  <parameter name="enc" position="9" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_BaseURI(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="DocTypeName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DocTypeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DocTypeName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Encoding" attrib="0" ptype="System.Text.Encoding">
                <methods>
                  <method name="get_Encoding()" attrib="2182" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                  <method name="set_Encoding(System.Text.Encoding)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Text.Encoding" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InternalSubset" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InternalSubset()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InternalSubset(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="2182" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                  <method name="set_NameTable(System.Xml.XmlNameTable)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NamespaceManager" attrib="0" ptype="System.Xml.XmlNamespaceManager">
                <methods>
                  <method name="get_NamespaceManager()" attrib="2182" returntype="System.Xml.XmlNamespaceManager">
                    <parameters />
                  </method>
                  <method name="set_NamespaceManager(System.Xml.XmlNamespaceManager)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlNamespaceManager" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PublicId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_PublicId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_PublicId(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SystemId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SystemId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_SystemId(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlLang" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XmlLang()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_XmlLang(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlSpace" attrib="0" ptype="System.Xml.XmlSpace">
                <methods>
                  <method name="get_XmlSpace()" attrib="2182" returntype="System.Xml.XmlSpace">
                    <parameters />
                  </method>
                  <method name="set_XmlSpace(System.Xml.XmlSpace)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlSpace" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlProcessingInstruction" type="class" base="System.Xml.XmlLinkedNode" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.String" />
                  <parameter name="data" position="1" attrib="0" type="System.String" />
                  <parameter name="doc" position="2" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Data" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Data()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Data(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InnerText" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerText()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerText(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Target" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Target()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlQualifiedName" type="class" base="System.Object" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.Xml.XmlQualifiedName" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsEmpty" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEmpty()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.String, System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="op_Equality(System.Xml.XmlQualifiedName, System.Xml.XmlQualifiedName)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="b" position="1" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Xml.XmlQualifiedName, System.Xml.XmlQualifiedName)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="b" position="1" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlReader" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute">
                <properties>
                  <property name="Value" value="{debuggerDisplayProxy}" />
                </properties>
              </attribute>
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute">
                <properties>
                  <property name="Value" value="{debuggerDisplayProxy}" />
                </properties>
              </attribute>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AttributeCount" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_AttributeCount()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanReadBinaryContent" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanReadBinaryContent()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanReadValueChunk" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanReadValueChunk()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanResolveEntity" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanResolveEntity()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Depth" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Depth()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EOF" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_EOF()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasAttributes" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasAttributes()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasValue" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasValue()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsDefault" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsDefault()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsEmptyElement" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEmptyElement()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.String" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2502" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.String" params="System.String">
                <methods>
                  <method name="get_Item(System.String)" attrib="2502" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.String" params="System.String, System.String">
                <methods>
                  <method name="get_Item(System.String, System.String)" attrib="2502" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NamespaceURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NamespaceURI()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Prefix" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Prefix()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="QuoteChar" attrib="0" ptype="System.Char">
                <methods>
                  <method name="get_QuoteChar()" attrib="2502" virtual="true" returntype="System.Char">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReadState" attrib="0" ptype="System.Xml.ReadState">
                <methods>
                  <method name="get_ReadState()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.ReadState">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaInfo" attrib="0" ptype="System.Xml.Schema.IXmlSchemaInfo">
                <methods>
                  <method name="get_SchemaInfo()" attrib="2502" virtual="true" returntype="System.Xml.Schema.IXmlSchemaInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Settings" attrib="0" ptype="System.Xml.XmlReaderSettings">
                <methods>
                  <method name="get_Settings()" attrib="2502" virtual="true" returntype="System.Xml.XmlReaderSettings">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueType" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_ValueType()" attrib="2502" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlLang" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XmlLang()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlSpace" attrib="0" ptype="System.Xml.XmlSpace">
                <methods>
                  <method name="get_XmlSpace()" attrib="2502" virtual="true" returntype="System.Xml.XmlSpace">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Create(System.IO.Stream)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Create(System.IO.TextReader)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.TextReader" />
                </parameters>
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="inputUri" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Create(System.IO.Stream, System.Xml.XmlReaderSettings)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlReaderSettings" />
                </parameters>
              </method>
              <method name="Create(System.IO.TextReader, System.Xml.XmlReaderSettings)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.TextReader" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlReaderSettings" />
                </parameters>
              </method>
              <method name="Create(System.String, System.Xml.XmlReaderSettings)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="inputUri" position="0" attrib="0" type="System.String" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlReaderSettings" />
                </parameters>
              </method>
              <method name="Create(System.Xml.XmlReader, System.Xml.XmlReaderSettings)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlReaderSettings" />
                </parameters>
              </method>
              <method name="Create(System.IO.Stream, System.Xml.XmlReaderSettings, System.String)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlReaderSettings" />
                  <parameter name="baseUri" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Create(System.IO.Stream, System.Xml.XmlReaderSettings, System.Xml.XmlParserContext)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlReaderSettings" />
                  <parameter name="inputContext" position="2" attrib="0" type="System.Xml.XmlParserContext" />
                </parameters>
              </method>
              <method name="Create(System.IO.TextReader, System.Xml.XmlReaderSettings, System.String)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.TextReader" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlReaderSettings" />
                  <parameter name="baseUri" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Create(System.IO.TextReader, System.Xml.XmlReaderSettings, System.Xml.XmlParserContext)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.TextReader" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlReaderSettings" />
                  <parameter name="inputContext" position="2" attrib="0" type="System.Xml.XmlParserContext" />
                </parameters>
              </method>
              <method name="Create(System.String, System.Xml.XmlReaderSettings, System.Xml.XmlParserContext)" attrib="150" static="true" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="inputUri" position="0" attrib="0" type="System.String" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlReaderSettings" />
                  <parameter name="inputContext" position="2" attrib="0" type="System.Xml.XmlParserContext" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetAttribute(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="i" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetValueAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.String]">
                <parameters />
              </method>
              <method name="IsName(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsNameToken(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsStartElement()" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsStartElement(System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsStartElement(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localname" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LookupNamespace(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="i" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToContent()" attrib="454" virtual="true" returntype="System.Xml.XmlNodeType">
                <parameters />
              </method>
              <method name="MoveToContentAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Xml.XmlNodeType]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="MoveToElement()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToFirstAttribute()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToNextAttribute()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Read()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Boolean]">
                <parameters />
              </method>
              <method name="ReadAttributeValue()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadContentAs(System.Type, System.Xml.IXmlNamespaceResolver)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                  <parameter name="namespaceResolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="ReadContentAsAsync(System.Type, System.Xml.IXmlNamespaceResolver)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Object]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                  <parameter name="namespaceResolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="ReadContentAsBase64(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadContentAsBase64Async(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Int32]">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadContentAsBinHex(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadContentAsBinHexAsync(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Int32]">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadContentAsBoolean()" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadContentAsDateTime()" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters />
              </method>
              <method name="ReadContentAsDateTimeOffset()" attrib="454" virtual="true" returntype="System.DateTimeOffset">
                <parameters />
              </method>
              <method name="ReadContentAsDecimal()" attrib="454" virtual="true" returntype="System.Decimal">
                <parameters />
              </method>
              <method name="ReadContentAsDouble()" attrib="454" virtual="true" returntype="System.Double">
                <parameters />
              </method>
              <method name="ReadContentAsFloat()" attrib="454" virtual="true" returntype="System.Single">
                <parameters />
              </method>
              <method name="ReadContentAsInt()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ReadContentAsLong()" attrib="454" virtual="true" returntype="System.Int64">
                <parameters />
              </method>
              <method name="ReadContentAsObject()" attrib="454" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="ReadContentAsObjectAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Object]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadContentAsString()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ReadContentAsStringAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.String]">
                <parameters />
              </method>
              <method name="ReadElementContentAs(System.Type, System.Xml.IXmlNamespaceResolver)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                  <parameter name="namespaceResolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="ReadElementContentAs(System.Type, System.Xml.IXmlNamespaceResolver, System.String, System.String)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                  <parameter name="namespaceResolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                  <parameter name="localName" position="2" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsAsync(System.Type, System.Xml.IXmlNamespaceResolver)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Object]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                  <parameter name="namespaceResolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBase64(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBase64Async(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Int32]">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBinHex(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBinHexAsync(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Int32]">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBoolean()" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadElementContentAsBoolean(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsDateTime()" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters />
              </method>
              <method name="ReadElementContentAsDateTime(System.String, System.String)" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsDecimal()" attrib="454" virtual="true" returntype="System.Decimal">
                <parameters />
              </method>
              <method name="ReadElementContentAsDecimal(System.String, System.String)" attrib="454" virtual="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsDouble()" attrib="454" virtual="true" returntype="System.Double">
                <parameters />
              </method>
              <method name="ReadElementContentAsDouble(System.String, System.String)" attrib="454" virtual="true" returntype="System.Double">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsFloat()" attrib="454" virtual="true" returntype="System.Single">
                <parameters />
              </method>
              <method name="ReadElementContentAsFloat(System.String, System.String)" attrib="454" virtual="true" returntype="System.Single">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsInt()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ReadElementContentAsInt(System.String, System.String)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsLong()" attrib="454" virtual="true" returntype="System.Int64">
                <parameters />
              </method>
              <method name="ReadElementContentAsLong(System.String, System.String)" attrib="454" virtual="true" returntype="System.Int64">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsObject()" attrib="454" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="ReadElementContentAsObject(System.String, System.String)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsObjectAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Object]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadElementContentAsString()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ReadElementContentAsString(System.String, System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementContentAsStringAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.String]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadElementString()" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                    <properties>
                      <property name="State" value="Never" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters />
              </method>
              <method name="ReadElementString(System.String)" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                    <properties>
                      <property name="State" value="Never" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadElementString(System.String, System.String)" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                    <properties>
                      <property name="State" value="Never" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="localname" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadEndElement()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ReadInnerXml()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ReadInnerXmlAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.String]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadOuterXml()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ReadOuterXmlAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.String]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadStartElement()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ReadStartElement(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadStartElement(System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="localname" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadString()" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                    <properties>
                      <property name="State" value="Never" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters />
              </method>
              <method name="ReadSubtree()" attrib="454" virtual="true" returntype="System.Xml.XmlReader">
                <parameters />
              </method>
              <method name="ReadToDescendant(System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadToDescendant(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadToFollowing(System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadToFollowing(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadToNextSibling(System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadToNextSibling(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadValueChunk(System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadValueChunkAsync(System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Int32]">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ResolveEntity()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Skip()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="SkipAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlReaderSettings" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Xml.XmlResolver)" attrib="6278">
                <attributes>
                  <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                    <properties>
                      <property name="State" value="Never" />
                    </properties>
                  </attribute>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This API supports the .NET Framework infrastructure and is not intended to be used directly from your code." />
                      <property name="IsError" value="True" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="resolver" position="0" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Async" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Async()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Async(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CheckCharacters" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CheckCharacters()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CheckCharacters(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CloseInput" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CloseInput()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CloseInput(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ConformanceLevel" attrib="0" ptype="System.Xml.ConformanceLevel">
                <methods>
                  <method name="get_ConformanceLevel()" attrib="2182" returntype="System.Xml.ConformanceLevel">
                    <parameters />
                  </method>
                  <method name="set_ConformanceLevel(System.Xml.ConformanceLevel)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.ConformanceLevel" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="DtdProcessing" attrib="0" ptype="System.Xml.DtdProcessing">
                <methods>
                  <method name="get_DtdProcessing()" attrib="2182" returntype="System.Xml.DtdProcessing">
                    <parameters />
                  </method>
                  <method name="set_DtdProcessing(System.Xml.DtdProcessing)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.DtdProcessing" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IgnoreComments" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IgnoreComments()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IgnoreComments(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IgnoreProcessingInstructions" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IgnoreProcessingInstructions()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IgnoreProcessingInstructions(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IgnoreWhitespace" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IgnoreWhitespace()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IgnoreWhitespace(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LineNumberOffset" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumberOffset()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_LineNumberOffset(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LinePositionOffset" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePositionOffset()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_LinePositionOffset(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MaxCharactersFromEntities" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_MaxCharactersFromEntities()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_MaxCharactersFromEntities(System.Int64)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MaxCharactersInDocument" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_MaxCharactersInDocument()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_MaxCharactersInDocument(System.Int64)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="2182" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                  <method name="set_NameTable(System.Xml.XmlNameTable)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ProhibitDtd" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use XmlReaderSettings.DtdProcessing property instead." />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_ProhibitDtd()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_ProhibitDtd(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Schemas" attrib="0" ptype="System.Xml.Schema.XmlSchemaSet">
                <methods>
                  <method name="get_Schemas()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSet">
                    <parameters />
                  </method>
                  <method name="set_Schemas(System.Xml.Schema.XmlSchemaSet)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSet" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ValidationFlags" attrib="0" ptype="System.Xml.Schema.XmlSchemaValidationFlags">
                <methods>
                  <method name="get_ValidationFlags()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaValidationFlags">
                    <parameters />
                  </method>
                  <method name="set_ValidationFlags(System.Xml.Schema.XmlSchemaValidationFlags)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaValidationFlags" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ValidationType" attrib="0" ptype="System.Xml.ValidationType">
                <methods>
                  <method name="get_ValidationType()" attrib="2182" returntype="System.Xml.ValidationType">
                    <parameters />
                  </method>
                  <method name="set_ValidationType(System.Xml.ValidationType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.ValidationType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlResolver" attrib="0" ptype="System.Xml.XmlResolver">
                <methods>
                  <method name="set_XmlResolver(System.Xml.XmlResolver)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlResolver" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="ValidationEventHandler" attrib="0" eventtype="System.Xml.Schema.ValidationEventHandler" />
            </events>
            <methods>
              <method name="Clone()" attrib="134" returntype="System.Xml.XmlReaderSettings">
                <parameters />
              </method>
              <method name="Reset()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlResolver" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Credentials" attrib="0" ptype="System.Net.ICredentials">
                <methods>
                  <method name="set_Credentials(System.Net.ICredentials)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.ICredentials" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetEntity(System.Uri, System.String, System.Type)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="role" position="1" attrib="0" type="System.String" />
                  <parameter name="ofObjectToReturn" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetEntityAsync(System.Uri, System.String, System.Type)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Object]">
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="role" position="1" attrib="0" type="System.String" />
                  <parameter name="ofObjectToReturn" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ResolveUri(System.Uri, System.String)" attrib="454" virtual="true" returntype="System.Uri">
                <parameters>
                  <parameter name="baseUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="relativeUri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SupportsType(System.Uri, System.Type)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSecureResolver" type="class" base="System.Xml.XmlResolver" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Xml.XmlResolver, System.Security.PermissionSet)" attrib="6278">
                <parameters>
                  <parameter name="resolver" position="0" attrib="0" type="System.Xml.XmlResolver" />
                  <parameter name="permissionSet" position="1" attrib="0" type="System.Security.PermissionSet" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlResolver, System.Security.Policy.Evidence)" attrib="6278">
                <parameters>
                  <parameter name="resolver" position="0" attrib="0" type="System.Xml.XmlResolver" />
                  <parameter name="evidence" position="1" attrib="0" type="System.Security.Policy.Evidence" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlResolver, System.String)" attrib="6278">
                <parameters>
                  <parameter name="resolver" position="0" attrib="0" type="System.Xml.XmlResolver" />
                  <parameter name="securityUrl" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Credentials" attrib="0" ptype="System.Net.ICredentials">
                <methods>
                  <method name="set_Credentials(System.Net.ICredentials)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.ICredentials" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateEvidenceForUrl(System.String)" attrib="150" static="true" returntype="System.Security.Policy.Evidence">
                <parameters>
                  <parameter name="securityUrl" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetEntity(System.Uri, System.String, System.Type)" attrib="198" virtual="true" is-override="true" returntype="System.Object">
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="role" position="1" attrib="0" type="System.String" />
                  <parameter name="ofObjectToReturn" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetEntityAsync(System.Uri, System.String, System.Type)" attrib="198" virtual="true" is-override="true" returntype="System.Threading.Tasks.Task`1[System.Object]">
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="role" position="1" attrib="0" type="System.String" />
                  <parameter name="ofObjectToReturn" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ResolveUri(System.Uri, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Uri">
                <parameters>
                  <parameter name="baseUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="relativeUri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSignificantWhitespace" type="class" base="System.Xml.XmlCharacterData" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="strData" position="0" attrib="0" type="System.String" />
                  <parameter name="doc" position="1" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParentNode" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_ParentNode()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PreviousText" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_PreviousText()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSpace" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Default" attrib="32854" fieldtype="System.Xml.XmlSpace" value="1" />
              <field name="None" attrib="32854" fieldtype="System.Xml.XmlSpace" value="0" />
              <field name="Preserve" attrib="32854" fieldtype="System.Xml.XmlSpace" value="2" />
            </fields>
          </class>
          <class name="XmlText" type="class" base="System.Xml.XmlCharacterData" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="strData" position="0" attrib="0" type="System.String" />
                  <parameter name="doc" position="1" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParentNode" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_ParentNode()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PreviousText" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_PreviousText()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SplitText(System.Int32)" attrib="454" virtual="true" returntype="System.Xml.XmlText">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlTextReader" type="class" base="System.Xml.XmlReader" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                <properties>
                  <property name="State" value="Never" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Xml.IXmlLineInfo" />
              <interface name="System.Xml.IXmlNamespaceResolver" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.IO.Stream)" attrib="6278">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.TextReader)" attrib="6278">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.TextReader" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlNameTable)" attrib="6276">
                <parameters>
                  <parameter name="nt" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="nt" position="1" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.TextReader, System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.TextReader" />
                  <parameter name="nt" position="1" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.Stream)" attrib="6278">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="input" position="1" attrib="0" type="System.IO.Stream" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.TextReader)" attrib="6278">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="input" position="1" attrib="0" type="System.IO.TextReader" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="nt" position="1" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Xml.XmlNodeType, System.Xml.XmlParserContext)" attrib="6278">
                <parameters>
                  <parameter name="xmlFragment" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="fragType" position="1" attrib="0" type="System.Xml.XmlNodeType" />
                  <parameter name="context" position="2" attrib="0" type="System.Xml.XmlParserContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.Stream, System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="input" position="1" attrib="0" type="System.IO.Stream" />
                  <parameter name="nt" position="2" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.TextReader, System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="input" position="1" attrib="0" type="System.IO.TextReader" />
                  <parameter name="nt" position="2" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Xml.XmlNodeType, System.Xml.XmlParserContext)" attrib="6278">
                <parameters>
                  <parameter name="xmlFragment" position="0" attrib="0" type="System.String" />
                  <parameter name="fragType" position="1" attrib="0" type="System.Xml.XmlNodeType" />
                  <parameter name="context" position="2" attrib="0" type="System.Xml.XmlParserContext" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AttributeCount" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_AttributeCount()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanReadBinaryContent" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanReadBinaryContent()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanReadValueChunk" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanReadValueChunk()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanResolveEntity" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanResolveEntity()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Depth" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Depth()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DtdProcessing" attrib="0" ptype="System.Xml.DtdProcessing">
                <methods>
                  <method name="get_DtdProcessing()" attrib="2182" returntype="System.Xml.DtdProcessing">
                    <parameters />
                  </method>
                  <method name="set_DtdProcessing(System.Xml.DtdProcessing)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.DtdProcessing" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="EOF" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_EOF()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Encoding" attrib="0" ptype="System.Text.Encoding">
                <methods>
                  <method name="get_Encoding()" attrib="2182" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EntityHandling" attrib="0" ptype="System.Xml.EntityHandling">
                <methods>
                  <method name="get_EntityHandling()" attrib="2182" returntype="System.Xml.EntityHandling">
                    <parameters />
                  </method>
                  <method name="set_EntityHandling(System.Xml.EntityHandling)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.EntityHandling" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="HasValue" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasValue()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsDefault" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsDefault()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsEmptyElement" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEmptyElement()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumber()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePosition()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NamespaceURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NamespaceURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespaces" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Namespaces()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Namespaces(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Normalization" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Normalization()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Normalization(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Prefix" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Prefix()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ProhibitDtd" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use DtdProcessing property instead." />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_ProhibitDtd()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_ProhibitDtd(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="QuoteChar" attrib="0" ptype="System.Char">
                <methods>
                  <method name="get_QuoteChar()" attrib="2246" virtual="true" is-override="true" returntype="System.Char">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReadState" attrib="0" ptype="System.Xml.ReadState">
                <methods>
                  <method name="get_ReadState()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.ReadState">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="WhitespaceHandling" attrib="0" ptype="System.Xml.WhitespaceHandling">
                <methods>
                  <method name="get_WhitespaceHandling()" attrib="2182" returntype="System.Xml.WhitespaceHandling">
                    <parameters />
                  </method>
                  <method name="set_WhitespaceHandling(System.Xml.WhitespaceHandling)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.WhitespaceHandling" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlLang" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XmlLang()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlResolver" attrib="0" ptype="System.Xml.XmlResolver">
                <methods>
                  <method name="set_XmlResolver(System.Xml.XmlResolver)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlResolver" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlSpace" attrib="0" ptype="System.Xml.XmlSpace">
                <methods>
                  <method name="get_XmlSpace()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlSpace">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetAttribute(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="i" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetNamespacesInScope(System.Xml.XmlNamespaceScope)" attrib="134" returntype="System.Collections.Generic.IDictionary`2[System.String,System.String]">
                <parameters>
                  <parameter name="scope" position="0" attrib="0" type="System.Xml.XmlNamespaceScope" />
                </parameters>
              </method>
              <method name="GetRemainder()" attrib="134" returntype="System.IO.TextReader">
                <parameters />
              </method>
              <method name="HasLineInfo()" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="LookupNamespace(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="i" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToElement()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToFirstAttribute()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToNextAttribute()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Read()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadAttributeValue()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadBase64(System.Byte[], System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="len" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadBinHex(System.Byte[], System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="len" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadChars(System.Char[], System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadContentAsBase64(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadContentAsBinHex(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBase64(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBinHex(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ResetState()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="ResolveEntity()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Skip()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlTextWriter" type="class" base="System.Xml.XmlWriter" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                <properties>
                  <property name="State" value="Never" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IO.TextWriter)" attrib="6278">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Text.Encoding)" attrib="6278">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Text.Encoding)" attrib="6278">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BaseStream" attrib="0" ptype="System.IO.Stream">
                <methods>
                  <method name="get_BaseStream()" attrib="2182" returntype="System.IO.Stream">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Formatting" attrib="0" ptype="System.Xml.Formatting">
                <methods>
                  <method name="get_Formatting()" attrib="2182" returntype="System.Xml.Formatting">
                    <parameters />
                  </method>
                  <method name="set_Formatting(System.Xml.Formatting)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Formatting" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IndentChar" attrib="0" ptype="System.Char">
                <methods>
                  <method name="get_IndentChar()" attrib="2182" returntype="System.Char">
                    <parameters />
                  </method>
                  <method name="set_IndentChar(System.Char)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Char" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Indentation" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Indentation()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Indentation(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespaces" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Namespaces()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Namespaces(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="QuoteChar" attrib="0" ptype="System.Char">
                <methods>
                  <method name="get_QuoteChar()" attrib="2182" returntype="System.Char">
                    <parameters />
                  </method>
                  <method name="set_QuoteChar(System.Char)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Char" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="WriteState" attrib="0" ptype="System.Xml.WriteState">
                <methods>
                  <method name="get_WriteState()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.WriteState">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlLang" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XmlLang()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlSpace" attrib="0" ptype="System.Xml.XmlSpace">
                <methods>
                  <method name="get_XmlSpace()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlSpace">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Flush()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="LookupPrefix(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="ns" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteBase64(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteBinHex(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteCData(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteCharEntity(System.Char)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="WriteChars(System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteComment(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteDocType(System.String, System.String, System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="pubid" position="1" attrib="0" type="System.String" />
                  <parameter name="sysid" position="2" attrib="0" type="System.String" />
                  <parameter name="subset" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteEndAttribute()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteEndDocument()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteEndElement()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteEntityRef(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteFullEndElement()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteName(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNmToken(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteProcessingInstruction(System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="text" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteQualifiedName(System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteRaw(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteRaw(System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteStartAttribute(System.String, System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartDocument()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteStartDocument(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="standalone" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteStartElement(System.String, System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteString(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteSurrogateCharEntity(System.Char, System.Char)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="lowChar" position="0" attrib="0" type="System.Char" />
                  <parameter name="highChar" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="WriteWhitespace(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="ws" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlTokenizedType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="CDATA" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="0" />
              <field name="ENTITIES" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="5" />
              <field name="ENTITY" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="4" />
              <field name="ENUMERATION" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="9" />
              <field name="ID" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="1" />
              <field name="IDREF" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="2" />
              <field name="IDREFS" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="3" />
              <field name="NCName" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="11" />
              <field name="NMTOKEN" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="6" />
              <field name="NMTOKENS" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="7" />
              <field name="NOTATION" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="8" />
              <field name="None" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="12" />
              <field name="QName" attrib="32854" fieldtype="System.Xml.XmlTokenizedType" value="10" />
            </fields>
          </class>
          <class name="XmlUrlResolver" type="class" base="System.Xml.XmlResolver" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CachePolicy" attrib="0" ptype="System.Net.Cache.RequestCachePolicy">
                <methods>
                  <method name="set_CachePolicy(System.Net.Cache.RequestCachePolicy)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.Cache.RequestCachePolicy" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Credentials" attrib="0" ptype="System.Net.ICredentials">
                <methods>
                  <method name="set_Credentials(System.Net.ICredentials)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.ICredentials" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Proxy" attrib="0" ptype="System.Net.IWebProxy">
                <methods>
                  <method name="set_Proxy(System.Net.IWebProxy)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.IWebProxy" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetEntity(System.Uri, System.String, System.Type)" attrib="198" virtual="true" is-override="true" returntype="System.Object">
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="role" position="1" attrib="0" type="System.String" />
                  <parameter name="ofObjectToReturn" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetEntityAsync(System.Uri, System.String, System.Type)" attrib="198" virtual="true" is-override="true" returntype="System.Threading.Tasks.Task`1[System.Object]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="role" position="1" attrib="0" type="System.String" />
                  <parameter name="ofObjectToReturn" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ResolveUri(System.Uri, System.String)" attrib="16582" virtual="true" is-override="true" returntype="System.Uri">
                <parameters>
                  <parameter name="baseUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="relativeUri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlValidatingReader" type="class" base="System.Xml.XmlReader" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ObsoleteAttribute">
                <properties>
                  <property name="Message" value="Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. http://go.microsoft.com/fwlink/?linkid=14202" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Xml.IXmlLineInfo" />
              <interface name="System.Xml.IXmlNamespaceResolver" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Xml.XmlReader)" attrib="6278">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Xml.XmlNodeType, System.Xml.XmlParserContext)" attrib="6278">
                <parameters>
                  <parameter name="xmlFragment" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="fragType" position="1" attrib="0" type="System.Xml.XmlNodeType" />
                  <parameter name="context" position="2" attrib="0" type="System.Xml.XmlParserContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Xml.XmlNodeType, System.Xml.XmlParserContext)" attrib="6278">
                <parameters>
                  <parameter name="xmlFragment" position="0" attrib="0" type="System.String" />
                  <parameter name="fragType" position="1" attrib="0" type="System.Xml.XmlNodeType" />
                  <parameter name="context" position="2" attrib="0" type="System.Xml.XmlParserContext" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AttributeCount" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_AttributeCount()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanReadBinaryContent" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanReadBinaryContent()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanResolveEntity" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanResolveEntity()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Depth" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Depth()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EOF" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_EOF()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Encoding" attrib="0" ptype="System.Text.Encoding">
                <methods>
                  <method name="get_Encoding()" attrib="2182" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EntityHandling" attrib="0" ptype="System.Xml.EntityHandling">
                <methods>
                  <method name="get_EntityHandling()" attrib="2182" returntype="System.Xml.EntityHandling">
                    <parameters />
                  </method>
                  <method name="set_EntityHandling(System.Xml.EntityHandling)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.EntityHandling" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="HasValue" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasValue()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsDefault" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsDefault()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsEmptyElement" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEmptyElement()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumber()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePosition()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NamespaceURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NamespaceURI()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespaces" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Namespaces()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Namespaces(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Prefix" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Prefix()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="QuoteChar" attrib="0" ptype="System.Char">
                <methods>
                  <method name="get_QuoteChar()" attrib="2246" virtual="true" is-override="true" returntype="System.Char">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReadState" attrib="0" ptype="System.Xml.ReadState">
                <methods>
                  <method name="get_ReadState()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.ReadState">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Reader" attrib="0" ptype="System.Xml.XmlReader">
                <methods>
                  <method name="get_Reader()" attrib="2182" returntype="System.Xml.XmlReader">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaType" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_SchemaType()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Schemas" attrib="0" ptype="System.Xml.Schema.XmlSchemaCollection">
                <methods>
                  <method name="get_Schemas()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValidationType" attrib="0" ptype="System.Xml.ValidationType">
                <methods>
                  <method name="get_ValidationType()" attrib="2182" returntype="System.Xml.ValidationType">
                    <parameters />
                  </method>
                  <method name="set_ValidationType(System.Xml.ValidationType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.ValidationType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlLang" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XmlLang()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlResolver" attrib="0" ptype="System.Xml.XmlResolver">
                <methods>
                  <method name="set_XmlResolver(System.Xml.XmlResolver)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlResolver" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlSpace" attrib="0" ptype="System.Xml.XmlSpace">
                <methods>
                  <method name="get_XmlSpace()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlSpace">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="ValidationEventHandler" attrib="0" eventtype="System.Xml.Schema.ValidationEventHandler" />
            </events>
            <methods>
              <method name="Close()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetAttribute(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="i" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="HasLineInfo()" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="LookupNamespace(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="i" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.String, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToElement()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToFirstAttribute()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToNextAttribute()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Read()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadAttributeValue()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadContentAsBase64(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadContentAsBinHex(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBase64(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadElementContentAsBinHex(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ReadTypedValue()" attrib="134" returntype="System.Object">
                <parameters />
              </method>
              <method name="ResolveEntity()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlWhitespace" type="class" base="System.Xml.XmlCharacterData" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String, System.Xml.XmlDocument)" attrib="6277">
                <parameters>
                  <parameter name="strData" position="0" attrib="0" type="System.String" />
                  <parameter name="doc" position="1" attrib="0" type="System.Xml.XmlDocument" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParentNode" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_ParentNode()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PreviousText" attrib="0" ptype="System.Xml.XmlNode">
                <methods>
                  <method name="get_PreviousText()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CloneNode(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="deep" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteContentTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="WriteTo(System.Xml.XmlWriter)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="w" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlWriter" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Settings" attrib="0" ptype="System.Xml.XmlWriterSettings">
                <methods>
                  <method name="get_Settings()" attrib="2502" virtual="true" returntype="System.Xml.XmlWriterSettings">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="WriteState" attrib="0" ptype="System.Xml.WriteState">
                <methods>
                  <method name="get_WriteState()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.WriteState">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlLang" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XmlLang()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlSpace" attrib="0" ptype="System.Xml.XmlSpace">
                <methods>
                  <method name="get_XmlSpace()" attrib="2502" virtual="true" returntype="System.Xml.XmlSpace">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Create(System.IO.Stream)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Create(System.IO.TextWriter)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="outputFileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Create(System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="Create(System.Xml.XmlWriter)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Create(System.IO.Stream, System.Xml.XmlWriterSettings)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlWriterSettings" />
                </parameters>
              </method>
              <method name="Create(System.IO.TextWriter, System.Xml.XmlWriterSettings)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.IO.TextWriter" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlWriterSettings" />
                </parameters>
              </method>
              <method name="Create(System.String, System.Xml.XmlWriterSettings)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="outputFileName" position="0" attrib="0" type="System.String" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlWriterSettings" />
                </parameters>
              </method>
              <method name="Create(System.Text.StringBuilder, System.Xml.XmlWriterSettings)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlWriterSettings" />
                </parameters>
              </method>
              <method name="Create(System.Xml.XmlWriter, System.Xml.XmlWriterSettings)" attrib="150" static="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.XmlWriterSettings" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Flush()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="FlushAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters />
              </method>
              <method name="LookupPrefix(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="ns" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteAttributeString(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteAttributeString(System.String, System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteAttributeString(System.String, System.String, System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteAttributeStringAsync(System.String, System.String, System.String, System.String)" attrib="134" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteAttributes(System.Xml.XmlReader, System.Boolean)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="defattr" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteAttributesAsync(System.Xml.XmlReader, System.Boolean)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="defattr" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteBase64(System.Byte[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteBase64Async(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteBinHex(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteBinHexAsync(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteCData(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteCDataAsync(System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteCharEntity(System.Char)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="WriteCharEntityAsync(System.Char)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="WriteChars(System.Char[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteCharsAsync(System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteComment(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteCommentAsync(System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteDocType(System.String, System.String, System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="pubid" position="1" attrib="0" type="System.String" />
                  <parameter name="sysid" position="2" attrib="0" type="System.String" />
                  <parameter name="subset" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteDocTypeAsync(System.String, System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="pubid" position="1" attrib="0" type="System.String" />
                  <parameter name="sysid" position="2" attrib="0" type="System.String" />
                  <parameter name="subset" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteElementString(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteElementString(System.String, System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteElementString(System.String, System.String, System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteElementStringAsync(System.String, System.String, System.String, System.String)" attrib="134" returntype="System.Threading.Tasks.Task">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteEndAttribute()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteEndAttributeAsync()" attrib="453" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters />
              </method>
              <method name="WriteEndDocument()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteEndDocumentAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters />
              </method>
              <method name="WriteEndElement()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteEndElementAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters />
              </method>
              <method name="WriteEntityRef(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteEntityRefAsync(System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteFullEndElement()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteFullEndElementAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters />
              </method>
              <method name="WriteName(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNameAsync(System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNmToken(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNmTokenAsync(System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNode(System.Xml.XPath.XPathNavigator, System.Boolean)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="navigator" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="defattr" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteNode(System.Xml.XmlReader, System.Boolean)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="defattr" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteNodeAsync(System.Xml.XPath.XPathNavigator, System.Boolean)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters>
                  <parameter name="navigator" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="defattr" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteNodeAsync(System.Xml.XmlReader, System.Boolean)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="defattr" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteProcessingInstruction(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="text" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteProcessingInstructionAsync(System.String, System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="text" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteQualifiedName(System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteQualifiedNameAsync(System.String, System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
                </attributes>
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteRaw(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteRaw(System.Char[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteRawAsync(System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteRawAsync(System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteStartAttribute(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartAttribute(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartAttribute(System.String, System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartAttributeAsync(System.String, System.String, System.String)" attrib="453" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartDocument()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteStartDocument(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="standalone" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteStartDocumentAsync()" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters />
              </method>
              <method name="WriteStartDocumentAsync(System.Boolean)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="standalone" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteStartElement(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartElement(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartElement(System.String, System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartElementAsync(System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteString(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStringAsync(System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteSurrogateCharEntity(System.Char, System.Char)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="lowChar" position="0" attrib="0" type="System.Char" />
                  <parameter name="highChar" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="WriteSurrogateCharEntityAsync(System.Char, System.Char)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="lowChar" position="0" attrib="0" type="System.Char" />
                  <parameter name="highChar" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="WriteValue(System.Boolean)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteValue(System.DateTime)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="WriteValue(System.DateTimeOffset)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="WriteValue(System.Decimal)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="WriteValue(System.Double)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="WriteValue(System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteValue(System.Int64)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="WriteValue(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteValue(System.Single)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="WriteValue(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteWhitespace(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="ws" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteWhitespaceAsync(System.String)" attrib="454" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="ws" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlWriterSettings" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Async" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Async()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Async(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CheckCharacters" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CheckCharacters()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CheckCharacters(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CloseOutput" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CloseOutput()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CloseOutput(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ConformanceLevel" attrib="0" ptype="System.Xml.ConformanceLevel">
                <methods>
                  <method name="get_ConformanceLevel()" attrib="2182" returntype="System.Xml.ConformanceLevel">
                    <parameters />
                  </method>
                  <method name="set_ConformanceLevel(System.Xml.ConformanceLevel)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.ConformanceLevel" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="DoNotEscapeUriAttributes" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_DoNotEscapeUriAttributes()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_DoNotEscapeUriAttributes(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Encoding" attrib="0" ptype="System.Text.Encoding">
                <methods>
                  <method name="get_Encoding()" attrib="2182" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                  <method name="set_Encoding(System.Text.Encoding)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Text.Encoding" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Indent" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Indent()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Indent(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IndentChars" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_IndentChars()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_IndentChars(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NamespaceHandling" attrib="0" ptype="System.Xml.NamespaceHandling">
                <methods>
                  <method name="get_NamespaceHandling()" attrib="2182" returntype="System.Xml.NamespaceHandling">
                    <parameters />
                  </method>
                  <method name="set_NamespaceHandling(System.Xml.NamespaceHandling)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.NamespaceHandling" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NewLineChars" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NewLineChars()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_NewLineChars(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NewLineHandling" attrib="0" ptype="System.Xml.NewLineHandling">
                <methods>
                  <method name="get_NewLineHandling()" attrib="2182" returntype="System.Xml.NewLineHandling">
                    <parameters />
                  </method>
                  <method name="set_NewLineHandling(System.Xml.NewLineHandling)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.NewLineHandling" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NewLineOnAttributes" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_NewLineOnAttributes()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_NewLineOnAttributes(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OmitXmlDeclaration" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_OmitXmlDeclaration()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_OmitXmlDeclaration(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OutputMethod" attrib="0" ptype="System.Xml.XmlOutputMethod">
                <methods>
                  <method name="get_OutputMethod()" attrib="2182" returntype="System.Xml.XmlOutputMethod">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="WriteEndDocumentOnClose" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_WriteEndDocumentOnClose()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_WriteEndDocumentOnClose(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="134" returntype="System.Xml.XmlWriterSettings">
                <parameters />
              </method>
              <method name="Reset()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlXapResolver" type="class" base="System.Xml.XmlResolver" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                <properties>
                  <property name="State" value="Never" />
                </properties>
              </attribute>
              <attribute name="System.ObsoleteAttribute">
                <properties>
                  <property name="Message" value="This API supports the .NET Framework infrastructure and is not intended to be used directly from your code." />
                  <property name="IsError" value="True" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <attributes>
                  <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                    <properties>
                      <property name="State" value="Never" />
                    </properties>
                  </attribute>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This API supports the .NET Framework infrastructure and is not intended to be used directly from your code." />
                      <property name="IsError" value="True" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="GetEntity(System.Uri, System.String, System.Type)" attrib="198" virtual="true" is-override="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                    <properties>
                      <property name="State" value="Never" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="role" position="1" attrib="0" type="System.String" />
                  <parameter name="ofObjectToReturn" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="RegisterApplicationResourceStreamResolver(System.Xml.IApplicationResourceStreamResolver)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                    <properties>
                      <property name="State" value="Never" />
                    </properties>
                  </attribute>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This API supports the .NET Framework infrastructure and is not intended to be used directly from your code." />
                      <property name="IsError" value="True" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="appStreamResolver" position="0" attrib="0" type="System.Xml.IApplicationResourceStreamResolver" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Xml.Resolvers">
        <classes>
          <class name="XmlKnownDtds" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="All" attrib="32854" fieldtype="System.Xml.Resolvers.XmlKnownDtds" value="65535" />
              <field name="None" attrib="32854" fieldtype="System.Xml.Resolvers.XmlKnownDtds" value="0" />
              <field name="Rss091" attrib="32854" fieldtype="System.Xml.Resolvers.XmlKnownDtds" value="2" />
              <field name="Xhtml10" attrib="32854" fieldtype="System.Xml.Resolvers.XmlKnownDtds" value="1" />
            </fields>
          </class>
          <class name="XmlPreloadedResolver" type="class" base="System.Xml.XmlResolver" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Xml.Resolvers.XmlKnownDtds)" attrib="6278">
                <parameters>
                  <parameter name="preloadedDtds" position="0" attrib="0" type="System.Xml.Resolvers.XmlKnownDtds" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlResolver)" attrib="6278">
                <parameters>
                  <parameter name="fallbackResolver" position="0" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlResolver, System.Xml.Resolvers.XmlKnownDtds)" attrib="6278">
                <parameters>
                  <parameter name="fallbackResolver" position="0" attrib="0" type="System.Xml.XmlResolver" />
                  <parameter name="preloadedDtds" position="1" attrib="0" type="System.Xml.Resolvers.XmlKnownDtds" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlResolver, System.Xml.Resolvers.XmlKnownDtds, System.Collections.Generic.IEqualityComparer`1[System.Uri])" attrib="6278">
                <parameters>
                  <parameter name="fallbackResolver" position="0" attrib="0" type="System.Xml.XmlResolver" />
                  <parameter name="preloadedDtds" position="1" attrib="0" type="System.Xml.Resolvers.XmlKnownDtds" />
                  <parameter name="uriComparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[System.Uri]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Credentials" attrib="0" ptype="System.Net.ICredentials">
                <methods>
                  <method name="set_Credentials(System.Net.ICredentials)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.ICredentials" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PreloadedUris" attrib="0" ptype="System.Collections.Generic.IEnumerable`1[System.Uri]">
                <methods>
                  <method name="get_PreloadedUris()" attrib="2182" returntype="System.Collections.Generic.IEnumerable`1[System.Uri]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Uri, System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="value" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Add(System.Uri, System.IO.Stream)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="value" position="1" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Add(System.Uri, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Add(System.Uri, System.Byte[], System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="value" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEntity(System.Uri, System.String, System.Type)" attrib="198" virtual="true" is-override="true" returntype="System.Object">
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="role" position="1" attrib="0" type="System.String" />
                  <parameter name="ofObjectToReturn" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetEntityAsync(System.Uri, System.String, System.Type)" attrib="198" virtual="true" is-override="true" returntype="System.Threading.Tasks.Task`1[System.Object]">
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="role" position="1" attrib="0" type="System.String" />
                  <parameter name="ofObjectToReturn" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="Remove(System.Uri)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.Uri" />
                </parameters>
              </method>
              <method name="ResolveUri(System.Uri, System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Uri">
                <parameters>
                  <parameter name="baseUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="relativeUri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SupportsType(System.Uri, System.Type)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="absoluteUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Xml.Schema">
        <classes>
          <class name="IXmlSchemaInfo" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="IsDefault" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsDefault()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNil" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNil()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleType">
                <methods>
                  <method name="get_MemberType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaAttribute" attrib="0" ptype="System.Xml.Schema.XmlSchemaAttribute">
                <methods>
                  <method name="get_SchemaAttribute()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.Schema.XmlSchemaAttribute">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaElement" attrib="0" ptype="System.Xml.Schema.XmlSchemaElement">
                <methods>
                  <method name="get_SchemaElement()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.Schema.XmlSchemaElement">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaType" attrib="0" ptype="System.Xml.Schema.XmlSchemaType">
                <methods>
                  <method name="get_SchemaType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.Schema.XmlSchemaType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Validity" attrib="0" ptype="System.Xml.Schema.XmlSchemaValidity">
                <methods>
                  <method name="get_Validity()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.Schema.XmlSchemaValidity">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ValidationEventArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <properties>
              <property name="Exception" attrib="0" ptype="System.Xml.Schema.XmlSchemaException">
                <methods>
                  <method name="get_Exception()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaException">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Message" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Message()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Severity" attrib="0" ptype="System.Xml.Schema.XmlSeverityType">
                <methods>
                  <method name="get_Severity()" attrib="2182" returntype="System.Xml.Schema.XmlSeverityType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ValidationEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.Xml.Schema.ValidationEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Schema.ValidationEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Xml.Schema.ValidationEventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Schema.ValidationEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlAtomicValue" type="class" base="System.Xml.XPath.XPathItem" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
            </interfaces>
            <properties>
              <property name="IsNode" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNode()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypedValue" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_TypedValue()" attrib="2246" virtual="true" is-override="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsBoolean" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_ValueAsBoolean()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsDateTime" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_ValueAsDateTime()" attrib="2246" virtual="true" is-override="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsDouble" attrib="0" ptype="System.Double">
                <methods>
                  <method name="get_ValueAsDouble()" attrib="2246" virtual="true" is-override="true" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsInt" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ValueAsInt()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsLong" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_ValueAsLong()" attrib="2246" virtual="true" is-override="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueType" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_ValueType()" attrib="2246" virtual="true" is-override="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlType" attrib="0" ptype="System.Xml.Schema.XmlSchemaType">
                <methods>
                  <method name="get_XmlType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.XmlSchemaType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="134" returntype="System.Xml.Schema.XmlAtomicValue">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ValueAs(System.Type, System.Xml.IXmlNamespaceResolver)" attrib="198" virtual="true" is-override="true" returntype="System.Object">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="nsResolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchema" type="class" base="System.Xml.Schema.XmlSchemaObject" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Xml.Serialization.XmlRootAttribute">
                <properties>
                  <property name="Namespace" value="http://www.w3.org/2001/XMLSchema" />
                  <property name="ElementName" value="schema" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="InstanceNamespace" attrib="32854" fieldtype="System.String" value="http://www.w3.org/2001/XMLSchema-instance" />
              <field name="Namespace" attrib="32854" fieldtype="System.String" value="http://www.w3.org/2001/XMLSchema" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AttributeFormDefault" attrib="0" ptype="System.Xml.Schema.XmlSchemaForm">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="attributeFormDefault" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_AttributeFormDefault()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaForm">
                    <parameters />
                  </method>
                  <method name="set_AttributeFormDefault(System.Xml.Schema.XmlSchemaForm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaForm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="AttributeGroups" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_AttributeGroups()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Attributes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Attributes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BlockDefault" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="blockDefault" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_BlockDefault()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                  <method name="set_BlockDefault(System.Xml.Schema.XmlSchemaDerivationMethod)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaDerivationMethod" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ElementFormDefault" attrib="0" ptype="System.Xml.Schema.XmlSchemaForm">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="elementFormDefault" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_ElementFormDefault()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaForm">
                    <parameters />
                  </method>
                  <method name="set_ElementFormDefault(System.Xml.Schema.XmlSchemaForm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaForm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Elements" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Elements()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FinalDefault" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="finalDefault" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_FinalDefault()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                  <method name="set_FinalDefault(System.Xml.Schema.XmlSchemaDerivationMethod)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaDerivationMethod" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Groups" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Groups()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Id" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="ID" />
                      <property name="AttributeName" value="id" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Id()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Id(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Includes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="include" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaInclude" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="import" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaImport" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="redefine" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaRedefine" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Includes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCompiled" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_IsCompiled()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Items" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="annotation" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAnnotation" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attribute" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttribute" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attributeGroup" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttributeGroup" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="complexType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaComplexType" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="simpleType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleType" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="element" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaElement" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="group" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaGroup" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="notation" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaNotation" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Items()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Notations" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Notations()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaTypes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_SchemaTypes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TargetNamespace" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="anyURI" />
                      <property name="AttributeName" value="targetNamespace" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_TargetNamespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_TargetNamespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="UnhandledAttributes" attrib="0" ptype="System.Xml.XmlAttribute[]">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAnyAttributeAttribute" />
                </attributes>
                <methods>
                  <method name="get_UnhandledAttributes()" attrib="2182" returntype="System.Xml.XmlAttribute[]">
                    <parameters />
                  </method>
                  <method name="set_UnhandledAttributes(System.Xml.XmlAttribute[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlAttribute[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="token" />
                      <property name="AttributeName" value="version" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Version(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Compile(System.Xml.Schema.ValidationEventHandler)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="validationEventHandler" position="0" attrib="0" type="System.Xml.Schema.ValidationEventHandler" />
                </parameters>
              </method>
              <method name="Compile(System.Xml.Schema.ValidationEventHandler, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="validationEventHandler" position="0" attrib="0" type="System.Xml.Schema.ValidationEventHandler" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Read(System.IO.Stream, System.Xml.Schema.ValidationEventHandler)" attrib="150" static="true" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="validationEventHandler" position="1" attrib="0" type="System.Xml.Schema.ValidationEventHandler" />
                </parameters>
              </method>
              <method name="Read(System.IO.TextReader, System.Xml.Schema.ValidationEventHandler)" attrib="150" static="true" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.IO.TextReader" />
                  <parameter name="validationEventHandler" position="1" attrib="0" type="System.Xml.Schema.ValidationEventHandler" />
                </parameters>
              </method>
              <method name="Read(System.Xml.XmlReader, System.Xml.Schema.ValidationEventHandler)" attrib="150" static="true" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="validationEventHandler" position="1" attrib="0" type="System.Xml.Schema.ValidationEventHandler" />
                </parameters>
              </method>
              <method name="Write(System.IO.Stream)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Write(System.IO.TextWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="writer" position="0" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="Write(System.Xml.XmlWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="writer" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Write(System.IO.Stream, System.Xml.XmlNamespaceManager)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="namespaceManager" position="1" attrib="0" type="System.Xml.XmlNamespaceManager" />
                </parameters>
              </method>
              <method name="Write(System.IO.TextWriter, System.Xml.XmlNamespaceManager)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="writer" position="0" attrib="0" type="System.IO.TextWriter" />
                  <parameter name="namespaceManager" position="1" attrib="0" type="System.Xml.XmlNamespaceManager" />
                </parameters>
              </method>
              <method name="Write(System.Xml.XmlWriter, System.Xml.XmlNamespaceManager)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="writer" position="0" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="namespaceManager" position="1" attrib="0" type="System.Xml.XmlNamespaceManager" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaAll" type="class" base="System.Xml.Schema.XmlSchemaGroupBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Items" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="element" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaElement" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Items()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaAnnotated" type="class" base="System.Xml.Schema.XmlSchemaObject" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Annotation" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnnotation">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="annotation" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAnnotation" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Annotation()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnnotation">
                    <parameters />
                  </method>
                  <method name="set_Annotation(System.Xml.Schema.XmlSchemaAnnotation)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAnnotation" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Id" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="ID" />
                      <property name="AttributeName" value="id" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Id()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Id(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="UnhandledAttributes" attrib="0" ptype="System.Xml.XmlAttribute[]">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAnyAttributeAttribute" />
                </attributes>
                <methods>
                  <method name="get_UnhandledAttributes()" attrib="2182" returntype="System.Xml.XmlAttribute[]">
                    <parameters />
                  </method>
                  <method name="set_UnhandledAttributes(System.Xml.XmlAttribute[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlAttribute[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaAnnotation" type="class" base="System.Xml.Schema.XmlSchemaObject" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Id" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="ID" />
                      <property name="AttributeName" value="id" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Id()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Id(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Items" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="documentation" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaDocumentation" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="appinfo" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAppInfo" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Items()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnhandledAttributes" attrib="0" ptype="System.Xml.XmlAttribute[]">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAnyAttributeAttribute" />
                </attributes>
                <methods>
                  <method name="get_UnhandledAttributes()" attrib="2182" returntype="System.Xml.XmlAttribute[]">
                    <parameters />
                  </method>
                  <method name="set_UnhandledAttributes(System.Xml.XmlAttribute[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlAttribute[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaAny" type="class" base="System.Xml.Schema.XmlSchemaParticle" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Namespace" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="namespace" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ProcessContents" attrib="0" ptype="System.Xml.Schema.XmlSchemaContentProcessing">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="processContents" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_ProcessContents()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaContentProcessing">
                    <parameters />
                  </method>
                  <method name="set_ProcessContents(System.Xml.Schema.XmlSchemaContentProcessing)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaContentProcessing" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaAnyAttribute" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Namespace" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="namespace" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ProcessContents" attrib="0" ptype="System.Xml.Schema.XmlSchemaContentProcessing">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="processContents" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_ProcessContents()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaContentProcessing">
                    <parameters />
                  </method>
                  <method name="set_ProcessContents(System.Xml.Schema.XmlSchemaContentProcessing)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaContentProcessing" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaAppInfo" type="class" base="System.Xml.Schema.XmlSchemaObject" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Markup" attrib="0" ptype="System.Xml.XmlNode[]">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAnyElementAttribute" />
                  <attribute name="System.Xml.Serialization.XmlTextAttribute" />
                </attributes>
                <methods>
                  <method name="get_Markup()" attrib="2182" returntype="System.Xml.XmlNode[]">
                    <parameters />
                  </method>
                  <method name="set_Markup(System.Xml.XmlNode[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlNode[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Source" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="anyURI" />
                      <property name="AttributeName" value="source" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Source()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Source(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaAttribute" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AttributeSchemaType" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_AttributeSchemaType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="AttributeType" attrib="0" ptype="System.Object">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This property has been deprecated. Please use AttributeSchemaType property that returns a strongly typed attribute type. http://go.microsoft.com/fwlink/?linkid=14202" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_AttributeType()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DefaultValue" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="null" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="default" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_DefaultValue()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DefaultValue(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FixedValue" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="null" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="fixed" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_FixedValue()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_FixedValue(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Form" attrib="0" ptype="System.Xml.Schema.XmlSchemaForm">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="form" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Form()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaForm">
                    <parameters />
                  </method>
                  <method name="set_Form(System.Xml.Schema.XmlSchemaForm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaForm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="name" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="QualifiedName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_QualifiedName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RefName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="ref" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_RefName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_RefName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaType" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="simpleType" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_SchemaType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                    <parameters />
                  </method>
                  <method name="set_SchemaType(System.Xml.Schema.XmlSchemaSimpleType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSimpleType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaTypeName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="type" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_SchemaTypeName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_SchemaTypeName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Use" attrib="0" ptype="System.Xml.Schema.XmlSchemaUse">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="use" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Use()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaUse">
                    <parameters />
                  </method>
                  <method name="set_Use(System.Xml.Schema.XmlSchemaUse)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaUse" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaAttributeGroup" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AnyAttribute" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnyAttribute">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="anyAttribute" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_AnyAttribute()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnyAttribute">
                    <parameters />
                  </method>
                  <method name="set_AnyAttribute(System.Xml.Schema.XmlSchemaAnyAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAnyAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Attributes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attribute" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttribute" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attributeGroup" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttributeGroupRef" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Attributes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="name" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="QualifiedName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_QualifiedName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RedefinedAttributeGroup" attrib="0" ptype="System.Xml.Schema.XmlSchemaAttributeGroup">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_RedefinedAttributeGroup()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAttributeGroup">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaAttributeGroupRef" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="RefName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="ref" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_RefName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_RefName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaChoice" type="class" base="System.Xml.Schema.XmlSchemaGroupBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Items" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="element" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaElement" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="group" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaGroupRef" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="choice" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaChoice" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="sequence" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSequence" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="any" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAny" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Items()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaCollection" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ObsoleteAttribute">
                <properties>
                  <property name="Message" value="Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202" />
                </properties>
              </attribute>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="nametable" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Xml.Schema.XmlSchema" params="System.String">
                <methods>
                  <method name="get_Item(System.String)" attrib="2182" returntype="System.Xml.Schema.XmlSchema">
                    <parameters>
                      <parameter name="ns" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="2182" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="ValidationEventHandler" attrib="0" eventtype="System.Xml.Schema.ValidationEventHandler" />
            </events>
            <methods>
              <method name="Add(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="Add(System.Xml.Schema.XmlSchemaCollection)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaCollection" />
                </parameters>
              </method>
              <method name="Add(System.String, System.String)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="ns" position="0" attrib="0" type="System.String" />
                  <parameter name="uri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Add(System.String, System.Xml.XmlReader)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="ns" position="0" attrib="0" type="System.String" />
                  <parameter name="reader" position="1" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="Add(System.Xml.Schema.XmlSchema, System.Xml.XmlResolver)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Add(System.String, System.Xml.XmlReader, System.Xml.XmlResolver)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="ns" position="0" attrib="0" type="System.String" />
                  <parameter name="reader" position="1" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="resolver" position="2" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Contains(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="ns" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Contains(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="CopyTo(System.Xml.Schema.XmlSchema[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Xml.Schema.XmlSchema[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="134" returntype="System.Xml.Schema.XmlSchemaCollectionEnumerator">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlSchemaCollectionEnumerator" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerator" />
            </interfaces>
            <properties>
              <property name="Current" attrib="0" ptype="System.Xml.Schema.XmlSchema">
                <methods>
                  <method name="get_Current()" attrib="2182" returntype="System.Xml.Schema.XmlSchema">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="MoveNext()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlSchemaCompilationSettings" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="EnableUpaCheck" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_EnableUpaCheck()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_EnableUpaCheck(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaComplexContent" type="class" base="System.Xml.Schema.XmlSchemaContentModel" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Content" attrib="0" ptype="System.Xml.Schema.XmlSchemaContent">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="restriction" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaComplexContentRestriction" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="extension" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaComplexContentExtension" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Content()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.XmlSchemaContent">
                    <parameters />
                  </method>
                  <method name="set_Content(System.Xml.Schema.XmlSchemaContent)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaContent" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsMixed" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="mixed" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_IsMixed()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsMixed(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaComplexContentExtension" type="class" base="System.Xml.Schema.XmlSchemaContent" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AnyAttribute" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnyAttribute">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="anyAttribute" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_AnyAttribute()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnyAttribute">
                    <parameters />
                  </method>
                  <method name="set_AnyAttribute(System.Xml.Schema.XmlSchemaAnyAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAnyAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Attributes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attribute" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttribute" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attributeGroup" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttributeGroupRef" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Attributes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseTypeName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="base" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_BaseTypeName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_BaseTypeName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Particle" attrib="0" ptype="System.Xml.Schema.XmlSchemaParticle">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="group" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaGroupRef" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="choice" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaChoice" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="all" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAll" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="sequence" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSequence" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Particle()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaParticle">
                    <parameters />
                  </method>
                  <method name="set_Particle(System.Xml.Schema.XmlSchemaParticle)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaParticle" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaComplexContentRestriction" type="class" base="System.Xml.Schema.XmlSchemaContent" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AnyAttribute" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnyAttribute">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="anyAttribute" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_AnyAttribute()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnyAttribute">
                    <parameters />
                  </method>
                  <method name="set_AnyAttribute(System.Xml.Schema.XmlSchemaAnyAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAnyAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Attributes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attribute" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttribute" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attributeGroup" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttributeGroupRef" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Attributes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseTypeName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="base" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_BaseTypeName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_BaseTypeName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Particle" attrib="0" ptype="System.Xml.Schema.XmlSchemaParticle">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="group" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaGroupRef" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="choice" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaChoice" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="all" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAll" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="sequence" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSequence" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Particle()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaParticle">
                    <parameters />
                  </method>
                  <method name="set_Particle(System.Xml.Schema.XmlSchemaParticle)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaParticle" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaComplexType" type="class" base="System.Xml.Schema.XmlSchemaType" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AnyAttribute" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnyAttribute">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="anyAttribute" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_AnyAttribute()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnyAttribute">
                    <parameters />
                  </method>
                  <method name="set_AnyAttribute(System.Xml.Schema.XmlSchemaAnyAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAnyAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="AttributeUses" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_AttributeUses()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="AttributeWildcard" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnyAttribute">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_AttributeWildcard()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnyAttribute">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Attributes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attribute" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttribute" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attributeGroup" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttributeGroupRef" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Attributes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Block" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="block" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Block()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                  <method name="set_Block(System.Xml.Schema.XmlSchemaDerivationMethod)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaDerivationMethod" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="BlockResolved" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_BlockResolved()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ContentModel" attrib="0" ptype="System.Xml.Schema.XmlSchemaContentModel">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="simpleContent" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleContent" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="complexContent" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaComplexContent" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_ContentModel()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaContentModel">
                    <parameters />
                  </method>
                  <method name="set_ContentModel(System.Xml.Schema.XmlSchemaContentModel)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaContentModel" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ContentType" attrib="0" ptype="System.Xml.Schema.XmlSchemaContentType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_ContentType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaContentType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ContentTypeParticle" attrib="0" ptype="System.Xml.Schema.XmlSchemaParticle">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_ContentTypeParticle()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaParticle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAbstract" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="False" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="abstract" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_IsAbstract()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsAbstract(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsMixed" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="False" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="mixed" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_IsMixed()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsMixed(System.Boolean)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Particle" attrib="0" ptype="System.Xml.Schema.XmlSchemaParticle">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="group" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaGroupRef" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="choice" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaChoice" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="all" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAll" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="sequence" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSequence" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Particle()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaParticle">
                    <parameters />
                  </method>
                  <method name="set_Particle(System.Xml.Schema.XmlSchemaParticle)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaParticle" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaContent" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaContentModel" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Content" attrib="0" ptype="System.Xml.Schema.XmlSchemaContent">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Content()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.Schema.XmlSchemaContent">
                    <parameters />
                  </method>
                  <method name="set_Content(System.Xml.Schema.XmlSchemaContent)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaContent" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaContentProcessing" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Lax" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaContentProcessing" value="2">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="lax" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="None" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaContentProcessing" value="0">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
              </field>
              <field name="Skip" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaContentProcessing" value="1">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="skip" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="Strict" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaContentProcessing" value="3">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="strict" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
          </class>
          <class name="XmlSchemaContentType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="ElementOnly" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaContentType" value="2" />
              <field name="Empty" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaContentType" value="1" />
              <field name="Mixed" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaContentType" value="3" />
              <field name="TextOnly" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaContentType" value="0" />
            </fields>
          </class>
          <class name="XmlSchemaDatatype" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="TokenizedType" attrib="0" ptype="System.Xml.XmlTokenizedType">
                <methods>
                  <method name="get_TokenizedType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XmlTokenizedType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeCode" attrib="0" ptype="System.Xml.Schema.XmlTypeCode">
                <methods>
                  <method name="get_TypeCode()" attrib="2502" virtual="true" returntype="System.Xml.Schema.XmlTypeCode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueType" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_ValueType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Variety" attrib="0" ptype="System.Xml.Schema.XmlSchemaDatatypeVariety">
                <methods>
                  <method name="get_Variety()" attrib="2502" virtual="true" returntype="System.Xml.Schema.XmlSchemaDatatypeVariety">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ChangeType(System.Object, System.Type)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="targetType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ChangeType(System.Object, System.Type, System.Xml.IXmlNamespaceResolver)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="targetType" position="1" attrib="0" type="System.Type" />
                  <parameter name="namespaceResolver" position="2" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="datatype" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaDatatype" />
                </parameters>
              </method>
              <method name="ParseValue(System.String, System.Xml.XmlNameTable, System.Xml.IXmlNamespaceResolver)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="nameTable" position="1" attrib="0" type="System.Xml.XmlNameTable" />
                  <parameter name="nsmgr" position="2" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaDatatypeVariety" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Atomic" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDatatypeVariety" value="0" />
              <field name="List" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDatatypeVariety" value="1" />
              <field name="Union" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDatatypeVariety" value="2" />
            </fields>
          </class>
          <class name="XmlSchemaDerivationMethod" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="All" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDerivationMethod" value="255">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="#all" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="Empty" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDerivationMethod" value="0">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="Extension" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDerivationMethod" value="2">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="extension" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="List" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDerivationMethod" value="8">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="list" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="None" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDerivationMethod" value="256">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
              </field>
              <field name="Restriction" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDerivationMethod" value="4">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="restriction" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="Substitution" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDerivationMethod" value="1">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="substitution" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="Union" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaDerivationMethod" value="16">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="union" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
          </class>
          <class name="XmlSchemaDocumentation" type="class" base="System.Xml.Schema.XmlSchemaObject" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Language" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="xml:lang" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Language()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Language(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Markup" attrib="0" ptype="System.Xml.XmlNode[]">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAnyElementAttribute" />
                  <attribute name="System.Xml.Serialization.XmlTextAttribute" />
                </attributes>
                <methods>
                  <method name="get_Markup()" attrib="2182" returntype="System.Xml.XmlNode[]">
                    <parameters />
                  </method>
                  <method name="set_Markup(System.Xml.XmlNode[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlNode[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Source" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="anyURI" />
                      <property name="AttributeName" value="source" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Source()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Source(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaElement" type="class" base="System.Xml.Schema.XmlSchemaParticle" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Block" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="block" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Block()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                  <method name="set_Block(System.Xml.Schema.XmlSchemaDerivationMethod)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaDerivationMethod" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="BlockResolved" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_BlockResolved()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Constraints" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="key" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaKey" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="keyref" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaKeyref" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="unique" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaUnique" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Constraints()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DefaultValue" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="null" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="default" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_DefaultValue()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DefaultValue(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ElementSchemaType" attrib="0" ptype="System.Xml.Schema.XmlSchemaType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_ElementSchemaType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ElementType" attrib="0" ptype="System.Object">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This property has been deprecated. Please use ElementSchemaType property that returns a strongly typed element type. http://go.microsoft.com/fwlink/?linkid=14202" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_ElementType()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Final" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="final" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Final()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                  <method name="set_Final(System.Xml.Schema.XmlSchemaDerivationMethod)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaDerivationMethod" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FinalResolved" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_FinalResolved()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FixedValue" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="null" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="fixed" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_FixedValue()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_FixedValue(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Form" attrib="0" ptype="System.Xml.Schema.XmlSchemaForm">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="form" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Form()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaForm">
                    <parameters />
                  </method>
                  <method name="set_Form(System.Xml.Schema.XmlSchemaForm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaForm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsAbstract" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="False" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="abstract" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_IsAbstract()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsAbstract(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsNillable" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="False" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="nillable" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_IsNillable()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsNillable(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="name" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="QualifiedName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_QualifiedName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RefName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="ref" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_RefName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_RefName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaType" attrib="0" ptype="System.Xml.Schema.XmlSchemaType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="complexType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaComplexType" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="simpleType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleType" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_SchemaType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaType">
                    <parameters />
                  </method>
                  <method name="set_SchemaType(System.Xml.Schema.XmlSchemaType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaTypeName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="type" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_SchemaTypeName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_SchemaTypeName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SubstitutionGroup" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="substitutionGroup" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_SubstitutionGroup()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_SubstitutionGroup(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaEnumerationFacet" type="class" base="System.Xml.Schema.XmlSchemaFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaException" type="class" base="System.SystemException" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                  <parameter name="lineNumber" position="2" attrib="0" type="System.Int32" />
                  <parameter name="linePosition" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumber()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePosition()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Message" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SourceSchemaObject" attrib="0" ptype="System.Xml.Schema.XmlSchemaObject">
                <methods>
                  <method name="get_SourceSchemaObject()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObject">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SourceUri" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SourceUri()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="16582" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaExternal" type="class" base="System.Xml.Schema.XmlSchemaObject" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Id" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="ID" />
                      <property name="AttributeName" value="id" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Id()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Id(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Schema" attrib="0" ptype="System.Xml.Schema.XmlSchema">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Schema()" attrib="2182" returntype="System.Xml.Schema.XmlSchema">
                    <parameters />
                  </method>
                  <method name="set_Schema(System.Xml.Schema.XmlSchema)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaLocation" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="anyURI" />
                      <property name="AttributeName" value="schemaLocation" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_SchemaLocation()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_SchemaLocation(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="UnhandledAttributes" attrib="0" ptype="System.Xml.XmlAttribute[]">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAnyAttributeAttribute" />
                </attributes>
                <methods>
                  <method name="get_UnhandledAttributes()" attrib="2182" returntype="System.Xml.XmlAttribute[]">
                    <parameters />
                  </method>
                  <method name="set_UnhandledAttributes(System.Xml.XmlAttribute[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlAttribute[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaFacet" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsFixed" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="False" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="fixed" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_IsFixed()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsFixed(System.Boolean)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="value" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Value(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaForm" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="None" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaForm" value="0">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
              </field>
              <field name="Qualified" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaForm" value="1">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="qualified" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="Unqualified" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaForm" value="2">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="unqualified" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
          </class>
          <class name="XmlSchemaFractionDigitsFacet" type="class" base="System.Xml.Schema.XmlSchemaNumericFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaGroup" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="name" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Particle" attrib="0" ptype="System.Xml.Schema.XmlSchemaGroupBase">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="choice" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaChoice" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="all" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAll" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="sequence" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSequence" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Particle()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaGroupBase">
                    <parameters />
                  </method>
                  <method name="set_Particle(System.Xml.Schema.XmlSchemaGroupBase)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaGroupBase" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="QualifiedName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_QualifiedName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaGroupBase" type="class" base="System.Xml.Schema.XmlSchemaParticle" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Items" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Items()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaGroupRef" type="class" base="System.Xml.Schema.XmlSchemaParticle" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Particle" attrib="0" ptype="System.Xml.Schema.XmlSchemaGroupBase">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Particle()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaGroupBase">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RefName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="ref" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_RefName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_RefName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaIdentityConstraint" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Fields" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="field" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaXPath" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Fields()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="name" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="QualifiedName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_QualifiedName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Selector" attrib="0" ptype="System.Xml.Schema.XmlSchemaXPath">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="selector" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaXPath" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Selector()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaXPath">
                    <parameters />
                  </method>
                  <method name="set_Selector(System.Xml.Schema.XmlSchemaXPath)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaXPath" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaImport" type="class" base="System.Xml.Schema.XmlSchemaExternal" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Annotation" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnnotation">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="annotation" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAnnotation" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Annotation()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnnotation">
                    <parameters />
                  </method>
                  <method name="set_Annotation(System.Xml.Schema.XmlSchemaAnnotation)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAnnotation" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="DataType" value="anyURI" />
                      <property name="AttributeName" value="namespace" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaInclude" type="class" base="System.Xml.Schema.XmlSchemaExternal" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Annotation" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnnotation">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="annotation" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAnnotation" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Annotation()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnnotation">
                    <parameters />
                  </method>
                  <method name="set_Annotation(System.Xml.Schema.XmlSchemaAnnotation)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAnnotation" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaInference" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Occurrence" attrib="0" ptype="System.Xml.Schema.XmlSchemaInference+InferenceOption">
                <methods>
                  <method name="get_Occurrence()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaInference+InferenceOption">
                    <parameters />
                  </method>
                  <method name="set_Occurrence(System.Xml.Schema.XmlSchemaInference+InferenceOption)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaInference+InferenceOption" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TypeInference" attrib="0" ptype="System.Xml.Schema.XmlSchemaInference+InferenceOption">
                <methods>
                  <method name="get_TypeInference()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaInference+InferenceOption">
                    <parameters />
                  </method>
                  <method name="set_TypeInference(System.Xml.Schema.XmlSchemaInference+InferenceOption)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaInference+InferenceOption" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="InferSchema(System.Xml.XmlReader)" attrib="134" returntype="System.Xml.Schema.XmlSchemaSet">
                <parameters>
                  <parameter name="instanceDocument" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="InferSchema(System.Xml.XmlReader, System.Xml.Schema.XmlSchemaSet)" attrib="134" returntype="System.Xml.Schema.XmlSchemaSet">
                <parameters>
                  <parameter name="instanceDocument" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="schemas" position="1" attrib="0" type="System.Xml.Schema.XmlSchemaSet" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="InferenceOption" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                <interfaces>
                  <interface name="System.IComparable" />
                  <interface name="System.IConvertible" />
                  <interface name="System.IFormattable" />
                </interfaces>
                <fields>
                  <field name="Relaxed" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaInference+InferenceOption" value="1" />
                  <field name="Restricted" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaInference+InferenceOption" value="0" />
                </fields>
              </class>
            </classes>
          </class>
          <class name="XmlSchemaInferenceException" type="class" base="System.Xml.Schema.XmlSchemaException" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                  <parameter name="lineNumber" position="2" attrib="0" type="System.Int32" />
                  <parameter name="linePosition" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="16582" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Xml.Schema.IXmlSchemaInfo" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="ContentType" attrib="0" ptype="System.Xml.Schema.XmlSchemaContentType">
                <methods>
                  <method name="get_ContentType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaContentType">
                    <parameters />
                  </method>
                  <method name="set_ContentType(System.Xml.Schema.XmlSchemaContentType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaContentType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsDefault" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsDefault()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsDefault(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsNil" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNil()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsNil(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleType">
                <methods>
                  <method name="get_MemberType()" attrib="2534" virtual="true" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                    <parameters />
                  </method>
                  <method name="set_MemberType(System.Xml.Schema.XmlSchemaSimpleType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSimpleType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaAttribute" attrib="0" ptype="System.Xml.Schema.XmlSchemaAttribute">
                <methods>
                  <method name="get_SchemaAttribute()" attrib="2534" virtual="true" returntype="System.Xml.Schema.XmlSchemaAttribute">
                    <parameters />
                  </method>
                  <method name="set_SchemaAttribute(System.Xml.Schema.XmlSchemaAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaElement" attrib="0" ptype="System.Xml.Schema.XmlSchemaElement">
                <methods>
                  <method name="get_SchemaElement()" attrib="2534" virtual="true" returntype="System.Xml.Schema.XmlSchemaElement">
                    <parameters />
                  </method>
                  <method name="set_SchemaElement(System.Xml.Schema.XmlSchemaElement)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaElement" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SchemaType" attrib="0" ptype="System.Xml.Schema.XmlSchemaType">
                <methods>
                  <method name="get_SchemaType()" attrib="2534" virtual="true" returntype="System.Xml.Schema.XmlSchemaType">
                    <parameters />
                  </method>
                  <method name="set_SchemaType(System.Xml.Schema.XmlSchemaType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Validity" attrib="0" ptype="System.Xml.Schema.XmlSchemaValidity">
                <methods>
                  <method name="get_Validity()" attrib="2534" virtual="true" returntype="System.Xml.Schema.XmlSchemaValidity">
                    <parameters />
                  </method>
                  <method name="set_Validity(System.Xml.Schema.XmlSchemaValidity)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaValidity" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaKey" type="class" base="System.Xml.Schema.XmlSchemaIdentityConstraint" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaKeyref" type="class" base="System.Xml.Schema.XmlSchemaIdentityConstraint" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Refer" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="refer" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Refer()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_Refer(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaLengthFacet" type="class" base="System.Xml.Schema.XmlSchemaNumericFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaMaxExclusiveFacet" type="class" base="System.Xml.Schema.XmlSchemaFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaMaxInclusiveFacet" type="class" base="System.Xml.Schema.XmlSchemaFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaMaxLengthFacet" type="class" base="System.Xml.Schema.XmlSchemaNumericFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaMinExclusiveFacet" type="class" base="System.Xml.Schema.XmlSchemaFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaMinInclusiveFacet" type="class" base="System.Xml.Schema.XmlSchemaFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaMinLengthFacet" type="class" base="System.Xml.Schema.XmlSchemaNumericFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaNotation" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="name" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Public" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="public" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Public()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Public(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="System" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="system" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_System()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_System(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaNumericFacet" type="class" base="System.Xml.Schema.XmlSchemaFacet" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaObject" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_LineNumber()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_LineNumber(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_LinePosition()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_LinePosition(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespaces" attrib="0" ptype="System.Xml.Serialization.XmlSerializerNamespaces">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />
                </attributes>
                <methods>
                  <method name="get_Namespaces()" attrib="2182" returntype="System.Xml.Serialization.XmlSerializerNamespaces">
                    <parameters />
                  </method>
                  <method name="set_Namespaces(System.Xml.Serialization.XmlSerializerNamespaces)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlSerializerNamespaces" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Parent" attrib="0" ptype="System.Xml.Schema.XmlSchemaObject">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Parent()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObject">
                    <parameters />
                  </method>
                  <method name="set_Parent(System.Xml.Schema.XmlSchemaObject)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaObject" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SourceUri" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_SourceUri()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_SourceUri(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaObjectCollection" type="class" base="System.Collections.CollectionBase" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Collections.IList" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Xml.Schema.XmlSchemaObject)" attrib="6278">
                <parameters>
                  <parameter name="parent" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaObject" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="System.Xml.Schema.XmlSchemaObject" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2502" virtual="true" returntype="System.Xml.Schema.XmlSchemaObject">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Xml.Schema.XmlSchemaObject)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Xml.Schema.XmlSchemaObject" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Xml.Schema.XmlSchemaObject)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaObject" />
                </parameters>
              </method>
              <method name="Contains(System.Xml.Schema.XmlSchemaObject)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaObject" />
                </parameters>
              </method>
              <method name="CopyTo(System.Xml.Schema.XmlSchemaObject[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaObject[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="134" returntype="System.Xml.Schema.XmlSchemaObjectEnumerator">
                <parameters />
              </method>
              <method name="IndexOf(System.Xml.Schema.XmlSchemaObject)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaObject" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.Xml.Schema.XmlSchemaObject)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="System.Xml.Schema.XmlSchemaObject" />
                </parameters>
              </method>
              <method name="OnClear()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="OnInsert(System.Int32, System.Object)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="OnRemove(System.Int32, System.Object)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="OnSet(System.Int32, System.Object, System.Object)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="oldValue" position="1" attrib="0" type="System.Object" />
                  <parameter name="newValue" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Remove(System.Xml.Schema.XmlSchemaObject)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaObject" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaObjectEnumerator" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerator" />
            </interfaces>
            <properties>
              <property name="Current" attrib="0" ptype="System.Xml.Schema.XmlSchemaObject">
                <methods>
                  <method name="get_Current()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObject">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="MoveNext()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Reset()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlSchemaObjectTable" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Xml.Schema.XmlSchemaObject" params="System.Xml.XmlQualifiedName">
                <methods>
                  <method name="get_Item(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObject">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Names" attrib="0" ptype="System.Collections.ICollection">
                <methods>
                  <method name="get_Names()" attrib="2182" returntype="System.Collections.ICollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Values" attrib="0" ptype="System.Collections.ICollection">
                <methods>
                  <method name="get_Values()" attrib="2182" returntype="System.Collections.ICollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Contains(System.Xml.XmlQualifiedName)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="134" returntype="System.Collections.IDictionaryEnumerator">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlSchemaParticle" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="MaxOccurs" attrib="0" ptype="System.Decimal">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_MaxOccurs()" attrib="2182" returntype="System.Decimal">
                    <parameters />
                  </method>
                  <method name="set_MaxOccurs(System.Decimal)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MaxOccursString" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="maxOccurs" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_MaxOccursString()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_MaxOccursString(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MinOccurs" attrib="0" ptype="System.Decimal">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_MinOccurs()" attrib="2182" returntype="System.Decimal">
                    <parameters />
                  </method>
                  <method name="set_MinOccurs(System.Decimal)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MinOccursString" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="minOccurs" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_MinOccursString()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_MinOccursString(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaPatternFacet" type="class" base="System.Xml.Schema.XmlSchemaFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaRedefine" type="class" base="System.Xml.Schema.XmlSchemaExternal" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AttributeGroups" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_AttributeGroups()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Groups" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Groups()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Items" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="annotation" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAnnotation" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attributeGroup" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttributeGroup" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="complexType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaComplexType" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="group" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaGroup" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="simpleType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleType" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Items()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaTypes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_SchemaTypes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaSequence" type="class" base="System.Xml.Schema.XmlSchemaGroupBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Items" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="element" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaElement" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="group" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaGroupRef" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="choice" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaChoice" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="sequence" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSequence" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="any" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAny" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Items()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaSet" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Xml.XmlNameTable)" attrib="6278">
                <parameters>
                  <parameter name="nameTable" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CompilationSettings" attrib="0" ptype="System.Xml.Schema.XmlSchemaCompilationSettings">
                <methods>
                  <method name="get_CompilationSettings()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaCompilationSettings">
                    <parameters />
                  </method>
                  <method name="set_CompilationSettings(System.Xml.Schema.XmlSchemaCompilationSettings)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaCompilationSettings" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GlobalAttributes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <methods>
                  <method name="get_GlobalAttributes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GlobalElements" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <methods>
                  <method name="get_GlobalElements()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GlobalTypes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectTable">
                <methods>
                  <method name="get_GlobalTypes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCompiled" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCompiled()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="2182" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlResolver" attrib="0" ptype="System.Xml.XmlResolver">
                <methods>
                  <method name="set_XmlResolver(System.Xml.XmlResolver)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlResolver" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="ValidationEventHandler" attrib="0" eventtype="System.Xml.Schema.ValidationEventHandler" />
            </events>
            <methods>
              <method name="Add(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="Add(System.Xml.Schema.XmlSchemaSet)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="schemas" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSet" />
                </parameters>
              </method>
              <method name="Add(System.String, System.String)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="targetNamespace" position="0" attrib="0" type="System.String" />
                  <parameter name="schemaUri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Add(System.String, System.Xml.XmlReader)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="targetNamespace" position="0" attrib="0" type="System.String" />
                  <parameter name="schemaDocument" position="1" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="Compile()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Contains(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="targetNamespace" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Contains(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="CopyTo(System.Xml.Schema.XmlSchema[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="schemas" position="0" attrib="0" type="System.Xml.Schema.XmlSchema[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Remove(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="RemoveRecursive(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="schemaToRemove" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="Reprocess(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Xml.Schema.XmlSchema">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="Schemas()" attrib="134" returntype="System.Collections.ICollection">
                <parameters />
              </method>
              <method name="Schemas(System.String)" attrib="134" returntype="System.Collections.ICollection">
                <parameters>
                  <parameter name="targetNamespace" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaSimpleContent" type="class" base="System.Xml.Schema.XmlSchemaContentModel" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Content" attrib="0" ptype="System.Xml.Schema.XmlSchemaContent">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="restriction" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleContentRestriction" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="extension" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleContentExtension" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Content()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.XmlSchemaContent">
                    <parameters />
                  </method>
                  <method name="set_Content(System.Xml.Schema.XmlSchemaContent)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaContent" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaSimpleContentExtension" type="class" base="System.Xml.Schema.XmlSchemaContent" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AnyAttribute" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnyAttribute">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="anyAttribute" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_AnyAttribute()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnyAttribute">
                    <parameters />
                  </method>
                  <method name="set_AnyAttribute(System.Xml.Schema.XmlSchemaAnyAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAnyAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Attributes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attribute" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttribute" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attributeGroup" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttributeGroupRef" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Attributes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseTypeName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="base" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_BaseTypeName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_BaseTypeName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaSimpleContentRestriction" type="class" base="System.Xml.Schema.XmlSchemaContent" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AnyAttribute" attrib="0" ptype="System.Xml.Schema.XmlSchemaAnyAttribute">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="anyAttribute" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_AnyAttribute()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaAnyAttribute">
                    <parameters />
                  </method>
                  <method name="set_AnyAttribute(System.Xml.Schema.XmlSchemaAnyAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaAnyAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Attributes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attribute" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttribute" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="attributeGroup" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaAttributeGroupRef" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Attributes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseType" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="simpleType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleType" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_BaseType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                    <parameters />
                  </method>
                  <method name="set_BaseType(System.Xml.Schema.XmlSchemaSimpleType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSimpleType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="BaseTypeName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="base" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_BaseTypeName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_BaseTypeName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Facets" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="length" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaLengthFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="minLength" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMinLengthFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="maxLength" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMaxLengthFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="pattern" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaPatternFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="enumeration" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaEnumerationFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="maxInclusive" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="maxExclusive" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="minInclusive" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMinInclusiveFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="minExclusive" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMinExclusiveFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="totalDigits" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaTotalDigitsFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="fractionDigits" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaFractionDigitsFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="whiteSpace" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Facets()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaSimpleType" type="class" base="System.Xml.Schema.XmlSchemaType" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Content" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleTypeContent">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="restriction" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="list" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleTypeList" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="union" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleTypeUnion" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Content()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSimpleTypeContent">
                    <parameters />
                  </method>
                  <method name="set_Content(System.Xml.Schema.XmlSchemaSimpleTypeContent)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSimpleTypeContent" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaSimpleTypeContent" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaSimpleTypeList" type="class" base="System.Xml.Schema.XmlSchemaSimpleTypeContent" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="BaseItemType" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_BaseItemType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                    <parameters />
                  </method>
                  <method name="set_BaseItemType(System.Xml.Schema.XmlSchemaSimpleType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSimpleType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ItemType" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="simpleType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleType" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_ItemType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                    <parameters />
                  </method>
                  <method name="set_ItemType(System.Xml.Schema.XmlSchemaSimpleType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSimpleType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ItemTypeName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="itemType" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_ItemTypeName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_ItemTypeName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaSimpleTypeRestriction" type="class" base="System.Xml.Schema.XmlSchemaSimpleTypeContent" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="BaseType" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="simpleType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleType" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_BaseType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                    <parameters />
                  </method>
                  <method name="set_BaseType(System.Xml.Schema.XmlSchemaSimpleType)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSimpleType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="BaseTypeName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="base" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_BaseTypeName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_BaseTypeName(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Facets" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="length" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaLengthFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="minLength" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMinLengthFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="maxLength" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMaxLengthFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="pattern" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaPatternFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="enumeration" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaEnumerationFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="maxInclusive" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="maxExclusive" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="minInclusive" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMinInclusiveFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="minExclusive" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaMinExclusiveFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="totalDigits" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaTotalDigitsFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="fractionDigits" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaFractionDigitsFacet" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="whiteSpace" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Facets()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaSimpleTypeUnion" type="class" base="System.Xml.Schema.XmlSchemaSimpleTypeContent" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="BaseMemberTypes" attrib="0" ptype="System.Xml.Schema.XmlSchemaSimpleType[]">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_BaseMemberTypes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaSimpleType[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseTypes" attrib="0" ptype="System.Xml.Schema.XmlSchemaObjectCollection">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlElementAttribute">
                    <properties>
                      <property name="ElementName" value="simpleType" />
                      <property name="Type" value="System.Xml.Schema.XmlSchemaSimpleType" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_BaseTypes()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaObjectCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MemberTypes" attrib="0" ptype="System.Xml.XmlQualifiedName[]">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="memberTypes" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_MemberTypes()" attrib="2182" returntype="System.Xml.XmlQualifiedName[]">
                    <parameters />
                  </method>
                  <method name="set_MemberTypes(System.Xml.XmlQualifiedName[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaTotalDigitsFacet" type="class" base="System.Xml.Schema.XmlSchemaNumericFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaType" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="BaseSchemaType" attrib="0" ptype="System.Object">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This property has been deprecated. Please use BaseXmlSchemaType property that returns a strongly typed base schema type. http://go.microsoft.com/fwlink/?linkid=14202" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_BaseSchemaType()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseXmlSchemaType" attrib="0" ptype="System.Xml.Schema.XmlSchemaType">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_BaseXmlSchemaType()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Datatype" attrib="0" ptype="System.Xml.Schema.XmlSchemaDatatype">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_Datatype()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDatatype">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DerivedBy" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_DerivedBy()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Final" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="None" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="final" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Final()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                  <method name="set_Final(System.Xml.Schema.XmlSchemaDerivationMethod)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaDerivationMethod" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FinalResolved" attrib="0" ptype="System.Xml.Schema.XmlSchemaDerivationMethod">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_FinalResolved()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaDerivationMethod">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsMixed" attrib="0" ptype="System.Boolean">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_IsMixed()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsMixed(System.Boolean)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="name" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="QualifiedName" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_QualifiedName()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeCode" attrib="0" ptype="System.Xml.Schema.XmlTypeCode">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
                <methods>
                  <method name="get_TypeCode()" attrib="2182" returntype="System.Xml.Schema.XmlTypeCode">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)" attrib="150" static="true" returntype="System.Xml.Schema.XmlSchemaComplexType">
                <parameters>
                  <parameter name="typeCode" position="0" attrib="0" type="System.Xml.Schema.XmlTypeCode" />
                </parameters>
              </method>
              <method name="GetBuiltInComplexType(System.Xml.XmlQualifiedName)" attrib="150" static="true" returntype="System.Xml.Schema.XmlSchemaComplexType">
                <parameters>
                  <parameter name="qualifiedName" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)" attrib="150" static="true" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                <parameters>
                  <parameter name="typeCode" position="0" attrib="0" type="System.Xml.Schema.XmlTypeCode" />
                </parameters>
              </method>
              <method name="GetBuiltInSimpleType(System.Xml.XmlQualifiedName)" attrib="150" static="true" returntype="System.Xml.Schema.XmlSchemaSimpleType">
                <parameters>
                  <parameter name="qualifiedName" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="IsDerivedFrom(System.Xml.Schema.XmlSchemaType, System.Xml.Schema.XmlSchemaType, System.Xml.Schema.XmlSchemaDerivationMethod)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="derivedType" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaType" />
                  <parameter name="baseType" position="1" attrib="0" type="System.Xml.Schema.XmlSchemaType" />
                  <parameter name="except" position="2" attrib="0" type="System.Xml.Schema.XmlSchemaDerivationMethod" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaUnique" type="class" base="System.Xml.Schema.XmlSchemaIdentityConstraint" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaUse" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="None" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaUse" value="0">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
              </field>
              <field name="Optional" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaUse" value="1">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="optional" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="Prohibited" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaUse" value="2">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="prohibited" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="Required" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaUse" value="3">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="required" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
          </class>
          <class name="XmlSchemaValidationException" type="class" base="System.Xml.Schema.XmlSchemaException" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                  <parameter name="lineNumber" position="2" attrib="0" type="System.Int32" />
                  <parameter name="linePosition" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="SourceObject" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_SourceObject()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="16582" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </method>
              <method name="SetSourceObject(System.Object)" attrib="133" returntype="System.Void">
                <parameters>
                  <parameter name="sourceObject" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaValidationFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="AllowXmlAttributes" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaValidationFlags" value="16" />
              <field name="None" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaValidationFlags" value="0" />
              <field name="ProcessIdentityConstraints" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaValidationFlags" value="8" />
              <field name="ProcessInlineSchema" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaValidationFlags" value="1" />
              <field name="ProcessSchemaLocation" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaValidationFlags" value="2" />
              <field name="ReportValidationWarnings" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaValidationFlags" value="4" />
            </fields>
          </class>
          <class name="XmlSchemaValidator" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Xml.XmlNameTable, System.Xml.Schema.XmlSchemaSet, System.Xml.IXmlNamespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags)" attrib="6278">
                <parameters>
                  <parameter name="nameTable" position="0" attrib="0" type="System.Xml.XmlNameTable" />
                  <parameter name="schemas" position="1" attrib="0" type="System.Xml.Schema.XmlSchemaSet" />
                  <parameter name="namespaceResolver" position="2" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                  <parameter name="validationFlags" position="3" attrib="0" type="System.Xml.Schema.XmlSchemaValidationFlags" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LineInfoProvider" attrib="0" ptype="System.Xml.IXmlLineInfo">
                <methods>
                  <method name="get_LineInfoProvider()" attrib="2182" returntype="System.Xml.IXmlLineInfo">
                    <parameters />
                  </method>
                  <method name="set_LineInfoProvider(System.Xml.IXmlLineInfo)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.IXmlLineInfo" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SourceUri" attrib="0" ptype="System.Uri">
                <methods>
                  <method name="get_SourceUri()" attrib="2182" returntype="System.Uri">
                    <parameters />
                  </method>
                  <method name="set_SourceUri(System.Uri)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Uri" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ValidationEventSender" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_ValidationEventSender()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_ValidationEventSender(System.Object)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlResolver" attrib="0" ptype="System.Xml.XmlResolver">
                <methods>
                  <method name="set_XmlResolver(System.Xml.XmlResolver)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlResolver" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="ValidationEventHandler" attrib="0" eventtype="System.Xml.Schema.ValidationEventHandler" />
            </events>
            <methods>
              <method name="AddSchema(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="EndValidation()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetExpectedAttributes()" attrib="134" returntype="System.Xml.Schema.XmlSchemaAttribute[]">
                <parameters />
              </method>
              <method name="GetExpectedParticles()" attrib="134" returntype="System.Xml.Schema.XmlSchemaParticle[]">
                <parameters />
              </method>
              <method name="GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="defaultAttributes" position="0" attrib="0" type="System.Collections.ArrayList" />
                </parameters>
              </method>
              <method name="Initialize()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Initialize(System.Xml.Schema.XmlSchemaObject)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="partialValidationType" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaObject" />
                </parameters>
              </method>
              <method name="SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="schemaInfo" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaInfo" />
                </parameters>
              </method>
              <method name="ValidateAttribute(System.String, System.String, System.String, System.Xml.Schema.XmlSchemaInfo)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceUri" position="1" attrib="0" type="System.String" />
                  <parameter name="attributeValue" position="2" attrib="0" type="System.String" />
                  <parameter name="schemaInfo" position="3" attrib="0" type="System.Xml.Schema.XmlSchemaInfo" />
                </parameters>
              </method>
              <method name="ValidateAttribute(System.String, System.String, System.Xml.Schema.XmlValueGetter, System.Xml.Schema.XmlSchemaInfo)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceUri" position="1" attrib="0" type="System.String" />
                  <parameter name="attributeValue" position="2" attrib="0" type="System.Xml.Schema.XmlValueGetter" />
                  <parameter name="schemaInfo" position="3" attrib="0" type="System.Xml.Schema.XmlSchemaInfo" />
                </parameters>
              </method>
              <method name="ValidateElement(System.String, System.String, System.Xml.Schema.XmlSchemaInfo)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceUri" position="1" attrib="0" type="System.String" />
                  <parameter name="schemaInfo" position="2" attrib="0" type="System.Xml.Schema.XmlSchemaInfo" />
                </parameters>
              </method>
              <method name="ValidateElement(System.String, System.String, System.Xml.Schema.XmlSchemaInfo, System.String, System.String, System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceUri" position="1" attrib="0" type="System.String" />
                  <parameter name="schemaInfo" position="2" attrib="0" type="System.Xml.Schema.XmlSchemaInfo" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.String" />
                  <parameter name="xsiNil" position="4" attrib="0" type="System.String" />
                  <parameter name="xsiSchemaLocation" position="5" attrib="0" type="System.String" />
                  <parameter name="xsiNoNamespaceSchemaLocation" position="6" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="schemaInfo" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaInfo" />
                </parameters>
              </method>
              <method name="ValidateEndElement(System.Xml.Schema.XmlSchemaInfo, System.Object)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="schemaInfo" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaInfo" />
                  <parameter name="typedValue" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="schemaInfo" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaInfo" />
                </parameters>
              </method>
              <method name="ValidateText(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="elementValue" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ValidateText(System.Xml.Schema.XmlValueGetter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="elementValue" position="0" attrib="0" type="System.Xml.Schema.XmlValueGetter" />
                </parameters>
              </method>
              <method name="ValidateWhitespace(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="elementValue" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ValidateWhitespace(System.Xml.Schema.XmlValueGetter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="elementValue" position="0" attrib="0" type="System.Xml.Schema.XmlValueGetter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaValidity" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Invalid" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaValidity" value="2" />
              <field name="NotKnown" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaValidity" value="0" />
              <field name="Valid" attrib="32854" fieldtype="System.Xml.Schema.XmlSchemaValidity" value="1" />
            </fields>
          </class>
          <class name="XmlSchemaWhiteSpaceFacet" type="class" base="System.Xml.Schema.XmlSchemaFacet" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSchemaXPath" type="class" base="System.Xml.Schema.XmlSchemaAnnotated" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="XPath" attrib="0" ptype="System.String">
                <attributes>
                  <attribute name="System.ComponentModel.DefaultValueAttribute">
                    <properties>
                      <property name="Value" value="" />
                    </properties>
                  </attribute>
                  <attribute name="System.Xml.Serialization.XmlAttributeAttribute">
                    <properties>
                      <property name="AttributeName" value="xpath" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_XPath()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_XPath(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSeverityType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Error" attrib="32854" fieldtype="System.Xml.Schema.XmlSeverityType" value="0" />
              <field name="Warning" attrib="32854" fieldtype="System.Xml.Schema.XmlSeverityType" value="1" />
            </fields>
          </class>
          <class name="XmlTypeCode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="AnyAtomicType" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="10" />
              <field name="AnyUri" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="28" />
              <field name="Attribute" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="5" />
              <field name="Base64Binary" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="27" />
              <field name="Boolean" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="13" />
              <field name="Byte" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="46" />
              <field name="Comment" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="8" />
              <field name="Date" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="20" />
              <field name="DateTime" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="18" />
              <field name="DayTimeDuration" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="54" />
              <field name="Decimal" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="14" />
              <field name="Document" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="3" />
              <field name="Double" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="16" />
              <field name="Duration" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="17" />
              <field name="Element" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="4" />
              <field name="Entity" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="39" />
              <field name="Float" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="15" />
              <field name="GDay" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="24" />
              <field name="GMonth" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="25" />
              <field name="GMonthDay" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="23" />
              <field name="GYear" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="22" />
              <field name="GYearMonth" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="21" />
              <field name="HexBinary" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="26" />
              <field name="Id" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="37" />
              <field name="Idref" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="38" />
              <field name="Int" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="44" />
              <field name="Integer" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="40" />
              <field name="Item" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="1" />
              <field name="Language" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="33" />
              <field name="Long" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="43" />
              <field name="NCName" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="36" />
              <field name="Name" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="35" />
              <field name="Namespace" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="6" />
              <field name="NegativeInteger" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="42" />
              <field name="NmToken" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="34" />
              <field name="Node" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="2" />
              <field name="NonNegativeInteger" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="47" />
              <field name="NonPositiveInteger" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="41" />
              <field name="None" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="0" />
              <field name="NormalizedString" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="31" />
              <field name="Notation" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="30" />
              <field name="PositiveInteger" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="52" />
              <field name="ProcessingInstruction" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="7" />
              <field name="QName" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="29" />
              <field name="Short" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="45" />
              <field name="String" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="12" />
              <field name="Text" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="9" />
              <field name="Time" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="19" />
              <field name="Token" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="32" />
              <field name="UnsignedByte" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="51" />
              <field name="UnsignedInt" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="49" />
              <field name="UnsignedLong" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="48" />
              <field name="UnsignedShort" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="50" />
              <field name="UntypedAtomic" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="11" />
              <field name="YearMonthDuration" attrib="32854" fieldtype="System.Xml.Schema.XmlTypeCode" value="53" />
            </fields>
          </class>
          <class name="XmlValueGetter" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke()" attrib="454" virtual="true" returntype="System.Object">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Xml.Serialization">
        <classes>
          <class name="CodeGenerationOptions" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="EnableDataBinding" attrib="32854" fieldtype="System.Xml.Serialization.CodeGenerationOptions" value="16">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="enableDataBinding" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="GenerateNewAsync" attrib="32854" fieldtype="System.Xml.Serialization.CodeGenerationOptions" value="2">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="newAsync" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="GenerateOldAsync" attrib="32854" fieldtype="System.Xml.Serialization.CodeGenerationOptions" value="4">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="oldAsync" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="GenerateOrder" attrib="32854" fieldtype="System.Xml.Serialization.CodeGenerationOptions" value="8">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="order" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="GenerateProperties" attrib="32854" fieldtype="System.Xml.Serialization.CodeGenerationOptions" value="1">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlEnumAttribute">
                    <properties>
                      <property name="Name" value="properties" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="None" attrib="32854" fieldtype="System.Xml.Serialization.CodeGenerationOptions" value="0">
                <attributes>
                  <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
                </attributes>
              </field>
            </fields>
          </class>
          <class name="CodeIdentifier" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This class should never get constructed as it contains only static methods." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="MakeCamel(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MakePascal(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MakeValid(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CodeIdentifiers" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="caseSensitive" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="UseCamelCasing" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_UseCamelCasing()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_UseCamelCasing(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.String, System.Object)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="AddReserved(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="AddUnique(System.String, System.Object)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="IsInUse(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MakeRightCase(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MakeUnique(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Remove(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveReserved(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="identifier" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToArray(System.Type)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IXmlSerializable" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="GetSchema()" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.Schema.XmlSchema">
                <parameters />
              </method>
              <method name="ReadXml(System.Xml.XmlReader)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="WriteXml(System.Xml.XmlWriter)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="writer" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IXmlTextParser" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Normalized" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Normalized()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Normalized(System.Boolean)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="WhitespaceHandling" attrib="0" ptype="System.Xml.WhitespaceHandling">
                <methods>
                  <method name="get_WhitespaceHandling()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.WhitespaceHandling">
                    <parameters />
                  </method>
                  <method name="set_WhitespaceHandling(System.Xml.WhitespaceHandling)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.WhitespaceHandling" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ImportContext" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Xml.Serialization.CodeIdentifiers, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="identifiers" position="0" attrib="0" type="System.Xml.Serialization.CodeIdentifiers" />
                  <parameter name="shareTypes" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ShareTypes" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_ShareTypes()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeIdentifiers" attrib="0" ptype="System.Xml.Serialization.CodeIdentifiers">
                <methods>
                  <method name="get_TypeIdentifiers()" attrib="2182" returntype="System.Xml.Serialization.CodeIdentifiers">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Warnings" attrib="0" ptype="System.Collections.Specialized.StringCollection">
                <methods>
                  <method name="get_Warnings()" attrib="2182" returntype="System.Collections.Specialized.StringCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SoapAttributeAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="attributeName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AttributeName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_AttributeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_AttributeName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="DataType" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DataType()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DataType(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SoapAttributeOverrides" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="System.Xml.Serialization.SoapAttributes" params="System.Type">
                <methods>
                  <method name="get_Item(System.Type)" attrib="2182" returntype="System.Xml.Serialization.SoapAttributes">
                    <parameters>
                      <parameter name="type" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Xml.Serialization.SoapAttributes" params="System.Type, System.String">
                <methods>
                  <method name="get_Item(System.Type, System.String)" attrib="2182" returntype="System.Xml.Serialization.SoapAttributes">
                    <parameters>
                      <parameter name="type" position="0" attrib="0" type="System.Type" />
                      <parameter name="member" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Type, System.Xml.Serialization.SoapAttributes)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Xml.Serialization.SoapAttributes" />
                </parameters>
              </method>
              <method name="Add(System.Type, System.String, System.Xml.Serialization.SoapAttributes)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="member" position="1" attrib="0" type="System.String" />
                  <parameter name="attributes" position="2" attrib="0" type="System.Xml.Serialization.SoapAttributes" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SoapAttributes" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Reflection.ICustomAttributeProvider)" attrib="6278">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.Reflection.ICustomAttributeProvider" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="SoapAttribute" attrib="0" ptype="System.Xml.Serialization.SoapAttributeAttribute">
                <methods>
                  <method name="get_SoapAttribute()" attrib="2182" returntype="System.Xml.Serialization.SoapAttributeAttribute">
                    <parameters />
                  </method>
                  <method name="set_SoapAttribute(System.Xml.Serialization.SoapAttributeAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.SoapAttributeAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SoapDefaultValue" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_SoapDefaultValue()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_SoapDefaultValue(System.Object)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SoapElement" attrib="0" ptype="System.Xml.Serialization.SoapElementAttribute">
                <methods>
                  <method name="get_SoapElement()" attrib="2182" returntype="System.Xml.Serialization.SoapElementAttribute">
                    <parameters />
                  </method>
                  <method name="set_SoapElement(System.Xml.Serialization.SoapElementAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.SoapElementAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SoapEnum" attrib="0" ptype="System.Xml.Serialization.SoapEnumAttribute">
                <methods>
                  <method name="get_SoapEnum()" attrib="2182" returntype="System.Xml.Serialization.SoapEnumAttribute">
                    <parameters />
                  </method>
                  <method name="set_SoapEnum(System.Xml.Serialization.SoapEnumAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.SoapEnumAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SoapIgnore" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_SoapIgnore()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_SoapIgnore(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SoapType" attrib="0" ptype="System.Xml.Serialization.SoapTypeAttribute">
                <methods>
                  <method name="get_SoapType()" attrib="2182" returntype="System.Xml.Serialization.SoapTypeAttribute">
                    <parameters />
                  </method>
                  <method name="set_SoapType(System.Xml.Serialization.SoapTypeAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.SoapTypeAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SoapElementAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DataType" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DataType()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DataType(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ElementName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ElementName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ElementName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsNullable" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNullable()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsNullable(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SoapEnumAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="Field" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SoapIgnoreAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="SoapIncludeAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="ValidOn" value="Interface, Method, Struct, Class" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Type" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_Type(System.Type)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SoapReflectionImporter" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="defaultNamespace" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.Serialization.SoapAttributeOverrides)" attrib="6278">
                <parameters>
                  <parameter name="attributeOverrides" position="0" attrib="0" type="System.Xml.Serialization.SoapAttributeOverrides" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.Serialization.SoapAttributeOverrides, System.String)" attrib="6278">
                <parameters>
                  <parameter name="attributeOverrides" position="0" attrib="0" type="System.Xml.Serialization.SoapAttributeOverrides" />
                  <parameter name="defaultNamespace" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="ImportMembersMapping(System.String, System.String, System.Xml.Serialization.XmlReflectionMember[])" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="members" position="2" attrib="0" type="System.Xml.Serialization.XmlReflectionMember[]" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.String, System.String, System.Xml.Serialization.XmlReflectionMember[], System.Boolean, System.Boolean)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="members" position="2" attrib="0" type="System.Xml.Serialization.XmlReflectionMember[]" />
                  <parameter name="hasWrapperElement" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="writeAccessors" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.String, System.String, System.Xml.Serialization.XmlReflectionMember[], System.Boolean, System.Boolean, System.Boolean)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="members" position="2" attrib="0" type="System.Xml.Serialization.XmlReflectionMember[]" />
                  <parameter name="hasWrapperElement" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="writeAccessors" position="4" attrib="0" type="System.Boolean" />
                  <parameter name="validate" position="5" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.String, System.String, System.Xml.Serialization.XmlReflectionMember[], System.Boolean, System.Boolean, System.Boolean, System.Xml.Serialization.XmlMappingAccess)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <attributes />
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="members" position="2" attrib="0" type="System.Xml.Serialization.XmlReflectionMember[]" />
                  <parameter name="hasWrapperElement" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="writeAccessors" position="4" attrib="0" type="System.Boolean" />
                  <parameter name="validate" position="5" attrib="0" type="System.Boolean" />
                  <parameter name="access" position="6" attrib="0" type="System.Xml.Serialization.XmlMappingAccess" />
                </parameters>
              </method>
              <method name="ImportTypeMapping(System.Type)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ImportTypeMapping(System.Type, System.String)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="defaultNamespace" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IncludeType(System.Type)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IncludeTypes(System.Reflection.ICustomAttributeProvider)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.Reflection.ICustomAttributeProvider" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SoapSchemaMember" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="MemberName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_MemberName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_MemberName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Xml.XmlQualifiedName">
                <methods>
                  <method name="get_MemberType()" attrib="2182" returntype="System.Xml.XmlQualifiedName">
                    <parameters />
                  </method>
                  <method name="set_MemberType(System.Xml.XmlQualifiedName)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SoapTypeAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="Interface, Enum, Struct, Class" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IncludeInSchema" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IncludeInSchema()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IncludeInSchema(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TypeName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TypeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_TypeName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="UnreferencedObjectEventArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.String)" attrib="6278">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                  <parameter name="id" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="UnreferencedId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_UnreferencedId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnreferencedObject" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_UnreferencedObject()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="UnreferencedObjectEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.Xml.Serialization.UnreferencedObjectEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Serialization.UnreferencedObjectEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Xml.Serialization.UnreferencedObjectEventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Serialization.UnreferencedObjectEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlAnyAttributeAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlAnyElementAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Order" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Order()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Order(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlAnyElementAttributes" type="class" base="System.Collections.CollectionBase" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Collections.IList" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="System.Xml.Serialization.XmlAnyElementAttribute" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Xml.Serialization.XmlAnyElementAttribute">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Xml.Serialization.XmlAnyElementAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Xml.Serialization.XmlAnyElementAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Xml.Serialization.XmlAnyElementAttribute)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlAnyElementAttribute" />
                </parameters>
              </method>
              <method name="Contains(System.Xml.Serialization.XmlAnyElementAttribute)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlAnyElementAttribute" />
                </parameters>
              </method>
              <method name="CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Xml.Serialization.XmlAnyElementAttribute[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlAnyElementAttribute" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.Xml.Serialization.XmlAnyElementAttribute)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="attribute" position="1" attrib="0" type="System.Xml.Serialization.XmlAnyElementAttribute" />
                </parameters>
              </method>
              <method name="Remove(System.Xml.Serialization.XmlAnyElementAttribute)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlAnyElementAttribute" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlArrayAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ElementName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ElementName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ElementName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Form" attrib="0" ptype="System.Xml.Schema.XmlSchemaForm">
                <methods>
                  <method name="get_Form()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaForm">
                    <parameters />
                  </method>
                  <method name="set_Form(System.Xml.Schema.XmlSchemaForm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaForm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsNullable" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNullable()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsNullable(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Order" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Order()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Order(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlArrayItemAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Type)" attrib="6278">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DataType" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DataType()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DataType(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ElementName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ElementName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ElementName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Form" attrib="0" ptype="System.Xml.Schema.XmlSchemaForm">
                <methods>
                  <method name="get_Form()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaForm">
                    <parameters />
                  </method>
                  <method name="set_Form(System.Xml.Schema.XmlSchemaForm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaForm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsNullable" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNullable()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsNullable(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NestingLevel" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_NestingLevel()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_NestingLevel(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Type" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_Type(System.Type)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlArrayItemAttributes" type="class" base="System.Collections.CollectionBase" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Collections.IList" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="System.Xml.Serialization.XmlArrayItemAttribute" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Xml.Serialization.XmlArrayItemAttribute">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Xml.Serialization.XmlArrayItemAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Xml.Serialization.XmlArrayItemAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Xml.Serialization.XmlArrayItemAttribute)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlArrayItemAttribute" />
                </parameters>
              </method>
              <method name="Contains(System.Xml.Serialization.XmlArrayItemAttribute)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlArrayItemAttribute" />
                </parameters>
              </method>
              <method name="CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Xml.Serialization.XmlArrayItemAttribute[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlArrayItemAttribute" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.Xml.Serialization.XmlArrayItemAttribute)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="attribute" position="1" attrib="0" type="System.Xml.Serialization.XmlArrayItemAttribute" />
                </parameters>
              </method>
              <method name="Remove(System.Xml.Serialization.XmlArrayItemAttribute)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlArrayItemAttribute" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlAttributeAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="attributeName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Type)" attrib="6278">
                <parameters>
                  <parameter name="attributeName" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AttributeName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_AttributeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_AttributeName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="DataType" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DataType()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DataType(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Form" attrib="0" ptype="System.Xml.Schema.XmlSchemaForm">
                <methods>
                  <method name="get_Form()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaForm">
                    <parameters />
                  </method>
                  <method name="set_Form(System.Xml.Schema.XmlSchemaForm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaForm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Type" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_Type(System.Type)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlAttributeEventArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <properties>
              <property name="Attr" attrib="0" ptype="System.Xml.XmlAttribute">
                <methods>
                  <method name="get_Attr()" attrib="2182" returntype="System.Xml.XmlAttribute">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ExpectedAttributes" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ExpectedAttributes()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumber()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePosition()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ObjectBeingDeserialized" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_ObjectBeingDeserialized()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlAttributeEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.Xml.Serialization.XmlAttributeEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Xml.Serialization.XmlAttributeEventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlAttributeOverrides" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="System.Xml.Serialization.XmlAttributes" params="System.Type">
                <methods>
                  <method name="get_Item(System.Type)" attrib="2182" returntype="System.Xml.Serialization.XmlAttributes">
                    <parameters>
                      <parameter name="type" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Xml.Serialization.XmlAttributes" params="System.Type, System.String">
                <methods>
                  <method name="get_Item(System.Type, System.String)" attrib="2182" returntype="System.Xml.Serialization.XmlAttributes">
                    <parameters>
                      <parameter name="type" position="0" attrib="0" type="System.Type" />
                      <parameter name="member" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Type, System.Xml.Serialization.XmlAttributes)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributes" />
                </parameters>
              </method>
              <method name="Add(System.Type, System.String, System.Xml.Serialization.XmlAttributes)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="member" position="1" attrib="0" type="System.String" />
                  <parameter name="attributes" position="2" attrib="0" type="System.Xml.Serialization.XmlAttributes" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlAttributes" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Reflection.ICustomAttributeProvider)" attrib="6278">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.Reflection.ICustomAttributeProvider" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="XmlAnyAttribute" attrib="0" ptype="System.Xml.Serialization.XmlAnyAttributeAttribute">
                <methods>
                  <method name="get_XmlAnyAttribute()" attrib="2182" returntype="System.Xml.Serialization.XmlAnyAttributeAttribute">
                    <parameters />
                  </method>
                  <method name="set_XmlAnyAttribute(System.Xml.Serialization.XmlAnyAttributeAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlAnyAttributeAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlAnyElements" attrib="0" ptype="System.Xml.Serialization.XmlAnyElementAttributes">
                <methods>
                  <method name="get_XmlAnyElements()" attrib="2182" returntype="System.Xml.Serialization.XmlAnyElementAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlArray" attrib="0" ptype="System.Xml.Serialization.XmlArrayAttribute">
                <methods>
                  <method name="get_XmlArray()" attrib="2182" returntype="System.Xml.Serialization.XmlArrayAttribute">
                    <parameters />
                  </method>
                  <method name="set_XmlArray(System.Xml.Serialization.XmlArrayAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlArrayAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlArrayItems" attrib="0" ptype="System.Xml.Serialization.XmlArrayItemAttributes">
                <methods>
                  <method name="get_XmlArrayItems()" attrib="2182" returntype="System.Xml.Serialization.XmlArrayItemAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlAttribute" attrib="0" ptype="System.Xml.Serialization.XmlAttributeAttribute">
                <methods>
                  <method name="get_XmlAttribute()" attrib="2182" returntype="System.Xml.Serialization.XmlAttributeAttribute">
                    <parameters />
                  </method>
                  <method name="set_XmlAttribute(System.Xml.Serialization.XmlAttributeAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlAttributeAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlChoiceIdentifier" attrib="0" ptype="System.Xml.Serialization.XmlChoiceIdentifierAttribute">
                <methods>
                  <method name="get_XmlChoiceIdentifier()" attrib="2182" returntype="System.Xml.Serialization.XmlChoiceIdentifierAttribute">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlDefaultValue" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_XmlDefaultValue()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_XmlDefaultValue(System.Object)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlElements" attrib="0" ptype="System.Xml.Serialization.XmlElementAttributes">
                <methods>
                  <method name="get_XmlElements()" attrib="2182" returntype="System.Xml.Serialization.XmlElementAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlEnum" attrib="0" ptype="System.Xml.Serialization.XmlEnumAttribute">
                <methods>
                  <method name="get_XmlEnum()" attrib="2182" returntype="System.Xml.Serialization.XmlEnumAttribute">
                    <parameters />
                  </method>
                  <method name="set_XmlEnum(System.Xml.Serialization.XmlEnumAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlEnumAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlIgnore" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_XmlIgnore()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_XmlIgnore(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlRoot" attrib="0" ptype="System.Xml.Serialization.XmlRootAttribute">
                <methods>
                  <method name="get_XmlRoot()" attrib="2182" returntype="System.Xml.Serialization.XmlRootAttribute">
                    <parameters />
                  </method>
                  <method name="set_XmlRoot(System.Xml.Serialization.XmlRootAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlText" attrib="0" ptype="System.Xml.Serialization.XmlTextAttribute">
                <methods>
                  <method name="get_XmlText()" attrib="2182" returntype="System.Xml.Serialization.XmlTextAttribute">
                    <parameters />
                  </method>
                  <method name="set_XmlText(System.Xml.Serialization.XmlTextAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlTextAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlType" attrib="0" ptype="System.Xml.Serialization.XmlTypeAttribute">
                <methods>
                  <method name="get_XmlType()" attrib="2182" returntype="System.Xml.Serialization.XmlTypeAttribute">
                    <parameters />
                  </method>
                  <method name="set_XmlType(System.Xml.Serialization.XmlTypeAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlTypeAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Xmlns" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Xmlns()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Xmlns(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlChoiceIdentifierAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="MemberName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_MemberName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_MemberName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlDeserializationEvents" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <properties>
              <property name="OnUnknownAttribute" attrib="0" ptype="System.Xml.Serialization.XmlAttributeEventHandler">
                <methods>
                  <method name="get_OnUnknownAttribute()" attrib="2182" returntype="System.Xml.Serialization.XmlAttributeEventHandler">
                    <parameters />
                  </method>
                  <method name="set_OnUnknownAttribute(System.Xml.Serialization.XmlAttributeEventHandler)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlAttributeEventHandler" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OnUnknownElement" attrib="0" ptype="System.Xml.Serialization.XmlElementEventHandler">
                <methods>
                  <method name="get_OnUnknownElement()" attrib="2182" returntype="System.Xml.Serialization.XmlElementEventHandler">
                    <parameters />
                  </method>
                  <method name="set_OnUnknownElement(System.Xml.Serialization.XmlElementEventHandler)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlElementEventHandler" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OnUnknownNode" attrib="0" ptype="System.Xml.Serialization.XmlNodeEventHandler">
                <methods>
                  <method name="get_OnUnknownNode()" attrib="2182" returntype="System.Xml.Serialization.XmlNodeEventHandler">
                    <parameters />
                  </method>
                  <method name="set_OnUnknownNode(System.Xml.Serialization.XmlNodeEventHandler)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlNodeEventHandler" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OnUnreferencedObject" attrib="0" ptype="System.Xml.Serialization.UnreferencedObjectEventHandler">
                <methods>
                  <method name="get_OnUnreferencedObject()" attrib="2182" returntype="System.Xml.Serialization.UnreferencedObjectEventHandler">
                    <parameters />
                  </method>
                  <method name="set_OnUnreferencedObject(System.Xml.Serialization.UnreferencedObjectEventHandler)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.UnreferencedObjectEventHandler" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlElementAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Type)" attrib="6278">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DataType" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DataType()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DataType(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ElementName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ElementName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ElementName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Form" attrib="0" ptype="System.Xml.Schema.XmlSchemaForm">
                <methods>
                  <method name="get_Form()" attrib="2182" returntype="System.Xml.Schema.XmlSchemaForm">
                    <parameters />
                  </method>
                  <method name="set_Form(System.Xml.Schema.XmlSchemaForm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaForm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsNullable" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNullable()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsNullable(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Order" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Order()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Order(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Type" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_Type(System.Type)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlElementAttributes" type="class" base="System.Collections.CollectionBase" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Collections.IList" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="System.Xml.Serialization.XmlElementAttribute" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Xml.Serialization.XmlElementAttribute">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Xml.Serialization.XmlElementAttribute)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Xml.Serialization.XmlElementAttribute" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Xml.Serialization.XmlElementAttribute)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlElementAttribute" />
                </parameters>
              </method>
              <method name="Contains(System.Xml.Serialization.XmlElementAttribute)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlElementAttribute" />
                </parameters>
              </method>
              <method name="CopyTo(System.Xml.Serialization.XmlElementAttribute[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Xml.Serialization.XmlElementAttribute[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.Xml.Serialization.XmlElementAttribute)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlElementAttribute" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.Xml.Serialization.XmlElementAttribute)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="attribute" position="1" attrib="0" type="System.Xml.Serialization.XmlElementAttribute" />
                </parameters>
              </method>
              <method name="Remove(System.Xml.Serialization.XmlElementAttribute)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="attribute" position="0" attrib="0" type="System.Xml.Serialization.XmlElementAttribute" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlElementEventArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <properties>
              <property name="Element" attrib="0" ptype="System.Xml.XmlElement">
                <methods>
                  <method name="get_Element()" attrib="2182" returntype="System.Xml.XmlElement">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ExpectedElements" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ExpectedElements()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumber()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePosition()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ObjectBeingDeserialized" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_ObjectBeingDeserialized()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlElementEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.Xml.Serialization.XmlElementEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Serialization.XmlElementEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Xml.Serialization.XmlElementEventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Serialization.XmlElementEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlEnumAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="Field" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlIgnoreAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlIncludeAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="ValidOn" value="Interface, Method, Struct, Class" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Type" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_Type(System.Type)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlMapping" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="ElementName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ElementName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XsdElementName" attrib="0" ptype="System.String">
                <attributes />
                <methods>
                  <method name="get_XsdElementName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="SetKey(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlMappingAccess" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="None" attrib="32854" fieldtype="System.Xml.Serialization.XmlMappingAccess" value="0" />
              <field name="Read" attrib="32854" fieldtype="System.Xml.Serialization.XmlMappingAccess" value="1" />
              <field name="Write" attrib="32854" fieldtype="System.Xml.Serialization.XmlMappingAccess" value="2" />
            </fields>
          </class>
          <class name="XmlMemberMapping" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <properties>
              <property name="Any" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Any()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CheckSpecified" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CheckSpecified()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ElementName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ElementName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MemberName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_MemberName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeFullName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TypeFullName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TypeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeNamespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TypeNamespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XsdElementName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XsdElementName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlMembersMapping" type="class" base="System.Xml.Serialization.XmlMapping" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Xml.Serialization.XmlMemberMapping" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Xml.Serialization.XmlMemberMapping">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TypeName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TypeName()" attrib="2182" returntype="System.String">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeNamespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TypeNamespace()" attrib="2182" returntype="System.String">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlNamespaceDeclarationsAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlNodeEventArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <properties>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumber()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePosition()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NamespaceURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NamespaceURI()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XmlNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="2182" returntype="System.Xml.XmlNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ObjectBeingDeserialized" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_ObjectBeingDeserialized()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Text" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Text()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlNodeEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.Xml.Serialization.XmlNodeEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Serialization.XmlNodeEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Xml.Serialization.XmlNodeEventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Serialization.XmlNodeEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlReflectionImporter" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="defaultNamespace" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.Serialization.XmlAttributeOverrides)" attrib="6278">
                <parameters>
                  <parameter name="attributeOverrides" position="0" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.Serialization.XmlAttributeOverrides, System.String)" attrib="6278">
                <parameters>
                  <parameter name="attributeOverrides" position="0" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                  <parameter name="defaultNamespace" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="ImportMembersMapping(System.String, System.String, System.Xml.Serialization.XmlReflectionMember[], System.Boolean)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="members" position="2" attrib="0" type="System.Xml.Serialization.XmlReflectionMember[]" />
                  <parameter name="hasWrapperElement" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.String, System.String, System.Xml.Serialization.XmlReflectionMember[], System.Boolean, System.Boolean)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <attributes />
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="members" position="2" attrib="0" type="System.Xml.Serialization.XmlReflectionMember[]" />
                  <parameter name="hasWrapperElement" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="rpc" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.String, System.String, System.Xml.Serialization.XmlReflectionMember[], System.Boolean, System.Boolean, System.Boolean)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <attributes />
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="members" position="2" attrib="0" type="System.Xml.Serialization.XmlReflectionMember[]" />
                  <parameter name="hasWrapperElement" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="rpc" position="4" attrib="0" type="System.Boolean" />
                  <parameter name="openModel" position="5" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.String, System.String, System.Xml.Serialization.XmlReflectionMember[], System.Boolean, System.Boolean, System.Boolean, System.Xml.Serialization.XmlMappingAccess)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <attributes />
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="members" position="2" attrib="0" type="System.Xml.Serialization.XmlReflectionMember[]" />
                  <parameter name="hasWrapperElement" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="rpc" position="4" attrib="0" type="System.Boolean" />
                  <parameter name="openModel" position="5" attrib="0" type="System.Boolean" />
                  <parameter name="access" position="6" attrib="0" type="System.Xml.Serialization.XmlMappingAccess" />
                </parameters>
              </method>
              <method name="ImportTypeMapping(System.Type)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ImportTypeMapping(System.Type, System.String)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="defaultNamespace" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ImportTypeMapping(System.Type, System.Xml.Serialization.XmlRootAttribute)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="root" position="1" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                </parameters>
              </method>
              <method name="ImportTypeMapping(System.Type, System.Xml.Serialization.XmlRootAttribute, System.String)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="root" position="1" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                  <parameter name="defaultNamespace" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IncludeType(System.Type)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IncludeTypes(System.Reflection.ICustomAttributeProvider)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.Reflection.ICustomAttributeProvider" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlReflectionMember" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsReturnValue" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsReturnValue()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsReturnValue(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MemberName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_MemberName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_MemberName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_MemberType()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_MemberType(System.Type)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OverrideIsNullable" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_OverrideIsNullable()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_OverrideIsNullable(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SoapAttributes" attrib="0" ptype="System.Xml.Serialization.SoapAttributes">
                <methods>
                  <method name="get_SoapAttributes()" attrib="2182" returntype="System.Xml.Serialization.SoapAttributes">
                    <parameters />
                  </method>
                  <method name="set_SoapAttributes(System.Xml.Serialization.SoapAttributes)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.SoapAttributes" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="XmlAttributes" attrib="0" ptype="System.Xml.Serialization.XmlAttributes">
                <methods>
                  <method name="get_XmlAttributes()" attrib="2182" returntype="System.Xml.Serialization.XmlAttributes">
                    <parameters />
                  </method>
                  <method name="set_XmlAttributes(System.Xml.Serialization.XmlAttributes)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.Serialization.XmlAttributes" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlRootAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Interface, Enum, Struct, Class" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="elementName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DataType" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DataType()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DataType(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ElementName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ElementName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ElementName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsNullable" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNullable()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsNullable(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemaEnumerator" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.Generic.IEnumerator`1[System.Xml.Schema.XmlSchema]" />
              <interface name="System.Collections.IEnumerator" />
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Xml.Serialization.XmlSchemas)" attrib="6278">
                <parameters>
                  <parameter name="list" position="0" attrib="0" type="System.Xml.Serialization.XmlSchemas" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Current" attrib="0" ptype="System.Xml.Schema.XmlSchema">
                <methods>
                  <method name="get_Current()" attrib="2534" virtual="true" returntype="System.Xml.Schema.XmlSchema">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="MoveNext()" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlSchemaExporter" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Xml.Serialization.XmlSchemas)" attrib="6278">
                <parameters>
                  <parameter name="schemas" position="0" attrib="0" type="System.Xml.Serialization.XmlSchemas" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="ExportAnyType(System.String)" attrib="134" returntype="System.String">
                <attributes />
                <parameters>
                  <parameter name="ns" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ExportAnyType(System.Xml.Serialization.XmlMembersMapping)" attrib="134" returntype="System.String">
                <attributes />
                <parameters>
                  <parameter name="members" position="0" attrib="0" type="System.Xml.Serialization.XmlMembersMapping" />
                </parameters>
              </method>
              <method name="ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="xmlMembersMapping" position="0" attrib="0" type="System.Xml.Serialization.XmlMembersMapping" />
                </parameters>
              </method>
              <method name="ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping, System.Boolean)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="xmlMembersMapping" position="0" attrib="0" type="System.Xml.Serialization.XmlMembersMapping" />
                  <parameter name="exportEnclosingType" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)" attrib="134" returntype="System.Xml.XmlQualifiedName">
                <attributes />
                <parameters>
                  <parameter name="xmlMembersMapping" position="0" attrib="0" type="System.Xml.Serialization.XmlMembersMapping" />
                </parameters>
              </method>
              <method name="ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="xmlTypeMapping" position="0" attrib="0" type="System.Xml.Serialization.XmlTypeMapping" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaImporter" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Xml.Serialization.XmlSchemas)" attrib="6278">
                <parameters>
                  <parameter name="schemas" position="0" attrib="0" type="System.Xml.Serialization.XmlSchemas" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.Serialization.XmlSchemas, System.Xml.Serialization.CodeIdentifiers)" attrib="6278">
                <parameters>
                  <parameter name="schemas" position="0" attrib="0" type="System.Xml.Serialization.XmlSchemas" />
                  <parameter name="typeIdentifiers" position="1" attrib="0" type="System.Xml.Serialization.CodeIdentifiers" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="ImportAnyType(System.Xml.XmlQualifiedName, System.String)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="elementName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ImportDerivedTypeMapping(System.Xml.XmlQualifiedName, System.Type)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="baseType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ImportDerivedTypeMapping(System.Xml.XmlQualifiedName, System.Type, System.Boolean)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="baseType" position="1" attrib="0" type="System.Type" />
                  <parameter name="baseTypeCanBeIndirect" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.Xml.XmlQualifiedName)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.Xml.XmlQualifiedName[])" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <parameters>
                  <parameter name="names" position="0" attrib="0" type="System.Xml.XmlQualifiedName[]" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.String, System.String, System.Xml.Serialization.SoapSchemaMember[])" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <attributes />
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="members" position="2" attrib="0" type="System.Xml.Serialization.SoapSchemaMember[]" />
                </parameters>
              </method>
              <method name="ImportMembersMapping(System.Xml.XmlQualifiedName[], System.Type, System.Boolean)" attrib="134" returntype="System.Xml.Serialization.XmlMembersMapping">
                <attributes />
                <parameters>
                  <parameter name="names" position="0" attrib="0" type="System.Xml.XmlQualifiedName[]" />
                  <parameter name="baseType" position="1" attrib="0" type="System.Type" />
                  <parameter name="baseTypeCanBeIndirect" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportSchemaType(System.Xml.XmlQualifiedName)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="ImportSchemaType(System.Xml.XmlQualifiedName, System.Type)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="baseType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ImportSchemaType(System.Xml.XmlQualifiedName, System.Type, System.Boolean)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <attributes />
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="baseType" position="1" attrib="0" type="System.Type" />
                  <parameter name="baseTypeCanBeIndirect" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportTypeMapping(System.Xml.XmlQualifiedName)" attrib="134" returntype="System.Xml.Serialization.XmlTypeMapping">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSchemaProviderAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="Interface, Struct, Class" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="methodName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsAny" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsAny()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsAny(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MethodName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_MethodName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSchemas" type="class" base="System.Collections.CollectionBase" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.Generic.IEnumerable`1[System.Xml.Schema.XmlSchema]" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Collections.IList" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsCompiled" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCompiled()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Xml.Schema.XmlSchema" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Xml.Schema.XmlSchema">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Xml.Schema.XmlSchema)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Xml.Schema.XmlSchema" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Xml.Schema.XmlSchema" params="System.String">
                <methods>
                  <method name="get_Item(System.String)" attrib="2182" returntype="System.Xml.Schema.XmlSchema">
                    <parameters>
                      <parameter name="ns" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="Add(System.Xml.Serialization.XmlSchemas)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="schemas" position="0" attrib="0" type="System.Xml.Serialization.XmlSchemas" />
                </parameters>
              </method>
              <method name="Add(System.Xml.Schema.XmlSchema, System.Uri)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                  <parameter name="baseUri" position="1" attrib="0" type="System.Uri" />
                </parameters>
              </method>
              <method name="AddReference(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="Compile(System.Xml.Schema.ValidationEventHandler, System.Boolean)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="handler" position="0" attrib="0" type="System.Xml.Schema.ValidationEventHandler" />
                  <parameter name="fullCompile" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Contains(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="targetNamespace" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Contains(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="CopyTo(System.Xml.Schema.XmlSchema[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Xml.Schema.XmlSchema[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Find(System.Xml.XmlQualifiedName, System.Type)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetSchemas(System.String)" attrib="134" returntype="System.Collections.IList">
                <parameters>
                  <parameter name="ns" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IndexOf(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="schema" position="1" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="IsDataSet(System.Xml.Schema.XmlSchema)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
              <method name="OnClear()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="OnInsert(System.Int32, System.Object)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="OnRemove(System.Int32, System.Object)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="OnSet(System.Int32, System.Object, System.Object)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="oldValue" position="1" attrib="0" type="System.Object" />
                  <parameter name="newValue" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Remove(System.Xml.Schema.XmlSchema)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="schema" position="0" attrib="0" type="System.Xml.Schema.XmlSchema" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSerializationCollectionFixupCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.Object, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="System.Object" />
                  <parameter name="collectionItems" position="1" attrib="0" type="System.Object" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="System.Object" />
                  <parameter name="collectionItems" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSerializationFixupCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="fixup" position="0" attrib="0" type="System.Object" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="fixup" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSerializationGeneratedCode" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XmlSerializationReadCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke()" attrib="454" virtual="true" returntype="System.Object">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlSerializationReader" type="class" base="System.Xml.Serialization.XmlSerializationGeneratedCode" abstract="true" charset="Ansi" layout="Auto">
            <attributes />
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="DecodeName" attrib="0" ptype="System.Boolean">
                <attributes />
                <methods>
                  <method name="get_DecodeName()" attrib="2180" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_DecodeName(System.Boolean)" attrib="2180" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Document" attrib="0" ptype="System.Xml.XmlDocument">
                <methods>
                  <method name="get_Document()" attrib="2180" returntype="System.Xml.XmlDocument">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReturnValue" attrib="0" ptype="System.Boolean">
                <attributes />
                <methods>
                  <method name="get_IsReturnValue()" attrib="2180" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IsReturnValue(System.Boolean)" attrib="2180" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Reader" attrib="0" ptype="System.Xml.XmlReader">
                <methods>
                  <method name="get_Reader()" attrib="2180" returntype="System.Xml.XmlReader">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReaderCount" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ReaderCount()" attrib="2180" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddFixup(System.Xml.Serialization.XmlSerializationReader+CollectionFixup)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="fixup" position="0" attrib="0" type="System.Xml.Serialization.XmlSerializationReader+CollectionFixup" />
                </parameters>
              </method>
              <method name="AddFixup(System.Xml.Serialization.XmlSerializationReader+Fixup)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="fixup" position="0" attrib="0" type="System.Xml.Serialization.XmlSerializationReader+Fixup" />
                </parameters>
              </method>
              <method name="AddReadCallback(System.String, System.String, System.Type, System.Xml.Serialization.XmlSerializationReadCallback)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="type" position="2" attrib="0" type="System.Type" />
                  <parameter name="read" position="3" attrib="0" type="System.Xml.Serialization.XmlSerializationReadCallback" />
                </parameters>
              </method>
              <method name="AddTarget(System.String, System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="id" position="0" attrib="0" type="System.String" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CheckReaderCount(System.Int32&amp;, System.Int32&amp;)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="whileIterations" position="0" attrib="0" type="System.Int32" direction="ref" />
                  <parameter name="readerCount" position="1" attrib="0" type="System.Int32" direction="ref" />
                </parameters>
              </method>
              <method name="CollapseWhitespace(System.String)" attrib="132" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateAbstractTypeException(System.String, System.String)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateBadDerivationException(System.String, System.String, System.String, System.String, System.String, System.String)" attrib="132" returntype="System.Exception">
                <attributes />
                <parameters>
                  <parameter name="xsdDerived" position="0" attrib="0" type="System.String" />
                  <parameter name="nsDerived" position="1" attrib="0" type="System.String" />
                  <parameter name="xsdBase" position="2" attrib="0" type="System.String" />
                  <parameter name="nsBase" position="3" attrib="0" type="System.String" />
                  <parameter name="clrDerived" position="4" attrib="0" type="System.String" />
                  <parameter name="clrBase" position="5" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateCtorHasSecurityException(System.String)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateInaccessibleConstructorException(System.String)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateInvalidCastException(System.Type, System.Object)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CreateInvalidCastException(System.Type, System.Object, System.String)" attrib="132" returntype="System.Exception">
                <attributes />
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                  <parameter name="id" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateMissingIXmlSerializableType(System.String, System.String, System.String)" attrib="132" returntype="System.Exception">
                <attributes />
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="clrType" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateReadOnlyCollectionException(System.String)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateUnknownConstantException(System.String, System.Type)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="enumType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="CreateUnknownNodeException()" attrib="132" returntype="System.Exception">
                <parameters />
              </method>
              <method name="CreateUnknownTypeException(System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="EnsureArrayIndex(System.Array, System.Int32, System.Type)" attrib="132" returntype="System.Array">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="elementType" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="FixupArrayRefs(System.Object)" attrib="132" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="fixup" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetArrayLength(System.String, System.String)" attrib="132" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetNullAttr()" attrib="132" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="GetTarget(System.String)" attrib="132" returntype="System.Object">
                <parameters>
                  <parameter name="id" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetXsiType()" attrib="132" returntype="System.Xml.XmlQualifiedName">
                <parameters />
              </method>
              <method name="InitCallbacks()" attrib="1476" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="InitIDs()" attrib="1476" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="IsXmlnsAttribute(System.String)" attrib="132" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ParseWsdlArrayType(System.Xml.XmlAttribute)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="attr" position="0" attrib="0" type="System.Xml.XmlAttribute" />
                </parameters>
              </method>
              <method name="ReadElementQualifiedName()" attrib="132" returntype="System.Xml.XmlQualifiedName">
                <parameters />
              </method>
              <method name="ReadEndElement()" attrib="132" returntype="System.Void">
                <parameters />
              </method>
              <method name="ReadNull()" attrib="132" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadNullableQualifiedName()" attrib="132" returntype="System.Xml.XmlQualifiedName">
                <parameters />
              </method>
              <method name="ReadNullableString()" attrib="132" returntype="System.String">
                <parameters />
              </method>
              <method name="ReadReference(out System.String&amp;)" attrib="132" returntype="System.Boolean">
                <parameters>
                  <parameter name="fixupReference" position="0" attrib="2" type="System.String" direction="out" />
                </parameters>
              </method>
              <method name="ReadReferencedElement()" attrib="132" returntype="System.Object">
                <parameters />
              </method>
              <method name="ReadReferencedElement(System.String, System.String)" attrib="132" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadReferencedElements()" attrib="132" returntype="System.Void">
                <parameters />
              </method>
              <method name="ReadReferencingElement(out System.String&amp;)" attrib="132" returntype="System.Object">
                <parameters>
                  <parameter name="fixupReference" position="0" attrib="2" type="System.String" direction="out" />
                </parameters>
              </method>
              <method name="ReadReferencingElement(System.String, System.String, out System.String&amp;)" attrib="132" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="fixupReference" position="2" attrib="2" type="System.String" direction="out" />
                </parameters>
              </method>
              <method name="ReadReferencingElement(System.String, System.String, System.Boolean, out System.String&amp;)" attrib="132" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="elementCanBeType" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="fixupReference" position="3" attrib="2" type="System.String" direction="out" />
                </parameters>
              </method>
              <method name="ReadSerializable(System.Xml.Serialization.IXmlSerializable)" attrib="132" returntype="System.Xml.Serialization.IXmlSerializable">
                <parameters>
                  <parameter name="serializable" position="0" attrib="0" type="System.Xml.Serialization.IXmlSerializable" />
                </parameters>
              </method>
              <method name="ReadSerializable(System.Xml.Serialization.IXmlSerializable, System.Boolean)" attrib="132" returntype="System.Xml.Serialization.IXmlSerializable">
                <parameters>
                  <parameter name="serializable" position="0" attrib="0" type="System.Xml.Serialization.IXmlSerializable" />
                  <parameter name="wrappedAny" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ReadString(System.String)" attrib="132" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadString(System.String, System.Boolean)" attrib="132" returntype="System.String">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="trim" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ReadTypedNull(System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Object">
                <attributes />
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="ReadTypedPrimitive(System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Object">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="ReadXmlDocument(System.Boolean)" attrib="132" returntype="System.Xml.XmlDocument">
                <parameters>
                  <parameter name="wrapped" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ReadXmlNode(System.Boolean)" attrib="132" returntype="System.Xml.XmlNode">
                <parameters>
                  <parameter name="wrapped" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Referenced(System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ResolveDynamicAssembly(System.String)" attrib="148" static="true" returntype="System.Reflection.Assembly">
                <attributes />
                <parameters>
                  <parameter name="assemblyFullName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ShrinkArray(System.Array, System.Int32, System.Type, System.Boolean)" attrib="132" returntype="System.Array">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Array" />
                  <parameter name="length" position="1" attrib="0" type="System.Int32" />
                  <parameter name="elementType" position="2" attrib="0" type="System.Type" />
                  <parameter name="isNullable" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToByteArrayBase64(System.Boolean)" attrib="132" returntype="System.Byte[]">
                <parameters>
                  <parameter name="isNull" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToByteArrayBase64(System.String)" attrib="148" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToByteArrayHex(System.Boolean)" attrib="132" returntype="System.Byte[]">
                <parameters>
                  <parameter name="isNull" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToByteArrayHex(System.String)" attrib="148" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToChar(System.String)" attrib="148" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDate(System.String)" attrib="148" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDateTime(System.String)" attrib="148" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToEnum(System.String, System.Collections.Hashtable, System.String)" attrib="148" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="h" position="1" attrib="0" type="System.Collections.Hashtable" />
                  <parameter name="typeName" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToTime(System.String)" attrib="148" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToXmlNCName(System.String)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToXmlName(System.String)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToXmlNmToken(System.String)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToXmlNmTokens(System.String)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToXmlQualifiedName(System.String)" attrib="132" returntype="System.Xml.XmlQualifiedName">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="UnknownAttribute(System.Object, System.Xml.XmlAttribute)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                  <parameter name="attr" position="1" attrib="0" type="System.Xml.XmlAttribute" />
                </parameters>
              </method>
              <method name="UnknownAttribute(System.Object, System.Xml.XmlAttribute, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                  <parameter name="attr" position="1" attrib="0" type="System.Xml.XmlAttribute" />
                  <parameter name="qnames" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="UnknownElement(System.Object, System.Xml.XmlElement)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                  <parameter name="elem" position="1" attrib="0" type="System.Xml.XmlElement" />
                </parameters>
              </method>
              <method name="UnknownElement(System.Object, System.Xml.XmlElement, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                  <parameter name="elem" position="1" attrib="0" type="System.Xml.XmlElement" />
                  <parameter name="qnames" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="UnknownNode(System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="UnknownNode(System.Object, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                  <parameter name="qnames" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="UnreferencedObject(System.String, System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="id" position="0" attrib="0" type="System.String" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="CollectionFixup" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(System.Object, System.Xml.Serialization.XmlSerializationCollectionFixupCallback, System.Object)" attrib="6278">
                    <parameters>
                      <parameter name="collection" position="0" attrib="0" type="System.Object" />
                      <parameter name="callback" position="1" attrib="0" type="System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />
                      <parameter name="collectionItems" position="2" attrib="0" type="System.Object" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Callback" attrib="0" ptype="System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
                    <methods>
                      <method name="get_Callback()" attrib="2182" returntype="System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Collection" attrib="0" ptype="System.Object">
                    <methods>
                      <method name="get_Collection()" attrib="2182" returntype="System.Object">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="CollectionItems" attrib="0" ptype="System.Object">
                    <methods>
                      <method name="get_CollectionItems()" attrib="2182" returntype="System.Object">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
              </class>
              <class name="Fixup" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(System.Object, System.Xml.Serialization.XmlSerializationFixupCallback, System.Int32)" attrib="6278">
                    <parameters>
                      <parameter name="o" position="0" attrib="0" type="System.Object" />
                      <parameter name="callback" position="1" attrib="0" type="System.Xml.Serialization.XmlSerializationFixupCallback" />
                      <parameter name="count" position="2" attrib="0" type="System.Int32" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Object, System.Xml.Serialization.XmlSerializationFixupCallback, System.String[])" attrib="6278">
                    <parameters>
                      <parameter name="o" position="0" attrib="0" type="System.Object" />
                      <parameter name="callback" position="1" attrib="0" type="System.Xml.Serialization.XmlSerializationFixupCallback" />
                      <parameter name="ids" position="2" attrib="0" type="System.String[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Callback" attrib="0" ptype="System.Xml.Serialization.XmlSerializationFixupCallback">
                    <methods>
                      <method name="get_Callback()" attrib="2182" returntype="System.Xml.Serialization.XmlSerializationFixupCallback">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Ids" attrib="0" ptype="System.String[]">
                    <methods>
                      <method name="get_Ids()" attrib="2182" returntype="System.String[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Source" attrib="0" ptype="System.Object">
                    <methods>
                      <method name="get_Source()" attrib="2182" returntype="System.Object">
                        <parameters />
                      </method>
                      <method name="set_Source(System.Object)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Object" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
              </class>
            </classes>
          </class>
          <class name="XmlSerializationWriteCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSerializationWriter" type="class" base="System.Xml.Serialization.XmlSerializationGeneratedCode" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="EscapeName" attrib="0" ptype="System.Boolean">
                <attributes />
                <methods>
                  <method name="get_EscapeName()" attrib="2180" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_EscapeName(System.Boolean)" attrib="2180" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespaces" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Namespaces()" attrib="2180" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                  <method name="set_Namespaces(System.Collections.ArrayList)" attrib="2180" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Collections.ArrayList" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Writer" attrib="0" ptype="System.Xml.XmlWriter">
                <methods>
                  <method name="get_Writer()" attrib="2180" returntype="System.Xml.XmlWriter">
                    <parameters />
                  </method>
                  <method name="set_Writer(System.Xml.XmlWriter)" attrib="2180" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlWriter" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddWriteCallback(System.Type, System.String, System.String, System.Xml.Serialization.XmlSerializationWriteCallback)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="typeName" position="1" attrib="0" type="System.String" />
                  <parameter name="typeNs" position="2" attrib="0" type="System.String" />
                  <parameter name="callback" position="3" attrib="0" type="System.Xml.Serialization.XmlSerializationWriteCallback" />
                </parameters>
              </method>
              <method name="CreateChoiceIdentifierValueException(System.String, System.String, System.String, System.String)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="identifier" position="1" attrib="0" type="System.String" />
                  <parameter name="name" position="2" attrib="0" type="System.String" />
                  <parameter name="ns" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateInvalidAnyTypeException(System.Object)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CreateInvalidAnyTypeException(System.Type)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="CreateInvalidChoiceIdentifierValueException(System.String, System.String)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.String" />
                  <parameter name="identifier" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateInvalidEnumValueException(System.Object, System.String)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="typeName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateMismatchChoiceException(System.String, System.String, System.String)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="elementName" position="1" attrib="0" type="System.String" />
                  <parameter name="enumValue" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateUnknownAnyElementException(System.String, System.String)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateUnknownTypeException(System.Object)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CreateUnknownTypeException(System.Type)" attrib="132" returntype="System.Exception">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="FromByteArrayBase64(System.Byte[])" attrib="148" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromByteArrayHex(System.Byte[])" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromChar(System.Char)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="FromDate(System.DateTime)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="FromDateTime(System.DateTime)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="FromEnum(System.Int64, System.String[], System.Int64[])" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                  <parameter name="values" position="1" attrib="0" type="System.String[]" />
                  <parameter name="ids" position="2" attrib="0" type="System.Int64[]" />
                </parameters>
              </method>
              <method name="FromEnum(System.Int64, System.String[], System.Int64[], System.String)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                  <parameter name="values" position="1" attrib="0" type="System.String[]" />
                  <parameter name="ids" position="2" attrib="0" type="System.Int64[]" />
                  <parameter name="typeName" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="FromTime(System.DateTime)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="FromXmlNCName(System.String)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="ncName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="FromXmlName(System.String)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="FromXmlNmToken(System.String)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="nmToken" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="FromXmlNmTokens(System.String)" attrib="148" static="true" returntype="System.String">
                <parameters>
                  <parameter name="nmTokens" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="FromXmlQualifiedName(System.Xml.XmlQualifiedName)" attrib="132" returntype="System.String">
                <parameters>
                  <parameter name="xmlQualifiedName" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="FromXmlQualifiedName(System.Xml.XmlQualifiedName, System.Boolean)" attrib="132" returntype="System.String">
                <attributes />
                <parameters>
                  <parameter name="xmlQualifiedName" position="0" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="ignoreEmpty" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="InitCallbacks()" attrib="1476" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ResolveDynamicAssembly(System.String)" attrib="148" static="true" returntype="System.Reflection.Assembly">
                <attributes />
                <parameters>
                  <parameter name="assemblyFullName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TopLevelElement()" attrib="132" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteAttribute(System.String, System.Byte[])" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="WriteAttribute(System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteAttribute(System.String, System.String, System.Byte[])" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="WriteAttribute(System.String, System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteAttribute(System.String, System.String, System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteElementEncoded(System.Xml.XmlNode, System.String, System.String, System.Boolean, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                  <parameter name="isNullable" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="any" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteElementLiteral(System.Xml.XmlNode, System.String, System.String, System.Boolean, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                  <parameter name="isNullable" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="any" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteElementQualifiedName(System.String, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteElementQualifiedName(System.String, System.String, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteElementQualifiedName(System.String, System.Xml.XmlQualifiedName, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="xsiType" position="2" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteElementQualifiedName(System.String, System.String, System.Xml.XmlQualifiedName, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteElementString(System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteElementString(System.String, System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteElementString(System.String, System.String, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="xsiType" position="2" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteElementString(System.String, System.String, System.String, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteElementStringRaw(System.String, System.Byte[])" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="WriteElementStringRaw(System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteElementStringRaw(System.String, System.Byte[], System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="xsiType" position="2" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteElementStringRaw(System.String, System.String, System.Byte[])" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="WriteElementStringRaw(System.String, System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteElementStringRaw(System.String, System.String, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="xsiType" position="2" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteElementStringRaw(System.String, System.String, System.Byte[], System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteElementStringRaw(System.String, System.String, System.String, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteEmptyTag(System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteEmptyTag(System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteEndElement()" attrib="132" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteEndElement(System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteId(System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="xmlns" position="0" attrib="0" type="System.Xml.Serialization.XmlSerializerNamespaces" />
                </parameters>
              </method>
              <method name="WriteNullTagEncoded(System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNullTagEncoded(System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNullTagLiteral(System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNullTagLiteral(System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNullableQualifiedNameEncoded(System.String, System.String, System.Xml.XmlQualifiedName, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Xml.XmlQualifiedName" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteNullableQualifiedNameLiteral(System.String, System.String, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteNullableStringEncoded(System.String, System.String, System.String, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteNullableStringEncodedRaw(System.String, System.String, System.Byte[], System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteNullableStringEncodedRaw(System.String, System.String, System.String, System.Xml.XmlQualifiedName)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.Xml.XmlQualifiedName" />
                </parameters>
              </method>
              <method name="WriteNullableStringLiteral(System.String, System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteNullableStringLiteralRaw(System.String, System.String, System.Byte[])" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="WriteNullableStringLiteralRaw(System.String, System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WritePotentiallyReferencingElement(System.String, System.String, System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WritePotentiallyReferencingElement(System.String, System.String, System.Object, System.Type)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                  <parameter name="ambientType" position="3" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="WritePotentiallyReferencingElement(System.String, System.String, System.Object, System.Type, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                  <parameter name="ambientType" position="3" attrib="0" type="System.Type" />
                  <parameter name="suppressReference" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WritePotentiallyReferencingElement(System.String, System.String, System.Object, System.Type, System.Boolean, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                  <parameter name="ambientType" position="3" attrib="0" type="System.Type" />
                  <parameter name="suppressReference" position="4" attrib="0" type="System.Boolean" />
                  <parameter name="isNullable" position="5" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteReferencedElements()" attrib="132" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteReferencingElement(System.String, System.String, System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteReferencingElement(System.String, System.String, System.Object, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                  <parameter name="isNullable" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteRpcResult(System.String, System.String)" attrib="132" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteSerializable(System.Xml.Serialization.IXmlSerializable, System.String, System.String, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="serializable" position="0" attrib="0" type="System.Xml.Serialization.IXmlSerializable" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                  <parameter name="isNullable" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteSerializable(System.Xml.Serialization.IXmlSerializable, System.String, System.String, System.Boolean, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="serializable" position="0" attrib="0" type="System.Xml.Serialization.IXmlSerializable" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="ns" position="2" attrib="0" type="System.String" />
                  <parameter name="isNullable" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="wrapped" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteStartDocument()" attrib="132" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteStartElement(System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartElement(System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteStartElement(System.String, System.String, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="writePrefixed" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteStartElement(System.String, System.String, System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteStartElement(System.String, System.String, System.Object, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                  <parameter name="writePrefixed" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteStartElement(System.String, System.String, System.Object, System.Boolean, System.Xml.Serialization.XmlSerializerNamespaces)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                  <parameter name="writePrefixed" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="xmlns" position="4" attrib="0" type="System.Xml.Serialization.XmlSerializerNamespaces" />
                </parameters>
              </method>
              <method name="WriteTypedPrimitive(System.String, System.String, System.Object, System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                  <parameter name="o" position="2" attrib="0" type="System.Object" />
                  <parameter name="xsiType" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteValue(System.Byte[])" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="WriteValue(System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteXmlAttribute(System.Xml.XmlNode)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                </parameters>
              </method>
              <method name="WriteXmlAttribute(System.Xml.XmlNode, System.Object)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XmlNode" />
                  <parameter name="container" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteXsiType(System.String, System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSerializer" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.Serialization.XmlTypeMapping)" attrib="6278">
                <parameters>
                  <parameter name="xmlTypeMapping" position="0" attrib="0" type="System.Xml.Serialization.XmlTypeMapping" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type, System.String)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="defaultNamespace" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type, System.Type[])" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="extraTypes" position="1" attrib="0" type="System.Type[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type, System.Xml.Serialization.XmlAttributeOverrides)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="overrides" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type, System.Xml.Serialization.XmlRootAttribute)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="root" position="1" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type[], System.Xml.Serialization.XmlRootAttribute, System.String)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="overrides" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                  <parameter name="extraTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="root" position="3" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                  <parameter name="defaultNamespace" position="4" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type[], System.Xml.Serialization.XmlRootAttribute, System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="overrides" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                  <parameter name="extraTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="root" position="3" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                  <parameter name="defaultNamespace" position="4" attrib="0" type="System.String" />
                  <parameter name="location" position="5" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type[], System.Xml.Serialization.XmlRootAttribute, System.String, System.String, System.Security.Policy.Evidence)" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="overrides" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                  <parameter name="extraTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="root" position="3" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                  <parameter name="defaultNamespace" position="4" attrib="0" type="System.String" />
                  <parameter name="location" position="5" attrib="0" type="System.String" />
                  <parameter name="evidence" position="6" attrib="0" type="System.Security.Policy.Evidence" />
                </parameters>
              </constructor>
            </constructors>
            <events>
              <event name="UnknownAttribute" attrib="0" eventtype="System.Xml.Serialization.XmlAttributeEventHandler" />
              <event name="UnknownElement" attrib="0" eventtype="System.Xml.Serialization.XmlElementEventHandler" />
              <event name="UnknownNode" attrib="0" eventtype="System.Xml.Serialization.XmlNodeEventHandler" />
              <event name="UnreferencedObject" attrib="0" eventtype="System.Xml.Serialization.UnreferencedObjectEventHandler" />
            </events>
            <methods>
              <method name="CanDeserialize(System.Xml.XmlReader)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="xmlReader" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="CreateReader()" attrib="452" virtual="true" returntype="System.Xml.Serialization.XmlSerializationReader">
                <parameters />
              </method>
              <method name="CreateWriter()" attrib="452" virtual="true" returntype="System.Xml.Serialization.XmlSerializationWriter">
                <parameters />
              </method>
              <method name="Deserialize(System.IO.Stream)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Deserialize(System.IO.TextReader)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="textReader" position="0" attrib="0" type="System.IO.TextReader" />
                </parameters>
              </method>
              <method name="Deserialize(System.Xml.Serialization.XmlSerializationReader)" attrib="452" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.Serialization.XmlSerializationReader" />
                </parameters>
              </method>
              <method name="Deserialize(System.Xml.XmlReader)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="xmlReader" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="Deserialize(System.Xml.XmlReader, System.String)" attrib="134" returntype="System.Object">
                <attributes />
                <parameters>
                  <parameter name="xmlReader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="encodingStyle" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Deserialize(System.Xml.XmlReader, System.Xml.Serialization.XmlDeserializationEvents)" attrib="134" returntype="System.Object">
                <attributes />
                <parameters>
                  <parameter name="xmlReader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="events" position="1" attrib="0" type="System.Xml.Serialization.XmlDeserializationEvents" />
                </parameters>
              </method>
              <method name="Deserialize(System.Xml.XmlReader, System.String, System.Xml.Serialization.XmlDeserializationEvents)" attrib="134" returntype="System.Object">
                <attributes />
                <parameters>
                  <parameter name="xmlReader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="encodingStyle" position="1" attrib="0" type="System.String" />
                  <parameter name="events" position="2" attrib="0" type="System.Xml.Serialization.XmlDeserializationEvents" />
                </parameters>
              </method>
              <method name="FromMappings(System.Xml.Serialization.XmlMapping[])" attrib="150" static="true" returntype="System.Xml.Serialization.XmlSerializer[]">
                <parameters>
                  <parameter name="mappings" position="0" attrib="0" type="System.Xml.Serialization.XmlMapping[]" />
                </parameters>
              </method>
              <method name="FromMappings(System.Xml.Serialization.XmlMapping[], System.Security.Policy.Evidence)" attrib="150" static="true" returntype="System.Xml.Serialization.XmlSerializer[]">
                <attributes />
                <parameters>
                  <parameter name="mappings" position="0" attrib="0" type="System.Xml.Serialization.XmlMapping[]" />
                  <parameter name="evidence" position="1" attrib="0" type="System.Security.Policy.Evidence" />
                </parameters>
              </method>
              <method name="FromMappings(System.Xml.Serialization.XmlMapping[], System.Type)" attrib="150" static="true" returntype="System.Xml.Serialization.XmlSerializer[]">
                <attributes />
                <parameters>
                  <parameter name="mappings" position="0" attrib="0" type="System.Xml.Serialization.XmlMapping[]" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="FromTypes(System.Type[])" attrib="150" static="true" returntype="System.Xml.Serialization.XmlSerializer[]">
                <parameters>
                  <parameter name="types" position="0" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="GetXmlSerializerAssemblyName(System.Type)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetXmlSerializerAssemblyName(System.Type, System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="defaultNamespace" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Serialize(System.IO.Stream, System.Object)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Serialize(System.IO.TextWriter, System.Object)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="textWriter" position="0" attrib="0" type="System.IO.TextWriter" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Serialize(System.Object, System.Xml.Serialization.XmlSerializationWriter)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                  <parameter name="writer" position="1" attrib="0" type="System.Xml.Serialization.XmlSerializationWriter" />
                </parameters>
              </method>
              <method name="Serialize(System.Xml.XmlWriter, System.Object)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="xmlWriter" position="0" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Serialize(System.IO.Stream, System.Object, System.Xml.Serialization.XmlSerializerNamespaces)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                  <parameter name="namespaces" position="2" attrib="0" type="System.Xml.Serialization.XmlSerializerNamespaces" />
                </parameters>
              </method>
              <method name="Serialize(System.IO.TextWriter, System.Object, System.Xml.Serialization.XmlSerializerNamespaces)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="textWriter" position="0" attrib="0" type="System.IO.TextWriter" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                  <parameter name="namespaces" position="2" attrib="0" type="System.Xml.Serialization.XmlSerializerNamespaces" />
                </parameters>
              </method>
              <method name="Serialize(System.Xml.XmlWriter, System.Object, System.Xml.Serialization.XmlSerializerNamespaces)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="xmlWriter" position="0" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                  <parameter name="namespaces" position="2" attrib="0" type="System.Xml.Serialization.XmlSerializerNamespaces" />
                </parameters>
              </method>
              <method name="Serialize(System.Xml.XmlWriter, System.Object, System.Xml.Serialization.XmlSerializerNamespaces, System.String)" attrib="134" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="xmlWriter" position="0" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                  <parameter name="namespaces" position="2" attrib="0" type="System.Xml.Serialization.XmlSerializerNamespaces" />
                  <parameter name="encodingStyle" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Serialize(System.Xml.XmlWriter, System.Object, System.Xml.Serialization.XmlSerializerNamespaces, System.String, System.String)" attrib="134" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="xmlWriter" position="0" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="o" position="1" attrib="0" type="System.Object" />
                  <parameter name="namespaces" position="2" attrib="0" type="System.Xml.Serialization.XmlSerializerNamespaces" />
                  <parameter name="encodingStyle" position="3" attrib="0" type="System.String" />
                  <parameter name="id" position="4" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSerializerAssemblyAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="Interface, Enum, Struct, Class" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="assemblyName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="assemblyName" position="0" attrib="0" type="System.String" />
                  <parameter name="codeBase" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AssemblyName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_AssemblyName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_AssemblyName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CodeBase" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_CodeBase()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_CodeBase(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlSerializerFactory" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="CreateSerializer(System.Type)" attrib="134" returntype="System.Xml.Serialization.XmlSerializer">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="CreateSerializer(System.Xml.Serialization.XmlTypeMapping)" attrib="134" returntype="System.Xml.Serialization.XmlSerializer">
                <parameters>
                  <parameter name="xmlTypeMapping" position="0" attrib="0" type="System.Xml.Serialization.XmlTypeMapping" />
                </parameters>
              </method>
              <method name="CreateSerializer(System.Type, System.String)" attrib="134" returntype="System.Xml.Serialization.XmlSerializer">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="defaultNamespace" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateSerializer(System.Type, System.Type[])" attrib="134" returntype="System.Xml.Serialization.XmlSerializer">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="extraTypes" position="1" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="CreateSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides)" attrib="134" returntype="System.Xml.Serialization.XmlSerializer">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="overrides" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                </parameters>
              </method>
              <method name="CreateSerializer(System.Type, System.Xml.Serialization.XmlRootAttribute)" attrib="134" returntype="System.Xml.Serialization.XmlSerializer">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="root" position="1" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                </parameters>
              </method>
              <method name="CreateSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type[], System.Xml.Serialization.XmlRootAttribute, System.String)" attrib="134" returntype="System.Xml.Serialization.XmlSerializer">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="overrides" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                  <parameter name="extraTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="root" position="3" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                  <parameter name="defaultNamespace" position="4" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type[], System.Xml.Serialization.XmlRootAttribute, System.String, System.String)" attrib="134" returntype="System.Xml.Serialization.XmlSerializer">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="overrides" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                  <parameter name="extraTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="root" position="3" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                  <parameter name="defaultNamespace" position="4" attrib="0" type="System.String" />
                  <parameter name="location" position="5" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type[], System.Xml.Serialization.XmlRootAttribute, System.String, System.String, System.Security.Policy.Evidence)" attrib="134" returntype="System.Xml.Serialization.XmlSerializer">
                <attributes />
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="overrides" position="1" attrib="0" type="System.Xml.Serialization.XmlAttributeOverrides" />
                  <parameter name="extraTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="root" position="3" attrib="0" type="System.Xml.Serialization.XmlRootAttribute" />
                  <parameter name="defaultNamespace" position="4" attrib="0" type="System.String" />
                  <parameter name="location" position="5" attrib="0" type="System.String" />
                  <parameter name="evidence" position="6" attrib="0" type="System.Security.Policy.Evidence" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSerializerImplementation" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="ReadMethods" attrib="0" ptype="System.Collections.Hashtable">
                <methods>
                  <method name="get_ReadMethods()" attrib="2502" virtual="true" returntype="System.Collections.Hashtable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Reader" attrib="0" ptype="System.Xml.Serialization.XmlSerializationReader">
                <methods>
                  <method name="get_Reader()" attrib="2502" virtual="true" returntype="System.Xml.Serialization.XmlSerializationReader">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypedSerializers" attrib="0" ptype="System.Collections.Hashtable">
                <methods>
                  <method name="get_TypedSerializers()" attrib="2502" virtual="true" returntype="System.Collections.Hashtable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="WriteMethods" attrib="0" ptype="System.Collections.Hashtable">
                <methods>
                  <method name="get_WriteMethods()" attrib="2502" virtual="true" returntype="System.Collections.Hashtable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Writer" attrib="0" ptype="System.Xml.Serialization.XmlSerializationWriter">
                <methods>
                  <method name="get_Writer()" attrib="2502" virtual="true" returntype="System.Xml.Serialization.XmlSerializationWriter">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CanSerialize(System.Type)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetSerializer(System.Type)" attrib="454" virtual="true" returntype="System.Xml.Serialization.XmlSerializer">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XmlSerializerNamespaces" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Xml.Serialization.XmlSerializerNamespaces)" attrib="6278">
                <parameters>
                  <parameter name="namespaces" position="0" attrib="0" type="System.Xml.Serialization.XmlSerializerNamespaces" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlQualifiedName[])" attrib="6278">
                <parameters>
                  <parameter name="namespaces" position="0" attrib="0" type="System.Xml.XmlQualifiedName[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="ns" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToArray()" attrib="134" returntype="System.Xml.XmlQualifiedName[]">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XmlSerializerVersionAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="Assembly" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ParentAssemblyId" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ParentAssemblyId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ParentAssemblyId(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Type" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_Type(System.Type)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Version(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlTextAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="ReturnValue, Parameter, Field, Property" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DataType" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DataType()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_DataType(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Type" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_Type(System.Type)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlTypeAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="ValidOn" value="Interface, Enum, Struct, Class" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AnonymousType" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_AnonymousType()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_AnonymousType(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IncludeInSchema" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IncludeInSchema()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IncludeInSchema(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Namespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Namespace(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TypeName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TypeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_TypeName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XmlTypeMapping" type="class" base="System.Xml.Serialization.XmlMapping" charset="Ansi" layout="Auto">
            <properties>
              <property name="TypeFullName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TypeFullName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TypeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XsdTypeName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XsdTypeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XsdTypeNamespace" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XsdTypeNamespace()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Xml.XPath">
        <classes>
          <class name="IXPathNavigable" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="CreateNavigator()" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XPathDocument" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IO.Stream)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.TextReader)" attrib="6278">
                <parameters>
                  <parameter name="textReader" position="0" attrib="0" type="System.IO.TextReader" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlReader)" attrib="6278">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Xml.XmlSpace)" attrib="6278">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.String" />
                  <parameter name="space" position="1" attrib="0" type="System.Xml.XmlSpace" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Xml.XmlReader, System.Xml.XmlSpace)" attrib="6278">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="space" position="1" attrib="0" type="System.Xml.XmlSpace" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="CreateNavigator()" attrib="486" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XPathException" type="class" base="System.SystemException" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="16582" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XPathExpression" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Expression" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Expression()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnType" attrib="0" ptype="System.Xml.XPath.XPathResultType">
                <methods>
                  <method name="get_ReturnType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathResultType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddSort(System.Object, System.Collections.IComparer)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="expr" position="0" attrib="0" type="System.Object" />
                  <parameter name="comparer" position="1" attrib="0" type="System.Collections.IComparer" />
                </parameters>
              </method>
              <method name="AddSort(System.Object, System.Xml.XPath.XmlSortOrder, System.Xml.XPath.XmlCaseOrder, System.String, System.Xml.XPath.XmlDataType)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="expr" position="0" attrib="0" type="System.Object" />
                  <parameter name="order" position="1" attrib="0" type="System.Xml.XPath.XmlSortOrder" />
                  <parameter name="caseOrder" position="2" attrib="0" type="System.Xml.XPath.XmlCaseOrder" />
                  <parameter name="lang" position="3" attrib="0" type="System.String" />
                  <parameter name="dataType" position="4" attrib="0" type="System.Xml.XPath.XmlDataType" />
                </parameters>
              </method>
              <method name="Clone()" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathExpression">
                <parameters />
              </method>
              <method name="Compile(System.String)" attrib="150" static="true" returntype="System.Xml.XPath.XPathExpression">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Compile(System.String, System.Xml.IXmlNamespaceResolver)" attrib="150" static="true" returntype="System.Xml.XPath.XPathExpression">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                  <parameter name="nsResolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="SetContext(System.Xml.IXmlNamespaceResolver)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="nsResolver" position="0" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="SetContext(System.Xml.XmlNamespaceManager)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="nsManager" position="0" attrib="0" type="System.Xml.XmlNamespaceManager" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XPathItem" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsNode" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNode()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypedValue" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_TypedValue()" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Value()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsBoolean" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_ValueAsBoolean()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsDateTime" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_ValueAsDateTime()" attrib="3526" abstract="true" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsDouble" attrib="0" ptype="System.Double">
                <methods>
                  <method name="get_ValueAsDouble()" attrib="3526" abstract="true" virtual="true" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsInt" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ValueAsInt()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsLong" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_ValueAsLong()" attrib="3526" abstract="true" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueType" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_ValueType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlType" attrib="0" ptype="System.Xml.Schema.XmlSchemaType">
                <methods>
                  <method name="get_XmlType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.Schema.XmlSchemaType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ValueAs(System.Type)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ValueAs(System.Type, System.Xml.IXmlNamespaceResolver)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                  <parameter name="nsResolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XPathNamespaceScope" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="All" attrib="32854" fieldtype="System.Xml.XPath.XPathNamespaceScope" value="0" />
              <field name="ExcludeXml" attrib="32854" fieldtype="System.Xml.XPath.XPathNamespaceScope" value="1" />
              <field name="Local" attrib="32854" fieldtype="System.Xml.XPath.XPathNamespaceScope" value="2" />
            </fields>
          </class>
          <class name="XPathNavigator" type="class" base="System.Xml.XPath.XPathItem" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute">
                <properties>
                  <property name="Value" value="{debuggerDisplayProxy}" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Xml.IXmlNamespaceResolver" />
              <interface name="System.Xml.XPath.IXPathNavigable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="BaseURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_BaseURI()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanEdit" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanEdit()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasAttributes" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasAttributes()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasChildren" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasChildren()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InnerXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_InnerXml()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_InnerXml(System.String)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsEmptyElement" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEmptyElement()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNode" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsNode()" attrib="2278" virtual="true" sealed="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_LocalName()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NameTable" attrib="0" ptype="System.Xml.XmlNameTable">
                <methods>
                  <method name="get_NameTable()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XmlNameTable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NamespaceURI" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_NamespaceURI()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NavigatorComparer" attrib="0" ptype="System.Collections.IEqualityComparer">
                <methods>
                  <method name="get_NavigatorComparer()" attrib="2198" static="true" returntype="System.Collections.IEqualityComparer">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NodeType" attrib="0" ptype="System.Xml.XPath.XPathNodeType">
                <methods>
                  <method name="get_NodeType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathNodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OuterXml" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_OuterXml()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_OuterXml(System.String)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Prefix" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Prefix()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SchemaInfo" attrib="0" ptype="System.Xml.Schema.IXmlSchemaInfo">
                <methods>
                  <method name="get_SchemaInfo()" attrib="2502" virtual="true" returntype="System.Xml.Schema.IXmlSchemaInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypedValue" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_TypedValue()" attrib="2246" virtual="true" is-override="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnderlyingObject" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_UnderlyingObject()" attrib="2502" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsBoolean" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_ValueAsBoolean()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsDateTime" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_ValueAsDateTime()" attrib="2246" virtual="true" is-override="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsDouble" attrib="0" ptype="System.Double">
                <methods>
                  <method name="get_ValueAsDouble()" attrib="2246" virtual="true" is-override="true" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsInt" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ValueAsInt()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueAsLong" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_ValueAsLong()" attrib="2246" virtual="true" is-override="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValueType" attrib="0" ptype="System.Type">
                <methods>
                  <method name="get_ValueType()" attrib="2246" virtual="true" is-override="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlLang" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_XmlLang()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="XmlType" attrib="0" ptype="System.Xml.Schema.XmlSchemaType">
                <methods>
                  <method name="get_XmlType()" attrib="2246" virtual="true" is-override="true" returntype="System.Xml.Schema.XmlSchemaType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AppendChild()" attrib="454" virtual="true" returntype="System.Xml.XmlWriter">
                <parameters />
              </method>
              <method name="AppendChild(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="AppendChild(System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="AppendChild(System.Xml.XmlReader)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="AppendChildElement(System.String, System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CheckValidity(System.Xml.Schema.XmlSchemaSet, System.Xml.Schema.ValidationEventHandler)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="schemas" position="0" attrib="0" type="System.Xml.Schema.XmlSchemaSet" />
                  <parameter name="validationEventHandler" position="1" attrib="0" type="System.Xml.Schema.ValidationEventHandler" />
                </parameters>
              </method>
              <method name="Clone()" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters />
              </method>
              <method name="ComparePosition(System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Xml.XmlNodeOrder">
                <parameters>
                  <parameter name="nav" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="Compile(System.String)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathExpression">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateAttribute(System.String, System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateAttributes()" attrib="454" virtual="true" returntype="System.Xml.XmlWriter">
                <parameters />
              </method>
              <method name="CreateNavigator()" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters />
              </method>
              <method name="DeleteRange(System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="lastSiblingToDelete" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="DeleteSelf()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Evaluate(System.String)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Evaluate(System.Xml.XPath.XPathExpression)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="expr" position="0" attrib="0" type="System.Xml.XPath.XPathExpression" />
                </parameters>
              </method>
              <method name="Evaluate(System.String, System.Xml.IXmlNamespaceResolver)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="Evaluate(System.Xml.XPath.XPathExpression, System.Xml.XPath.XPathNodeIterator)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="expr" position="0" attrib="0" type="System.Xml.XPath.XPathExpression" />
                  <parameter name="context" position="1" attrib="0" type="System.Xml.XPath.XPathNodeIterator" />
                </parameters>
              </method>
              <method name="GetAttribute(System.String, System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetNamespace(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetNamespacesInScope(System.Xml.XmlNamespaceScope)" attrib="454" virtual="true" returntype="System.Collections.Generic.IDictionary`2[System.String,System.String]">
                <parameters>
                  <parameter name="scope" position="0" attrib="0" type="System.Xml.XmlNamespaceScope" />
                </parameters>
              </method>
              <method name="InsertAfter()" attrib="454" virtual="true" returntype="System.Xml.XmlWriter">
                <parameters />
              </method>
              <method name="InsertAfter(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newSibling" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="InsertAfter(System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newSibling" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="InsertAfter(System.Xml.XmlReader)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newSibling" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="InsertBefore()" attrib="454" virtual="true" returntype="System.Xml.XmlWriter">
                <parameters />
              </method>
              <method name="InsertBefore(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newSibling" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="InsertBefore(System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newSibling" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="InsertBefore(System.Xml.XmlReader)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newSibling" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="InsertElementAfter(System.String, System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="InsertElementBefore(System.String, System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsDescendant(System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="nav" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="IsSamePosition(System.Xml.XPath.XPathNavigator)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="LookupNamespace(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LookupPrefix(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="namespaceURI" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Matches(System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Matches(System.Xml.XPath.XPathExpression)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="expr" position="0" attrib="0" type="System.Xml.XPath.XPathExpression" />
                </parameters>
              </method>
              <method name="MoveTo(System.Xml.XPath.XPathNavigator)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="MoveToAttribute(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToChild(System.Xml.XPath.XPathNodeType)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XPath.XPathNodeType" />
                </parameters>
              </method>
              <method name="MoveToChild(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToFirst()" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToFirstAttribute()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToFirstChild()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToFirstNamespace()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="namespaceScope" position="0" attrib="0" type="System.Xml.XPath.XPathNamespaceScope" />
                </parameters>
              </method>
              <method name="MoveToFollowing(System.Xml.XPath.XPathNodeType)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XPath.XPathNodeType" />
                </parameters>
              </method>
              <method name="MoveToFollowing(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToFollowing(System.Xml.XPath.XPathNodeType, System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XPath.XPathNodeType" />
                  <parameter name="end" position="1" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="MoveToFollowing(System.String, System.String, System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                  <parameter name="end" position="2" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="MoveToId(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="id" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToNamespace(System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToNext()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToNext(System.Xml.XPath.XPathNodeType)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XPath.XPathNodeType" />
                </parameters>
              </method>
              <method name="MoveToNext(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="localName" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="MoveToNextAttribute()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToNextNamespace()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="namespaceScope" position="0" attrib="0" type="System.Xml.XPath.XPathNamespaceScope" />
                </parameters>
              </method>
              <method name="MoveToParent()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToPrevious()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MoveToRoot()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="PrependChild()" attrib="454" virtual="true" returntype="System.Xml.XmlWriter">
                <parameters />
              </method>
              <method name="PrependChild(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="PrependChild(System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="PrependChild(System.Xml.XmlReader)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newChild" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="PrependChildElement(System.String, System.String, System.String, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="localName" position="1" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="2" attrib="0" type="System.String" />
                  <parameter name="value" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadSubtree()" attrib="454" virtual="true" returntype="System.Xml.XmlReader">
                <parameters />
              </method>
              <method name="ReplaceRange(System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Xml.XmlWriter">
                <parameters>
                  <parameter name="lastSiblingToReplace" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="ReplaceSelf(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newNode" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReplaceSelf(System.Xml.XPath.XPathNavigator)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newNode" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="ReplaceSelf(System.Xml.XmlReader)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="newNode" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="Select(System.String)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Select(System.Xml.XPath.XPathExpression)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters>
                  <parameter name="expr" position="0" attrib="0" type="System.Xml.XPath.XPathExpression" />
                </parameters>
              </method>
              <method name="Select(System.String, System.Xml.IXmlNamespaceResolver)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="SelectAncestors(System.Xml.XPath.XPathNodeType, System.Boolean)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XPath.XPathNodeType" />
                  <parameter name="matchSelf" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SelectAncestors(System.String, System.String, System.Boolean)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                  <parameter name="matchSelf" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SelectChildren(System.Xml.XPath.XPathNodeType)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XPath.XPathNodeType" />
                </parameters>
              </method>
              <method name="SelectChildren(System.String, System.String)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SelectDescendants(System.Xml.XPath.XPathNodeType, System.Boolean)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Xml.XPath.XPathNodeType" />
                  <parameter name="matchSelf" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SelectDescendants(System.String, System.String, System.Boolean)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceURI" position="1" attrib="0" type="System.String" />
                  <parameter name="matchSelf" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SelectSingleNode(System.String)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SelectSingleNode(System.Xml.XPath.XPathExpression)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Xml.XPath.XPathExpression" />
                </parameters>
              </method>
              <method name="SelectSingleNode(System.String, System.Xml.IXmlNamespaceResolver)" attrib="454" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                <parameters>
                  <parameter name="xpath" position="0" attrib="0" type="System.String" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="SetTypedValue(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="typedValue" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="SetValue(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ValueAs(System.Type, System.Xml.IXmlNamespaceResolver)" attrib="198" virtual="true" is-override="true" returntype="System.Object">
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                  <parameter name="nsResolver" position="1" attrib="0" type="System.Xml.IXmlNamespaceResolver" />
                </parameters>
              </method>
              <method name="WriteSubtree(System.Xml.XmlWriter)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="writer" position="0" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XPathNodeIterator" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute">
                <properties>
                  <property name="Value" value="Position={CurrentPosition}, Current={debuggerDisplayProxy}" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Current" attrib="0" ptype="System.Xml.XPath.XPathNavigator">
                <methods>
                  <method name="get_Current()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathNavigator">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CurrentPosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_CurrentPosition()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathNodeIterator">
                <parameters />
              </method>
              <method name="GetEnumerator()" attrib="454" virtual="true" returntype="System.Collections.IEnumerator">
                <parameters />
              </method>
              <method name="MoveNext()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="XPathNodeType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="All" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="9" />
              <field name="Attribute" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="2" />
              <field name="Comment" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="8" />
              <field name="Element" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="1" />
              <field name="Namespace" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="3" />
              <field name="ProcessingInstruction" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="7" />
              <field name="Root" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="0" />
              <field name="SignificantWhitespace" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="5" />
              <field name="Text" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="4" />
              <field name="Whitespace" attrib="32854" fieldtype="System.Xml.XPath.XPathNodeType" value="6" />
            </fields>
          </class>
          <class name="XPathResultType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Any" attrib="32854" fieldtype="System.Xml.XPath.XPathResultType" value="5" />
              <field name="Boolean" attrib="32854" fieldtype="System.Xml.XPath.XPathResultType" value="2" />
              <field name="Error" attrib="32854" fieldtype="System.Xml.XPath.XPathResultType" value="6" />
              <field name="Navigator" attrib="32854" fieldtype="System.Xml.XPath.XPathResultType" value="1" />
              <field name="NodeSet" attrib="32854" fieldtype="System.Xml.XPath.XPathResultType" value="3" />
              <field name="Number" attrib="32854" fieldtype="System.Xml.XPath.XPathResultType" value="0" />
              <field name="String" attrib="32854" fieldtype="System.Xml.XPath.XPathResultType" value="1" />
            </fields>
          </class>
          <class name="XmlCaseOrder" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="LowerFirst" attrib="32854" fieldtype="System.Xml.XPath.XmlCaseOrder" value="2" />
              <field name="None" attrib="32854" fieldtype="System.Xml.XPath.XmlCaseOrder" value="0" />
              <field name="UpperFirst" attrib="32854" fieldtype="System.Xml.XPath.XmlCaseOrder" value="1" />
            </fields>
          </class>
          <class name="XmlDataType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Number" attrib="32854" fieldtype="System.Xml.XPath.XmlDataType" value="2" />
              <field name="Text" attrib="32854" fieldtype="System.Xml.XPath.XmlDataType" value="1" />
            </fields>
          </class>
          <class name="XmlSortOrder" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Ascending" attrib="32854" fieldtype="System.Xml.XPath.XmlSortOrder" value="1" />
              <field name="Descending" attrib="32854" fieldtype="System.Xml.XPath.XmlSortOrder" value="2" />
            </fields>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Xml.XmlConfiguration">
        <classes>
          <class name="XmlReaderSection" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                <properties>
                  <property name="State" value="Never" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="XsltConfigSection" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                <properties>
                  <property name="State" value="Never" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Xml.Xsl">
        <classes>
          <class name="IXsltContextFunction" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="ArgTypes" attrib="0" ptype="System.Xml.XPath.XPathResultType[]">
                <methods>
                  <method name="get_ArgTypes()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathResultType[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Maxargs" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Maxargs()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Minargs" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Minargs()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnType" attrib="0" ptype="System.Xml.XPath.XPathResultType">
                <methods>
                  <method name="get_ReturnType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathResultType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Invoke(System.Xml.Xsl.XsltContext, System.Object[], System.Xml.XPath.XPathNavigator)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="xsltContext" position="0" attrib="0" type="System.Xml.Xsl.XsltContext" />
                  <parameter name="args" position="1" attrib="0" type="System.Object[]" />
                  <parameter name="docContext" position="2" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IXsltContextVariable" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="IsLocal" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsLocal()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsParam" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsParam()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="VariableType" attrib="0" ptype="System.Xml.XPath.XPathResultType">
                <methods>
                  <method name="get_VariableType()" attrib="3526" abstract="true" virtual="true" returntype="System.Xml.XPath.XPathResultType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Evaluate(System.Xml.Xsl.XsltContext)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="xsltContext" position="0" attrib="0" type="System.Xml.Xsl.XsltContext" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XslCompiledTransform" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="enableDebug" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="OutputSettings" attrib="0" ptype="System.Xml.XmlWriterSettings">
                <attributes />
                <methods>
                  <method name="get_OutputSettings()" attrib="2182" returntype="System.Xml.XmlWriterSettings">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Load(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheetUri" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Load(System.Type)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="compiledStylesheet" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XPath.IXPathNavigable)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XmlReader)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="Load(System.Reflection.MethodInfo, System.Byte[], System.Type[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="executeMethod" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="queryData" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="earlyBoundTypes" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="Load(System.String, System.Xml.Xsl.XsltSettings, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheetUri" position="0" attrib="0" type="System.String" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.Xsl.XsltSettings" />
                  <parameter name="stylesheetResolver" position="2" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltSettings, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.Xsl.XsltSettings" />
                  <parameter name="stylesheetResolver" position="2" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XmlReader, System.Xml.Xsl.XsltSettings, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="settings" position="1" attrib="0" type="System.Xml.Xsl.XsltSettings" />
                  <parameter name="stylesheetResolver" position="2" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="inputUri" position="0" attrib="0" type="System.String" />
                  <parameter name="resultsFile" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Transform(System.String, System.Xml.XmlWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="inputUri" position="0" attrib="0" type="System.String" />
                  <parameter name="results" position="1" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.XmlWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="results" position="1" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XmlReader, System.Xml.XmlWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="results" position="1" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Transform(System.String, System.Xml.Xsl.XsltArgumentList, System.IO.Stream)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="inputUri" position="0" attrib="0" type="System.String" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Transform(System.String, System.Xml.Xsl.XsltArgumentList, System.IO.TextWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="inputUri" position="0" attrib="0" type="System.String" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="Transform(System.String, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="inputUri" position="0" attrib="0" type="System.String" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.IO.Stream)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.IO.TextWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XmlReader, System.Xml.Xsl.XsltArgumentList, System.IO.Stream)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XmlReader, System.Xml.Xsl.XsltArgumentList, System.IO.TextWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XmlReader, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlWriter, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="documentResolver" position="3" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XmlReader, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlWriter, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="results" position="2" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="documentResolver" position="3" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XslTransform" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ObsoleteAttribute">
                <properties>
                  <property name="Message" value="This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="XmlResolver" attrib="0" ptype="System.Xml.XmlResolver">
                <methods>
                  <method name="set_XmlResolver(System.Xml.XmlResolver)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Xml.XmlResolver" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Load(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XPath.IXPathNavigable)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XPath.XPathNavigator)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XmlReader)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XmlReader" />
                </parameters>
              </method>
              <method name="Load(System.String, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XPath.IXPathNavigable, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XPath.XPathNavigator, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XmlReader, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XPath.IXPathNavigable, System.Xml.XmlResolver, System.Security.Policy.Evidence)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.XmlResolver" />
                  <parameter name="evidence" position="2" attrib="0" type="System.Security.Policy.Evidence" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XPath.XPathNavigator, System.Xml.XmlResolver, System.Security.Policy.Evidence)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.XmlResolver" />
                  <parameter name="evidence" position="2" attrib="0" type="System.Security.Policy.Evidence" />
                </parameters>
              </method>
              <method name="Load(System.Xml.XmlReader, System.Xml.XmlResolver, System.Security.Policy.Evidence)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="stylesheet" position="0" attrib="0" type="System.Xml.XmlReader" />
                  <parameter name="resolver" position="1" attrib="0" type="System.Xml.XmlResolver" />
                  <parameter name="evidence" position="2" attrib="0" type="System.Security.Policy.Evidence" />
                </parameters>
              </method>
              <method name="Transform(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="inputfile" position="0" attrib="0" type="System.String" />
                  <parameter name="outputfile" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList)" attrib="134" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.XPathNavigator, System.Xml.Xsl.XsltArgumentList)" attrib="134" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                </parameters>
              </method>
              <method name="Transform(System.String, System.String, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="inputfile" position="0" attrib="0" type="System.String" />
                  <parameter name="outputfile" position="1" attrib="0" type="System.String" />
                  <parameter name="resolver" position="2" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.IO.Stream)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.IO.TextWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlResolver)" attrib="134" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="resolver" position="2" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.XPathNavigator, System.Xml.Xsl.XsltArgumentList, System.IO.Stream)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.XPathNavigator, System.Xml.Xsl.XsltArgumentList, System.IO.TextWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.XPathNavigator, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlResolver)" attrib="134" returntype="System.Xml.XmlReader">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="resolver" position="2" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.XPathNavigator, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.Xml.XmlWriter" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.IO.Stream, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.IO.Stream" />
                  <parameter name="resolver" position="3" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.IO.TextWriter, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.IO.TextWriter" />
                  <parameter name="resolver" position="3" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.IXPathNavigable, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlWriter, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.IXPathNavigable" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="resolver" position="3" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.XPathNavigator, System.Xml.Xsl.XsltArgumentList, System.IO.Stream, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.IO.Stream" />
                  <parameter name="resolver" position="3" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.XPathNavigator, System.Xml.Xsl.XsltArgumentList, System.IO.TextWriter, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.IO.TextWriter" />
                  <parameter name="resolver" position="3" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
              <method name="Transform(System.Xml.XPath.XPathNavigator, System.Xml.Xsl.XsltArgumentList, System.Xml.XmlWriter, System.Xml.XmlResolver)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                  <parameter name="args" position="1" attrib="0" type="System.Xml.Xsl.XsltArgumentList" />
                  <parameter name="output" position="2" attrib="0" type="System.Xml.XmlWriter" />
                  <parameter name="resolver" position="3" attrib="0" type="System.Xml.XmlResolver" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XsltArgumentList" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <events>
              <event name="XsltMessageEncountered" attrib="0" eventtype="System.Xml.Xsl.XsltMessageEncounteredEventHandler" />
            </events>
            <methods>
              <method name="AddExtensionObject(System.String, System.Object)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="namespaceUri" position="0" attrib="0" type="System.String" />
                  <parameter name="extension" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="AddParam(System.String, System.String, System.Object)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceUri" position="1" attrib="0" type="System.String" />
                  <parameter name="parameter" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetExtensionObject(System.String)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="namespaceUri" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetParam(System.String, System.String)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceUri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveExtensionObject(System.String)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="namespaceUri" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveParam(System.String, System.String)" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="namespaceUri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XsltCompileException" type="class" base="System.Xml.Xsl.XsltException" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Exception, System.String, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="inner" position="0" attrib="0" type="System.Exception" />
                  <parameter name="sourceUri" position="1" attrib="0" type="System.String" />
                  <parameter name="lineNumber" position="2" attrib="0" type="System.Int32" />
                  <parameter name="linePosition" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="16582" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XsltContext" type="class" base="System.Xml.XmlNamespaceManager" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Xml.IXmlNamespaceResolver" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Xml.NameTable)" attrib="6276">
                <parameters>
                  <parameter name="table" position="0" attrib="0" type="System.Xml.NameTable" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Whitespace" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Whitespace()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CompareDocument(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="baseUri" position="0" attrib="0" type="System.String" />
                  <parameter name="nextbaseUri" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="PreserveWhitespace(System.Xml.XPath.XPathNavigator)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="node" position="0" attrib="0" type="System.Xml.XPath.XPathNavigator" />
                </parameters>
              </method>
              <method name="ResolveFunction(System.String, System.String, System.Xml.XPath.XPathResultType[])" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.Xsl.IXsltContextFunction">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="ArgTypes" position="2" attrib="0" type="System.Xml.XPath.XPathResultType[]" />
                </parameters>
              </method>
              <method name="ResolveVariable(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Xml.Xsl.IXsltContextVariable">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XsltException" type="class" base="System.SystemException" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LineNumber" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LineNumber()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinePosition" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_LinePosition()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Message" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SourceUri" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SourceUri()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="16582" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XsltMessageEncounteredEventArgs" type="class" base="System.EventArgs" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Message()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="XsltMessageEncounteredEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.Xml.Xsl.XsltMessageEncounteredEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Xml.Xsl.XsltMessageEncounteredEventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="XsltSettings" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Boolean, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="enableDocumentFunction" position="0" attrib="0" type="System.Boolean" />
                  <parameter name="enableScript" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Default" attrib="0" ptype="System.Xml.Xsl.XsltSettings">
                <methods>
                  <method name="get_Default()" attrib="2198" static="true" returntype="System.Xml.Xsl.XsltSettings">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EnableDocumentFunction" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_EnableDocumentFunction()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_EnableDocumentFunction(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="EnableScript" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_EnableScript()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_EnableScript(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TrustedXslt" attrib="0" ptype="System.Xml.Xsl.XsltSettings">
                <methods>
                  <method name="get_TrustedXslt()" attrib="2198" static="true" returntype="System.Xml.Xsl.XsltSettings">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Xml.Xsl.Runtime">
        <classes>
          <class name="StringConcat" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.ComponentModel.EditorBrowsableAttribute">
                <properties>
                  <property name="State" value="Never" />
                </properties>
              </attribute>
            </attributes>
            <properties>
              <property name="Delimiter" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Delimiter()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Delimiter(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Concat(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetResult()" attrib="134" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>