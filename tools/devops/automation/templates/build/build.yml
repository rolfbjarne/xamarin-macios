parameters:
- name: gitHubToken
  type: string

steps:
- checkout: self          # https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema#checkout
  clean: true             # Executes: git clean -ffdx && git reset --hard HEAD
  submodules: recursive
  path: s/xamarin-macios

- checkout: templates
  clean: true

- checkout: release-scripts
  clean: true

- powershell: |
    Write-Host "IsMacOS: ${IsMacOS}"
    Write-Host "IsWindows: ${IsWindows}"
    Write-Host "IsLinux: ${IsLinux}"

    if ($IsMacOS -or $IsLinux) {
        Write-Host "HOSTNAME: $(hostname)"
    } else {
        Write-Host "COMPUTERNAME: ${env:COMPUTERNAME}"
    }

    gci env: | format-table -autosize -wrap
  displayName: 'Show Environment'

# was the current xcode deleted (has happened due to a bug in the clean step)? then set the default so 
# that we can call make and generated the provisionator config files.
- bash: |
    XCODE_SELECT=$(xcode-select -p)
    if [[ -d $XCODE_SELECT ]]; then
      echo "Using Xcode in path $XCODE_SELECT"
    else
      echo "Setting Xcode to point to the default location."
      xcode-select -s "/Applications/Xcode.app/Contents/Developer"
    fi
  displayName: 'Ensure Xcode is selected.'

- bash: |
    make -C $(Build.SourcesDirectory)/xamarin-macios/tools/devops build-provisioning.csx
  displayName: 'Generate provisionator files.'

- task: xamops.azdevex.provisionator-task.provisionator@1
  displayName: 'Provision Products & Frameworks'
  inputs:
    provisioning_script: $(Build.SourcesDirectory)/xamarin-macios/tools/devops/build-provisioning.csx
    provisioning_extra_args: '-vvvv'
  timeoutInMinutes: 250

- bash:
    set -x
    set -e
    rm -Rvf $(Build.SourcesDirectory)/package
    time make -C $(Build.SourcesDirectory)/xamarin-macios/ git-clean-all
  displayName: 'Clear results directory'
  timeoutInMinutes: 5

- ${{ if contains(variables['Build.DefinitionName'], 'private') }}:
  - task: PowerShell@2
    displayName: Setup Private Feeds Credentials
    inputs:
      filePath: $(System.DefaultWorkingDirectory)/xamarin-macios/eng/common/SetupNugetSources.ps1
      arguments: -ConfigFile $(System.DefaultWorkingDirectory)/xamarin-macios/NuGet.config -Password $Env:Token
    env:
      Token: $(dn-bot-dnceng-artifact-feeds-rw)

  - bash: |
      set -x
      set -e
      ARGS="--azure-feed \"https://dotnetclimsrc.blob.core.windows.net/dotnet\" -FeedCredential $CREDENTIALS"
      echo "##vso[task.setvariable variable=DOTNET_INSTALL_EXTRA_ARGS]$ARGS"
    env:
      CREDENTIALS: $(dotnetclimsrc-read-sas-token)
    displayName: "Configure install extra args"
    timeoutInMinutes: 5

- bash: |
    set -x
    set -e

    CONFIGURE_FLAGS="$CONFIGURE_FLAGS --enable-install-source"
    echo "Configuration falgs are '$CONFIGURE_FLAGS'"

    cd $(Build.SourcesDirectory)/xamarin-macios/
    ./configure $CONFIGURE_FLAGS
    echo $(cat $(Build.SourcesDirectory)/xamarin-macios/configure.inc)
  env:
    IsPR: $(configuration.IsPR)
  displayName: "Configure build"
  timeoutInMinutes: 5

# Actual build of the project
- bash: |
    set -x
    set -e
    time make -C $(Build.SourcesDirectory)/xamarin-macios/ reset
    time make -C $(Build.SourcesDirectory)/xamarin-macios/ all -j8
    time make -C $(Build.SourcesDirectory)/xamarin-macios/ install -j8
  displayName: 'Build'
  timeoutInMinutes: 45
