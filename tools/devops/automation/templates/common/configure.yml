# This job will parse all the labels present in a PR, will set
# the tags for the build AND will set a number of configuration
# variables to be used by the rest of the projects
parameters:

- name: uploadArtifacts
  type: boolean
  default: false

- name: repositoryAlias
  type: string
  default: self

- name: commit
  type: string
  default: HEAD

- name: uploadPrefix
  type: string
  default: '$(MaciosUploadPrefix)'

- name: testConfigurations
  type: object
  default: []

- name: supportedPlatforms
  type: object
  default: []

- name: testsLabels
  type: string
  default: ''

- name: statusContext
  type: string
  default: ''

- name: testPrefix
  type: string
  default: ''

steps:
- template: checkout.yml
  parameters:
    isPR: true
    repositoryAlias: ${{ parameters.repositoryAlias }}
    commit: ${{ parameters.commit }}

- bash: ./xamarin-macios/tools/devops/automation/scripts/bash/configure-platforms.sh
  name: configure_platforms
  displayName: 'Configure platforms'

- pwsh: |
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY/xamarin-macios/tools/devops/automation/scripts/MaciosCI.psd1
    $jsonPath = Join-Path -Path "$(Build.ArtifactStagingDirectory)" -ChildPath "configuration.json"
    New-BuildConfiguration -ConfigFile $jsonPath
  env:
    GITHUB_TOKEN: $(GitHub.Token)
    ACCESSTOKEN: $(AzDoBuildAccess.Token)
  name: labels
  displayName: 'Configure build'

- bash: ./xamarin-macios/tools/devops/automation/scripts/bash/configure-decisions.sh
  name: decisions
  displayName: 'Make decisions'

- pwsh: $(System.DefaultWorkingDirectory)/xamarin-macios/tools/devops/automation/scripts/show_env.ps1
  displayName: 'Show Environment'

- pwsh: |
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY/xamarin-macios/tools/devops/automation/scripts/MaciosCI.psd1
    gci env: | sort | format-table -autosize -wrap
    $jsonPath = Join-Path -Path "$(Build.ArtifactStagingDirectory)" -ChildPath "configuration.json"
    $testMatrix = Get-TestConfiguration `
      -TestConfigurations "$Env:TEST_CONFIGURATIONS" `
      -SupportedPlatforms "$Env:SUPPORTED_PLATFORMS" `
      -EnabledPlatforms "$Env:CONFIGURE_PLATFORMS_DOTNET_PLATFORMS" `
      -TestsLabels "${{ parameters.testsLabels }}" `
      -StatusContext "${{ parameters.statusContext }}" `
      -TestPrefix "${{ parameters.testPrefix }}"
    # compress the json to remove any newlines, because we can't set the variable below if the json has any newlines
    Write-Host "$testMatrix"
    $testMatrix = $testMatrix | ConvertFrom-Json | ConvertTo-Json -Compress
    Write-Host "##vso[task.setvariable variable=TEST_MATRIX;isOutput=true]$testMatrix"
  name: test_matrix
  displayName: 'Create tests strategy matrix'
  env:
    TEST_CONFIGURATIONS: ${{ convertToJson(parameters.testConfigurations) }}
    SUPPORTED_PLATFORMS: ${{ convertToJson(parameters.supportedPlatforms) }}

- pwsh: |
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY/xamarin-macios/tools/devops/automation/scripts/MaciosCI.psd1
    gci env: | sort | format-table -autosize -wrap
    $apiScanMatrix = Get-APIScanConfiguration -EnabledPlatforms "$Env:CONFIGURE_PLATFORMS_DOTNET_PLATFORMS"
    # compress the json to remove any newlines, because we can't set the variable below if the json has any newlines
    Write-Host "$apiScanMatrix"
    $apiScanMatrix = $apiScanMatrix | ConvertFrom-Json | ConvertTo-Json -Compress
    Write-Host "##vso[task.setvariable variable=APISCAN_MATRIX;isOutput=true]$apiScanMatrix"
  name: apiscan_matrix
  displayName: 'Create APIScan matrix'

# upload config to be consumed later
- ${{ if eq(parameters.uploadArtifacts, true) }}:
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact: configuration.json'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/configuration.json'
      artifactName: '${{ parameters.uploadPrefix }}build-configuration'
    continueOnError: true
