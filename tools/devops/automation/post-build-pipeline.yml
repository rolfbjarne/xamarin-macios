# YAML pipeline for post build operations. 
# This pipeline will trigger automatically after successful completion of the `prepare_release` stage against the specified branches.

trigger: none
pr: none

resources:
  pipelines:
  - pipeline: macios
    source: xamarin-macios-ci
    trigger:
      branches:
      - main
      - release/*
      - net7.0
      - net8.0
      - release-test/* # this is for testing the release pipeline on branches without GitHub's branch protection (so we can automate tests without requiring commits to go through pull requests, etc.).
      stages:
      - prepare_release

parameters:
- name: dotnetPlatforms
  type: object
  default: [ iOS, tvOS, macOS, MacCatalyst ]

jobs:
- job: post_build
  displayName: Post Build
  pool:
    vmImage: windows-2019
  workspace:
    clean: all
  variables:
  - group: Publish-Build-Assets
  steps:
  - checkout: self
    path: s/xamarin-macios
    clean: true

  - task: UseDotNet@2
    inputs:
      version: 6.0.201

  - download: macios
    artifact: AssetManifests

  - script: make -C $(Build.SourcesDirectory)/dotnet version-props
    displayName: make version props

  - ${{ each platform in parameters.dotnetPlatforms }}:
    - powershell: |
        & dotnet build -v:n -t:PushManifestToBuildAssetRegistry `
          -p:BarManifestOutputPath=$(Agent.BuildDirectory)\macios\AssetManifests\${{ platform }} -p:BuildAssetRegistryToken=$(MaestroAccessToken) `
          $(Build.SourcesDirectory)\dotnet\package\Microsoft.${{ platform }}.Ref\package.csproj `
          -bl:$(Build.ArtifactStagingDirectory)\post-build-binlogs\push-bar-manifest-${{ platform }}.binlog
        Write-Host "Bar build id (env): $Env:BARBuildId"
      displayName: 'Push ${{ platform }} manifest to build asset registry'
      # We can't use the global.json located in the root of our repo, because makes it required to use the exact .NET version we're referencing in our eng/Versions.Details.xml file.
      # So in order to not use it, we set the working directory to the parent directory of xamarin-macios.
      workingDirectory: $(Build.SourcesDirectory)\..
    - powershell: |
        $versionEndpoint = 'https://maestro-prod.westus2.cloudapp.azure.com/api/assets/darc-version?api-version=2019-01-16'
        $darcVersion = $(Invoke-WebRequest -Uri $versionEndpoint -UseBasicParsing).Content
        $arcadeServicesSource = 'https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json'
        & dotnet tool update microsoft.dotnet.darc --version "$darcVersion" --add-source "$arcadeServicesSource" --tool-path $(Agent.ToolsDirectory)\darc -v n
        & $(Agent.ToolsDirectory)\darc\darc add-build-to-channel --default-channels --id $Env:BARBUILDID --publishing-infra-version 3 --skip-assets-publishing --password $(MaestroAccessToken) --azdev-pat $(publishing-dnceng-devdiv-code-r-build-re)
        Write-Host "Added ${{ platform }} bar build id: $Env:BARBUILDID"
      displayName: Add ${{ platform }} build to default darc channel
      # We can't use the global.json located in the root of our repo, because makes it required to use the exact .NET version we're referencing in our eng/Versions.Details.xml file.
      # So in order to not use it, we set the working directory to the parent directory of xamarin-macios.
      workingDirectory: $(Build.SourcesDirectory)\..

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact: post-build-binlogs'
    inputs:
      targetPath: $(Build.ArtifactStagingDirectory)\post-build-binlogs
      artifactName: post-build-binlogs
    condition: succeededOrFailed()
