# Job that will download the change detection artifact, get the github comment, process it (inject gists) and publish it

###########################################################
# WARNING WARNING WARNING WARNING WARNING WARNING WARNING #
###########################################################

# This job is executed on WINDOWS! make sure you DO NOT USE
# bash or linux file paths on scripts. Another important
# details is that System.DefaultWorkingDirectory
# on mac os x points on the top dir while on windows 
# is the checked out dir

steps:

- template: ../common/checkout.yml

# Download the change detection artifact
- task: DownloadPipelineArtifact@2
  displayName: 'Download change detection artifacts'
  inputs:
    patterns: 'change-detection/change-detection.zip'
    allowFailedBuilds: true
    path: $(System.DefaultWorkingDirectory)/Reports

# process the github comment and publish it
- pwsh: |
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY\xamarin-macios\tools\devops\automation\scripts\MaciosCI.psd1

    $rootDirectory = "$Env:SYSTEM_DEFAULTWORKINGDIRECTORY/ChangeDetectionResults"

    $inputContentsPath = Join-Path -Path $rootDirectory -ChildPath "gh-comment.md"
    if (Test-Path $inputContentsPath -PathType leaf) {
      $inputContents = Get-Content -Path $inputContentsPath -Raw
    } else {
      $inputContents = ":fire: Unable to find the contents for the comment :fire"
    }

    $replacementsPath = Join-Path -Path $rootDirectory -ChildPath "gh-comment-fixups.txt"
    if (Test-Path $replacementsPath -PathType leaf) {
      $replacements = Get-Content -Path $replacementsPath
    } else {
      $replacements = @()
    }

    $converted = Convert-Markdown -RootDirectory $rootDirectory -InputContents $inputContents -VSDropsPrefix "$Env:VSDROPS_INDEX"
    $result = $gihubComments.NewCommentFromMessage("Change detection", ":clipboard:", $converted)
  displayName: 'Publish GitHub comment for change detection'
  timeoutInMinutes: 10
  condition: always() # We always want to post something on github
  env:
    GITHUB_TOKEN: $(GitHub.Token)
