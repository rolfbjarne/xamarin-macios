parameters:
- name: enableDotnet
  type: boolean
  default: true

- name: dependsOn
  type: object 
  default: []

- name: isPR
  type: boolean

- name: repositoryAlias
  type: string
  default: self

- name: commit
  type: string
  default: HEAD

stages:
- stage: prepare_release
  displayName: Prepare Release
  dependsOn: ${{ parameters.dependsOn }}
  condition: and(eq(${{ parameters.isPR }}, false), eq(${{ parameters.enableDotnet }}, true))

  jobs:
  # Check - "xamarin-macios (Prepare Release Sign NuGets)"
  - template: sign-artifacts/jobs/v2.yml@yaml-templates
    parameters:
      artifactName: dotnet-signed
      signType: Real
      usePipelineArtifactTasks: true

  # Check - "xamarin-macios (Prepare Release Convert NuGet to MSI)"
  - template: nuget-msi-convert/job/v3.yml@yaml-templates
    parameters:
      yamlResourceName: yaml-templates
      dependsOn: signing
      artifactName: nuget-signed
      propsArtifactName: dotnet-signed
      signType: Real
      useDateTimeVersion: true

  # Check - "xamarin-macios (Prepare Release Push NuGets)"
  - job: push_signed_nugets
    displayName: Push NuGets
    dependsOn: nuget_convert
    variables:
      skipNugetSecurityAnalysis: true
    pool:
      vmImage: windows-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: nuget-signed
        downloadPath: $(Build.SourcesDirectory)/package
        patterns: |
          *.nupkg

    - task: NuGetCommand@2
      displayName: Publish Nugets to dotnet7
      inputs:
        command: push
        packagesToPush: $(Build.SourcesDirectory)/package/*.nupkg
        nuGetFeedType: external
        publishFeedCredentials: dnceng-dotnet7

    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: vs-msi-nugets
        downloadPath: $(Build.SourcesDirectory)/vs-msi-nugets
        patterns: |
          *.nupkg

    - task: NuGetCommand@2
      displayName: Publish VS MSI Nugets to dotnet7
      inputs:
        command: push
        packagesToPush: $(Build.SourcesDirectory)/vs-msi-nugets/*.nupkg
        nuGetFeedType: external
        publishFeedCredentials: dnceng-dotnet7

    - pwsh: |
        mkdir $(Build.SourcesDirectory)/nugets-blob
        cp $(Build.SourcesDirectory)/package/* $(Build.SourcesDirectory)/nugets-blob
        cp $(Build.SourcesDirectory)/vs-msi-nugets/* $(Build.SourcesDirectory)/nugets-blob
      displayName: "Copy content for the nugets blob."

    - template: templates/common/upload-vs-insertion-artifacts.yml@sdk-insertions
      parameters:
        yamlResourceName: yaml-templates
        githubToken: $(GitHub.Token)
        githubContext: $(NupkgCommitStatusName)
        blobName: $(NupkgCommitStatusName)
        packagePrefix: xamarin-macios
        artifactsPath: $(Build.SourcesDirectory)/nugets-blob

    - template: templates/common/upload-vs-insertion-artifacts.yml@sdk-insertions
      parameters:
        yamlResourceName: yaml-templates
        githubToken: $(GitHub.Token)
        githubContext: $(VSDropCommitStatusName)
        blobName: $(VSDropCommitStatusName)
        packagePrefix: xamarin-macios
        artifactsPath: $(Build.SourcesDirectory)/vs-insertion
        downloadSteps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: vsdrop-signed
            downloadPath: $(Build.SourcesDirectory)/vs-insertion

    - template: templates/common/upload-vs-insertion-artifacts.yml@sdk-insertions
      parameters:
        yamlResourceName: yaml-templates
        githubToken: $(GitHub.Token)
        githubContext: $(MultiTargetVSDropCommitStatusName)
        blobName: $(MultiTargetVSDropCommitStatusName)
        packagePrefix: xamarin-macios
        artifactsPath: $(Build.StagingDirectory)\$(MultiTargetVSDropCommitStatusName)
        downloadSteps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: vsdrop-multitarget-signed
            downloadPath: $(Build.StagingDirectory)\$(MultiTargetVSDropCommitStatusName)

# Check - "xamarin-macios (VS Insertion Wait For Approval)"
# Check - "xamarin-macios (VS Insertion Create VS Drop and Open PR)"
- template: vs-insertion/stage/v1.yml@yaml-templates
  parameters:
    dependsOn: prepare_release
    symbolArtifactName: nuget-signed
    symbolConversionFilters: '*mlaunch.app*'
    pushToShippingFeed: true
    nupkgArtifactName: nuget-signed
    msiNupkgArtifactName: vs-msi-nugets
    condition: eq(${{ parameters.isPR }}, false)
