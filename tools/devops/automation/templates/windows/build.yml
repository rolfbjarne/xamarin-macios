parameters:

- name: statusContext
  type: string 
  default: 'Windows Integration Tests'

- name: isPR
  type: boolean

steps:

- template: ../common/checkout.yml
  parameters:
    isPR: ${{ parameters.isPR }}

- pwsh: |
    gci env: | format-table -autosize -wrap
  displayName: 'Dump Environment'

- bash: |
    set -ex
    ssh builder@MAC_AGENT_IP 'ls -la'
  displayName: Diagnostics

- pwsh: |
    Write-Host "Run windows tests."
    Write-Host "Mac agent to be used:"
    Write-Host "Mac agent pool: $Env:MAC_AGENT_POOL"
    Write-Host "Mac agent name: $Env:MAC_AGENT_NAME"
    Write-Host "Mac agent IP: $Env:MAC_AGENT_IP"
  displayName: Run tests

- pwsh: |
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY\xamarin-macios\tools\devops\automation\scripts\MaciosCI.psd1

    $gihubComments = New-GitHubCommentsObject -Org "xamarin" -Repo "xamarin-macios" -Token $Env:GITHUB_TOKEN -Hash $Env:GIT_HASH -Debug
    $sb = [System.Text.StringBuilder]::new()
    $sb.AppendLine("Reporting in from the Windows integration tests")
    $sb.AppendLine()
    $sb.AppendLine("Current status: $($Env:AGENT_JOBSTATUS)")
    $result = $gihubComments.NewCommentFromMessage("Test results", ":sparkles:", $sb.ToString())
  displayName: 'Add GitHub comment'
  env:
    CONTEXT: ${{ parameters.statusContext }}
    DEVICE_PREFIX: windows-integration-tests
    GITHUB_TOKEN: $(GitHub.Token)
    ACCESSTOKEN: $(System.AccessToken)
  condition: always()

- pwsh: |
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY\xamarin-macios\tools\devops\automation\scripts\MaciosCI.psd1
    $vsts = New-VSTS -Org "devdiv" -Project "DevDiv" -Token $(DropsPAT)

    # get the pool and the agent objects and disable the bot
    $pool = $vsts.Pools.GetPool("$Env:MAC_AGENT_POOL")
    $agent = $vsts.Agents.GetAgent($pool, $Env:MAC_AGENT_NAME)
    $vsts.Agents.SetEnabled($pool, $agent, $True)
  displayName: 'Re-enabled macOS bot from pool'
  condition: always()
