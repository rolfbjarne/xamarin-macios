# template that contains all the different steps to create a pkgs, publish the results and provide feedback to the
# developers in github.
parameters:
- name: vsdropsPrefix
  type: string

- name: keyringPass
  type: string

- name: gitHubToken
  type: string

- name: xqaCertPass
  type: string

- name: pool
  type: string
  default: automatic

- name: isPR
  type: boolean

- name: repositoryAlias
  type: string
  default: self

- name: commit
  type: string
  default: HEAD

- name: xcodeChannel
  type: string

- name: macOSName
  type: string

jobs:
# Detect changes
- job: api_diff
  displayName: 'Detect API changes'
  timeoutInMinutes: 1000
  variables:
    ${{ if eq(parameters.pool, 'automatic') }}:
      AgentPoolComputed: $[ stageDependencies.configure_build.AgentPoolSelector.outputs['setAgentPool.AgentPoolComputed'] ]
    ${{ if eq(parameters.pool, 'ci') }}:
      AgentPoolComputed: $(CIBuildPool)
    ${{ if eq(parameters.pool, 'pr') }}:
      AgentPoolComputed: $(PRBuildPool)
    PR_ID: $[ stageDependencies.configure_build.configure.outputs['labels.pr_number'] ]
    # set the branch variable name, this is required by jenkins and we have a lot of scripts that depend on it
    BRANCH_NAME: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
    XHARNESS_LABELS: $[ stageDependencies.configure_build.configure.outputs['labels.xharness_labels'] ]
  pool:
    name: $(AgentPoolComputed)
    demands:
    - Agent.OS -equals Darwin
    - macOS.Name -equals ${{ parameters.macOSName }}
    - XcodeChannel -equals ${{ parameters.xcodeChannel }}
  workspace:
    clean: all

  # build the source code and compute the api diffs
  steps:
  - template: api-diff-build-and-detect.yml
    parameters:
      isPR: ${{ parameters.isPR }}
      repositoryAlias: ${{ parameters.repositoryAlias }}
      commit: ${{ parameters.commit }}
      vsdropsPrefix: ${{ parameters.vsdropsPrefix }}
      keyringPass: ${{ parameters.keyringPass }}
      gitHubToken: ${{ parameters.gitHubToken }}
      xqaCertPass: ${{ parameters.xqaCertPass }}
      prID: variables['PrID']

# Upload results to vsdrops & publish to github
- job: publish_change_detection_results
  displayName: 'Upload / Publish change detection results to VSDrops / GitHub'
  timeoutInMinutes: 1000
  dependsOn: # can start as soon as the api diff is done
  - api_diff
  condition: or(eq(dependencies.api_diff.result, 'Succeeded'), eq(dependencies.api_diff.result, 'SucceededWithIssues'))
  pool:
    vmImage: 'windows-latest'
    workspace:
      clean: all
  variables:
    GIT_HASH: $[ dependencies.api_diff.outputs['fix_commit.GIT_HASH'] ]
  steps:
  - template: api-diff-process-results.yml
    parameters:
      isPR: ${{ parameters.isPR }}
      repositoryAlias: ${{ parameters.repositoryAlias }}
      commit: ${{ parameters.commit }}
