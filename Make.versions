#
# A release branch requires updating the following six variables at the bottom of this file:
#
# IOS_PACKAGE_VERSION (major/minor/revision #)
# MAC_PACKAGE_VERSION (major/minor/revision #)
#
# IOS_NUGET_VERSION (major/minor/patch #)
# TVOS_NUGET_VERSION (major/minor/patch #)
# WATCHOS_NUGET_VERSION (major/minor/patch #)
# MACOS_NUGET_VERSION (major/minor/patch #)
#
# Update version numbers on main as well, to the next version
#

#
# ** Version numbers **
#
# Versions are defined as: Major.Minor.Revison.Build
#
# Major/minor (first/second numbers - max 2 digits each):
# - Bump for major/minor releases.
#
# Revision (third number - max 2 digits):
# - Reset to 0 after a major or minor bump (do not use 99 for Xcode preview
#   branches (use 0 instead), because otherwise we can't bump it further if
#   needed).
# - Bump for service releases and previews.
# - Bump if commit distance becomes > 999.
# - Can also be bumped for other reasons (in particular there's no correlation
#   between Preview/Service Release #X and Revision #Y).
#   - Bumping revision to a high enough number to make it clear that there's
#     no correlation is a valid reason to bump.
# - The revision must be bumped at the same time for both iOS and Mac
#   (otherwise the commit distance will differ).
# - Also bump if the [IOS|MAC]_PACKAGE_VERSION lines change for any other
#   reason (otherwise we end up with repeating version numbers, since the
#   commit distance would restart at 0, while the other numbers wouldn't
#   change).
# - Any other problem can also usually be solved by bumping the revision.
# - Do not refactor the revision to a separate variable, because the reason
#   bumping the revision is a general solution for many problems is that it
#   also resets the commit distance (which wouldn't happen if the revision was
#   refactored to a separate variable).
#
# Build (fourth number - max 3 digits):
# - Automatically calculated as the number of commits since the last time any
#   of the other three numbers changed (technically since the corresponding
#   line changed in git).
#

IOS_PACKAGE_VERSION=16.5.0.$(IOS_COMMIT_DISTANCE)
MAC_PACKAGE_VERSION=9.4.0.$(MAC_COMMIT_DISTANCE)

#
# ** NuGet package version numbers **
#
# See dotnet/VERSIONS.md.
#
# Rules:
# * The first two numbers represent the major and minor version of the corresponding OS.
# * A third number will be added later (the commit distance).
#
# IMPORTANT: There must be *no* managed API differences unless the two first
# numbers (major.minor) changes.

# WARNING: Do **not** use versions higher than the available Xcode SDK or else we will have issues with mtouch (See https://github.com/xamarin/xamarin-macios/issues/7705)

IOS_NUGET_OS_VERSION=16.4
TVOS_NUGET_OS_VERSION=16.4
WATCHOS_NUGET_OS_VERSION=9.4
MACOS_NUGET_OS_VERSION=13.3
MACCATALYST_NUGET_OS_VERSION=16.4


# Defines the default platform version if it's not specified in the TFM. The default should not change for a given .NET version:
# * We release support for iOS 14.5 with .NET 6
# * Apple releases iOS 15.0, we're still using .NET 6. This default continues to be iOS 14.5
# * .NET 7 is shipped, and at this point we bump the default to iOS 15.0
# Basically: this should be the last OS version of the platform in question when the current major .NET version is first released to stable.
# Ref: https://github.com/dotnet/designs/blob/8e6394406d44f75f30ea2259a425cb9e38d75b69/accepted/2020/net5/net5.md#os-versions

DEFAULT_TARGET_PLATFORM_VERSION_IOS=16.4
DEFAULT_TARGET_PLATFORM_VERSION_TVOS=16.4
DEFAULT_TARGET_PLATFORM_VERSION_WATCHOS=9.1
DEFAULT_TARGET_PLATFORM_VERSION_MACOS=13.3
DEFAULT_TARGET_PLATFORM_VERSION_MACCATALYST=16.4

DEFAULT_TARGET_PLATFORM_VERSIONS_IOS+=$(DOTNET_TFM)_$(DEFAULT_TARGET_PLATFORM_VERSION_IOS)
DEFAULT_TARGET_PLATFORM_VERSIONS_TVOS+=$(DOTNET_TFM)_$(DEFAULT_TARGET_PLATFORM_VERSION_TVOS)
DEFAULT_TARGET_PLATFORM_VERSIONS_MACOS+=$(DOTNET_TFM)_$(DEFAULT_TARGET_PLATFORM_VERSION_MACOS)
DEFAULT_TARGET_PLATFORM_VERSIONS_MACCATALYST+=$(DOTNET_TFM)_$(DEFAULT_TARGET_PLATFORM_VERSION_MACCATALYST)

# List the releases we support for each platform.
#
# Format: space-separated list of TargetFramework-OSVersion
#
# Example:
#
#    SUPPORTED_API_VERSIONS_IOS=net7.0-16.1 net7.0-16.4
#
# This means the iOS workload shipped from the current branch supports projects with:
#    <TargetFramework>net7.0-16.1</TargetFramework>
# and
#    <TargetFramework>net7.0-16.4</TargetFramework>
# and even:
#    <TargetFrameworks>net7.0-16.1;net7.0-16.4</TargetFrameworks>
#
# When shipping support for a preview Xcode, we might add entries here for a preview release into a stable release.
#
# Example:
#
#     SUPPORTED_API_VERSIONS_IOS=net8.0-17.0
#
# If the current branch is stable .NET 8 using Xcode 14.3 (aka iOS 16.4), this
# would add support for trying the preview release by doing:
#
#     <TargetFramework>net8.0-17.0</TargetFramework>
#     <EnablePreviewFeatures>true</EnablePreviewFeatures>
#
# Note that any SUPPORTED_API_VERSIONS entry below for older OS versions need a corresponding entry in
# the eng/Version.Details.xml and eng/Versions.props files.
#
# We also need to list the default platform version for each .NET version.
# We use the DEFAULT_TARGET_PLATFORM_VERSIONS_<PLATFORM> variables for this
# purpose. The default platform version for the current branch is automatically
# added above, but we need to manually define this for older .NET versions we
# support below. The format is a space-separated list of DOTNET_TFM:DEFAULT_TARGET_PLATFORM_VERSION.
#


# First add the versions for the current branch. DO NOT TOUCH THIS. Add older branches below.

SUPPORTED_API_VERSIONS_IOS=$(DOTNET_TFM)-$(IOS_NUGET_OS_VERSION)
SUPPORTED_API_VERSIONS_TVOS=$(DOTNET_TFM)-$(TVOS_NUGET_OS_VERSION)
SUPPORTED_API_VERSIONS_MACOS=$(DOTNET_TFM)-$(MACOS_NUGET_OS_VERSION)
SUPPORTED_API_VERSIONS_MACCATALYST=$(DOTNET_TFM)-$(MACCATALYST_NUGET_OS_VERSION)

# Add older versions here!

## This is a subscription to the Xcode 13.3/14.0 version of our packages released with the initial release of .NET 7
## This also needs corresponding entries in eng/Version.Details.xml and eng/Versions.props
SUPPORTED_API_VERSIONS_IOS+=net7.0-16.0
SUPPORTED_API_VERSIONS_TVOS+=net7.0-16.0
SUPPORTED_API_VERSIONS_MACOS+=net7.0-12.3
SUPPORTED_API_VERSIONS_MACCATALYST+=net7.0-15.4

## This is a subscription to the Xcode 14.3 version of our packages
## This also needs corresponding entries in eng/Version.Details.xml and eng/Versions.props
SUPPORTED_API_VERSIONS_IOS+=net7.0-16.4
SUPPORTED_API_VERSIONS_TVOS+=net7.0-16.4
SUPPORTED_API_VERSIONS_MACOS+=net7.0-13.3
SUPPORTED_API_VERSIONS_MACCATALYST+=net7.0-16.4

# The default target platform version for each .NET version

DEFAULT_TARGET_PLATFORM_VERSIONS_IOS+=net7.0_16.4
DEFAULT_TARGET_PLATFORM_VERSIONS_TVOS+=net7.0_16.4
DEFAULT_TARGET_PLATFORM_VERSIONS_MACOS+=net7.0_13.3
DEFAULT_TARGET_PLATFORM_VERSIONS_MACCATALYST+=net7.0_16.4
