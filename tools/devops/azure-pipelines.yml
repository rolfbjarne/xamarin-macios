trigger:
  - main

jobs:
- job: macOS
  displayName: xamarin macios
  timeoutInMinutes: 120

  pool:
    name: 'Azure Pipelines'
    vmImage: 'internal-macos-10.15'

  steps:
  - task: InstallSSHKey@0
    inputs:
      hostName: $(github-hostname)
      sshPublicKey: $(github-pubkey)
      sshPassphrase: $(github-sec)
      sshKeySecureFile: $(github-file)

  - bash: |
      echo "Setting up maccore..."
      ./configure --enable-xamarin
      make reset-maccore
    displayName: "Setting up maccore..."

  - bash: |
      echo "Setting up prerequisites from brew..."
      brew install libtool autoconf automake bison flex p7zip
    displayName: "Setting up prerequisites from brew..."

  - task: xamops.azdevex.provisionator-task.provisionator@1
    displayName: Provisionate external-deps.csx
    inputs:
      provisioning_script: $(System.DefaultWorkingDirectory)/../maccore/tools/devops/external-deps.csx
      provisioning_extra_args: '-vvvv'

  - bash: |
      echo "Setting up build system dependencies..."
      ./system-dependencies.sh --provision-all
    displayName: "Setting up build system dependencies..."

  - bash: |
      echo "Build the World..."
      ln -sf $SYSTEM_DEFAULTWORKINGDIRECTORY $SYSTEM_DEFAULTWORKINGDIRECTORY/../xamarin-macios
      make world
    displayName: "Build the World..."

  - bash: |
      echo "Create Packages..."
      rm -Rf ../package
      make package
      cp ../package/*.* $BUILD_ARTIFACTSTAGINGDIRECTORY
    displayName: "Create Packages..."

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: "macios-packages"

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: "Component Detection"

# CredScan is Windows Only
- job: Windows
  displayName: "CredScan - No Build"

  pool:
    vmImage: "vs2017-win2016"

  steps:
  - task: InstallSSHKey@0
    inputs:
      hostName: $(github-hostname)
      sshPublicKey: $(github-pubkey)
      sshPassphrase: $(github-sec)
      sshKeySecureFile: $(github-file)

  - bash: |
      echo "Setting up maccore..."
      repo=$(grep -m 1 "MACCORE_MODULE" "$SYSTEM_DEFAULTWORKINGDIRECTORY/mk/xamarin.mk" | cut -d'=' -f2 | awk '{$1=$1};1')
      branch=$(grep "NEEDED_MACCORE_BRANCH" "$SYSTEM_DEFAULTWORKINGDIRECTORY/mk/xamarin.mk" | cut -d'=' -f2 | awk '{$1=$1};1')
      git clone -b $branch $repo $SYSTEM_DEFAULTWORKINGDIRECTORY/../maccore
    displayName: "Setting up maccore..."

  - task: CredScan@3
    displayName: "Run CredScan"
    inputs:
      suppressionsFile: '$(System.DefaultWorkingDirectory)/../maccore/tools/devops/CredScanSuppressions.json'

  - task: PoliCheck@1
    inputs:
      inputType: 'Basic'
      targetType: 'F'
      targetArgument: '$(Build.SourcesDirectory)'
      result: 'PoliCheck.xml'
      optionsUEPATH: '$(System.DefaultWorkingDirectory)/../maccore/tools/devops/PoliCheckExclusions.xml'

  - task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@1
    displayName: 'Post Analysis'
    inputs:
      CredScan: true
      PoliCheck: true
