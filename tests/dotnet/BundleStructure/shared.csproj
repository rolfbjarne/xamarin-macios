<?xml version="1.0" encoding="utf-8"?>
<Project>
	<PropertyGroup>
		<OutputType>Exe</OutputType>

		<ApplicationTitle>BundleStructure</ApplicationTitle>
		<ApplicationId>com.xamarin.bundlestructure</ApplicationId>
		<ApplicationVersion>1.0</ApplicationVersion>

		<AppManifestDetectionEnabled>false</AppManifestDetectionEnabled>
	</PropertyGroup>

	<Import Project="../../common/shared-dotnet.csproj" />

	<ItemGroup>
		<Compile Include="../*.cs" />

		<!-- None items -->

		<!-- Set CopyToOutputDirectory=true for some items with different extensions -->
		<None Update="NoneA.txt">
			<!-- Not bundled; warning -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="NoneB.dll">
			<!-- Bundled -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="NoneB.pdb">
			<!-- Bundled -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="NoneB.dll.mdb">
			<!-- Bundled -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="NoneB.config">
			<!-- Bundled -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="NoneC.pdb">
			<!-- No matching NoneC.dll, but still bundled. -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="NoneD.exe">
			<!-- Bundled -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Include="$(RootTestsDirectory)/test-libraries/libraries/.libs/$(RuntimeIdentifier)/libNoneE.dylib">
			<!-- Bundled, linked with -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Include="$(RootTestsDirectory)/test-libraries/libraries/.libs/$(RuntimeIdentifier)/libNoneF.a">
			<!-- Not bundled; linked with -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="Sub/NoneG.txt">
			<!-- Not bundled; warning -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>

		<!-- From outside the project directory -->
		<None Include="../NoneH.txt">
			<!-- Not bundled, warning: The file '[...]/xamarin-macios/tests/dotnet/BundleStructure/NoneH.txt' does not specify a 'PublishFolderType' metadata, and a default value could not be calcuated. The file will not be copied to the app bundle. -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>

		<!-- With Link -->
		<None Update="NoneI.txt">
			<!-- Not bundled; warning -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Link>Somewhere/I.txt</Link>
		</None>

		<!-- With Link + relative path -->
		<None Update="NoneJ.txt">
			<!-- Not bundled; warning -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Link Condition=" $(TargetFramework.EndsWith('-macos'))">../Somewhere/Else/NoneJ.txt</Link>
			<Link Condition="!$(TargetFramework.EndsWith('-macos'))">Contents/Somewhere/Else/NoneJ.txt</Link>
		</None>
		<!-- CopyToPublishDirectory instead of CopyToOutputDirectory -->
		<None Update="NoneK.txt">
			<!-- Not bundled; warning -->
			<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
		</None>
		<!-- .config file without a related assembly (should be copied) -->
		<None Update="NoneL.config">
			<!-- Bundled -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<!-- unknown file (should not be copied, warning should be shown) -->
		<None Update="NoneM.unknown">
			<!-- Not bundled; warning -->
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<!-- png image -->
		<!-- bundled -->
		<None Include="$(RootTestsDirectory)/monotouch-test/basn3p08.png" CopyToOutputDirectory="PreserveNewest" />

		<!-- jpg image -->
		<!-- bundled -->
		<None Include="$(RootTestsDirectory)/msbuild/Xamarin.MacDev.Tasks.Tests/Resources/iTunesArtwork.jpg" CopyToOutputDirectory="PreserveNewest" />

		<!-- Unknown files of 'None' items with specific 'PublishFolderType' set -->

		<None Update="UnknownA.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="None" />
		<None Update="UnknownB.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="Assembly" />
		<None Update="UnknownC.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="Resource" />
		<None Update="UnknownD.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="AppleFramework" />
		<None Update="UnknownE.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="CompressedAppleFramework" />
		<None Update="UnknownF.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="AppleBindingResource" />
		<None Update="UnknownG.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="PlugIns" />
		<None Update="UnknownH.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="CompressedPlugIns" />
		<None Update="UnknownI.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="Unknown" />
		<None Update="UnknownJ.bin" CopyToOutputDirectory="PreserveNewest" PublishFolderType="RootDirectory" />

		<None Update="SomewhatUnknownA.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownA.bin" PublishFolderType="None" />
		<None Update="SomewhatUnknownB.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownB.bin" PublishFolderType="Assembly" />
		<None Update="SomewhatUnknownC.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownC.bin" PublishFolderType="Resource" />
		<None Update="SomewhatUnknownD.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownD.bin" PublishFolderType="AppleFramework" />
		<None Update="SomewhatUnknownE.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownE.bin" PublishFolderType="CompressedAppleFramework" />
		<None Update="SomewhatUnknownF.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownF.bin" PublishFolderType="AppleBindingResource" />
		<None Update="SomewhatUnknownG.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownG.bin" PublishFolderType="PlugIns" />
		<None Update="SomewhatUnknownH.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownH.bin" PublishFolderType="CompressedPlugIns" />
		<None Update="SomewhatUnknownI.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownI.bin" PublishFolderType="Unknown" />
		<None Update="SomewhatUnknownJ.bin" CopyToOutputDirectory="PreserveNewest" Link="Subfolder/SomewhatKnownJ.bin" PublishFolderType="RootDirectory" />

		<!-- Content items -->

		<!-- Content without any metadata -->
		<Content Include="ContentA.txt" />
		<!-- Content with CopyToOutputDirectory -->
		<Content Include="ContentB.txt">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
		<!-- Content with CopyToPublishDirectory -->
		<Content Include="ContentC.txt">
			<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
		</Content>

		<!-- EmbeddedResource items -->

		<!-- Content without any metadata -->
		<EmbeddedResource Include="EmbeddedResourceA.txt" />
		<!-- Content with CopyToOutputDirectory -->
		<EmbeddedResource Include="EmbeddedResourceB.txt">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</EmbeddedResource>
		<!-- Content with CopyToPublishDirectory -->
		<EmbeddedResource Include="EmbeddedResourceC.txt">
			<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
		</EmbeddedResource>

		<!-- BundleResource items -->

		<!-- Content without any metadata -->
		<BundleResource Include="BundleResourceA.txt" />
		<!-- Content with CopyToOutputDirectory -->
		<BundleResource Include="BundleResourceB.txt">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</BundleResource>
		<!-- Content with CopyToPublishDirectory -->
		<BundleResource Include="BundleResourceC.txt">
			<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
		</BundleResource>

		<None Remove="@(Content)" />
		<None Remove="@(EmbeddedResource)" />
	</ItemGroup>

	<!--
		Frameworks
	-->

	<ItemGroup>
		<!-- This is a NuGet with multiple frameworks (either .framework directories or .framework.zip files depending on the platform) in the runtimes/<rid>/native folder
			This package brings in:
			* FrameworksInRuntimesNativeDirectory1.framework
			* FrameworksInRuntimesNativeDirectory2.framework
		-->
		<PackageReference Include="Xamarin.Tests.FrameworksInRuntimesNativeDirectory" Version="1.0.0" />
	</ItemGroup>

	<!-- Only uncompressed for mobile platforms, because macOS and Mac Catalyst frameworks have symlinks, which MSBuild doesn't handle very well, so for now we're just supporting compressed versions in that case -->
	<ItemGroup Condition="!($(TargetFramework.EndsWith('-macos')) Or $(TargetFramework.EndsWith('-maccatalyst')))">
		<!-- native framework (unzipped) -->
		<None Include="$(RootTestsDirectory)/test-libraries/xtest2/.libs/$(RuntimeIdentifier)/FrameworkTest2.framework/**/*" CopyToOutputDirectory="PreserveNewest" />

		<!-- native xcframework (unzipped) -->
		<None Include="$(RootTestsDirectory)/test-libraries/xtest2/.libs/$(RuntimeIdentifier)/FrameworkTest3.xcframework/**/*" CopyToOutputDirectory="PreserveNewest" />
	</ItemGroup>

	<ItemGroup>
		<!-- native framework (zipped) -->
		<!-- should be unzipped, linked with, and bundled -->
		<None Include="$(RootTestsDirectory)/test-libraries/xtest2/.libs/$(RuntimeIdentifier)/FrameworkTest4.framework.zip" CopyToOutputDirectory="PreserveNewest" />

		<!-- native xcframework (zipped) -->
		<!-- should be unzipped, linked with, and bundled -->
		<None Include="$(RootTestsDirectory)/test-libraries/xtest2/.libs/FrameworkTest5.xcframework.zip" CopyToOutputDirectory="PreserveNewest" />
	</ItemGroup>

	<ItemGroup>
		<!-- The bindings-framework-test project contains (next to the binding assembly):
			*.resources/* files for iOS and tvOS
			*.resources.zip for macOS and Mac Catalyst
		 -->
		<ProjectReference Include="$(RootTestsDirectory)/bindings-framework-test/dotnet/$(_PlatformName)/bindings-framework-test.csproj" />
	</ItemGroup>

</Project>
